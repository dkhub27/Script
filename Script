--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v91=0;while true do if (v91==0) then v19=v0(v3(v30,1,1));return "";end end else local v92=v2(v0(v30,16));if v19 then local v112=0;local v113;while true do if (v112==1) then return v113;end if (v112==0) then v113=v5(v92,v19);v19=nil;v112=1;end end else return v92;end end end);local function v20(v31,v32,v33) if v33 then local v93=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 64)))) + ((1809 -(282 + 595)) -(857 + 74)))) ;return v93-(v93%((2206 -(1523 + 114)) -(330 + 37 + 201))) ;else local v94=(929 -((304 -90) + 713))^(v32-(1 + 0)) ;return (((v31%(v94 + v94))>=v94) and 1) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0;local v36;local v37;while true do if (v35==(1066 -(68 + 997))) then return (v37 * (1526 -(226 + 1044))) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + (959 -((1637 -745) + 65)) );v18=v18 + (8 -6) ;v35=118 -(32 + 85) ;end end end local function v23() local v38=350 -(87 + 263) ;local v39;local v40;local v41;local v42;while true do if ((181 -(67 + (204 -91)))==v38) then return (v42 * (12302277 + 4474939)) + (v41 * 65536) + (v40 * (628 -372)) + v39 ;end if (v38==(0 + 0 + 0)) then v39,v40,v41,v42=v1(v16,v18,v18 + (11 -8) );v18=v18 + (956 -(802 + 150)) ;v38=2 -1 ;end end end local function v24() local v43=997 -(915 + 82) ;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(2 -1)) then v46=1 + 0 ;v47=(v20(v45,1 -0 ,20) * ((1189 -(1069 + (491 -373)))^(72 -40))) + v44 ;v43=2 + 0 ;end if (v43==(6 -3)) then if (v48==0) then if (v47==(0 + (0 -0))) then return v49 * 0 ;else local v120=(0 -0) -0 ;while true do if ((0 + 0)==v120) then v48=(1651 -(814 + 45)) -(368 + 423) ;v46=0;break;end end end elseif (v48==(6433 -4386)) then return ((v47==(18 -(10 + 8))) and (v49 * ((3 -(4 -2))/0))) or (v49 * NaN) ;end return v8(v49,v48-((79 + 1386) -(416 + 10 + 16)) ) * (v46 + (v47/((6 -4)^(23 + 29)))) ;end if (v43==2) then v48=v20(v45,36 -15 ,469 -(145 + 293) );v49=((v20(v45,462 -(44 + 386) )==(1487 -(998 + 488))) and  -1) or (1 + 0) ;v43=3 + 0 ;end if (v43==(772 -(201 + (1456 -(261 + 624))))) then v44=v23();v45=v23();v43=1139 -(116 + 1022) ;end end end local function v25(v50) local v51;if  not v50 then v50=v23();if (v50==(1423 -(630 + 793))) then return "";end end v51=v3(v16,v18,(v18 + v50) -(1 -0) );v18=v18 + v50 ;local v52={};for v68=1081 -(1020 + 60) , #v51 do v52[v68]=v2(v1(v3(v51,v68,v68)));end return v6(v52);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v95,v96,v97,v98,v99,v100,v101,v102,v103) local v104=(function() return 0 + 0 ;end)();local v95=(function() return;end)();local v96=(function() return;end)();while true do if (v104~=(0 + 0)) then else v95=(function() return 0;end)();v96=(function() return nil;end)();v104=(function() return 1 + 0 ;end)();end if ((1 -0)==v104) then while true do if (v95==0) then v96=(function() return v97();end)();if (v98(v96, #"}", #"}")==(0 -0)) then local v125=(function() return 0 + 0 ;end)();local v126=(function() return;end)();local v127=(function() return;end)();local v128=(function() return;end)();local v129=(function() return;end)();while true do if (v125~=(1636 -(1373 + 263))) then else local v130=(function() return 0;end)();local v131=(function() return;end)();while true do if (v130~=0) then else v131=(function() return 0;end)();while true do if ((1001 -(451 + 549))==v131) then v125=(function() return 1 + 0 ;end)();break;end if ((0 + 0)==v131) then v126=(function() return 0;end)();v127=(function() return nil;end)();v131=(function() return 1 -0 ;end)();end end break;end end end if (v125~=(1 + 1)) then else while true do if (v126~=(2 -0)) then else local v135=(function() return 1384 -(746 + 638) ;end)();local v136=(function() return;end)();while true do if ((529 -(406 + 123))~=v135) then else v136=(function() return 1769 -(1749 + 20) ;end)();while true do if (v136~=(1 + 0)) then else v126=(function() return  #"xxx";end)();break;end if (v136==0) then if (v98(v128, #"{", #"}")== #",") then v129[2]=(function() return v99[v129[2]];end)();end if (v98(v128,1324 -(1249 + 73) ,2 -0 )== #"\\") then v129[ #"19("]=(function() return v99[v129[ #"19("]];end)();end v136=(function() return 1;end)();end end break;end end end if (v126~=(1145 -(466 + 679))) then else local v137=(function() return 341 -(218 + 123) ;end)();local v138=(function() return;end)();while true do if (v137==(1581 -(1535 + 46))) then v138=(function() return 0;end)();while true do if (v138==(0 + 0)) then v127=(function() return v98(v96,1 + 1 , #"xnx");end)();v128=(function() return v98(v96, #"http",566 -(306 + 254) );end)();v138=(function() return 1901 -(106 + 1794) ;end)();end if (1==v138) then v126=(function() return  #"}";end)();break;end end break;end end end if ( #"xxx"==v126) then if (v98(v128, #"gha", #"-19")~= #"|") then else v129[ #".com"]=(function() return v99[v129[ #"?id="]];end)();end v100[v101]=(function() return v129;end)();break;end if (v126~= #"|") then else local v140=(function() return 0 + 0 ;end)();local v141=(function() return;end)();while true do if (0~=v140) then else v141=(function() return 0 + 0 ;end)();while true do if (v141==(1 -0)) then v126=(function() return 2;end)();break;end if (v141==(1467 -(899 + 568))) then v129=(function() return {v102(),v102(),nil,nil};end)();if (v127==(0 -0)) then local v360=(function() return 114 -(4 + 110) ;end)();local v361=(function() return;end)();while true do if (v360==(0 + 0)) then v361=(function() return 1427 -(41 + 1386) ;end)();while true do if (v361==(0 -0)) then v129[ #"91("]=(function() return v102();end)();v129[ #"xnxx"]=(function() return v102();end)();break;end end break;end end elseif (v127== #" ") then v129[ #"91("]=(function() return v103();end)();elseif (v127==(105 -(17 + 86))) then v129[ #"-19"]=(function() return v103() -((605 -(268 + 335))^(306 -(60 + 230))) ;end)();elseif (v127== #"nil") then local v378=(function() return 0 -0 ;end)();local v379=(function() return;end)();while true do if ((166 -(122 + 44))~=v378) then else v379=(function() return 0 -0 ;end)();while true do if (v379~=(0 -0)) then else v129[ #"91("]=(function() return v103() -((574 -(426 + 146))^16) ;end)();v129[ #"xnxx"]=(function() return v102();end)();break;end end break;end end end v141=(function() return 1 + 0 ;end)();end end break;end end end end break;end if (v125~=1) then else local v132=(function() return 0 + 0 ;end)();local v133=(function() return;end)();while true do if (v132~=(0 -0)) then else v133=(function() return 1456 -(282 + 1174) ;end)();while true do if (v133==(65 -(30 + 35))) then v128=(function() return nil;end)();v129=(function() return nil;end)();v133=(function() return 1 + 0 ;end)();end if (v133~=(812 -(569 + 242))) then else v125=(function() return 7 -5 ;end)();break;end end break;end end end end end break;end end return v95,v96,v97,v98,v99,v100,v101,v102,v103;end end end;end)();local v54=(function() return function(v105,v106,v107) local v108=(function() return 0;end)();local v109=(function() return;end)();while true do if ((1212 -(323 + 889))==v108) then v109=(function() return 0;end)();while true do if (v109~=(0 -0)) then else local v123=(function() return 580 -(361 + 219) ;end)();local v124=(function() return;end)();while true do if (v123~=(320 -(53 + 267))) then else v124=(function() return 0;end)();while true do if (v124~=(0 + 0)) then else v105[v106-#"|" ]=(function() return v107();end)();return v105,v106,v107;end end break;end end end end break;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v70= #"<",v59 do local v71=(function() return 0;end)();local v72=(function() return;end)();local v73=(function() return;end)();local v74=(function() return;end)();while true do if (v71==(1252 -(721 + 530))) then v74=(function() return nil;end)();while true do if (v72==(1272 -(945 + 326))) then if (v73== #":") then v74=(function() return v21()~=(0 -0) ;end)();elseif (v73==2) then v74=(function() return v24();end)();elseif (v73~= #"19(") then else v74=(function() return v25();end)();end v60[v70]=(function() return v74;end)();break;end if ((413 -(15 + 398))==v72) then local v122=(function() return 982 -(18 + 964) ;end)();while true do if (v122~=(1 + 0)) then else v72=(function() return 1;end)();break;end if (v122==(0 + 0)) then v73=(function() return v21();end)();v74=(function() return nil;end)();v122=(function() return 701 -(271 + 429) ;end)();end end end end break;end if (v71==0) then v72=(function() return 0 + 0 ;end)();v73=(function() return nil;end)();v71=(function() return 1501 -(1408 + 92) ;end)();end end end v58[ #"91("]=(function() return v21();end)();for v75= #"{",v23() do FlatIdent_C460,Descriptor,v21,v20,v60,v55,v75,v22,v23=(function() return v53(FlatIdent_C460,Descriptor,v21,v20,v60,v55,v75,v22,v23);end)();end for v76= #"{",v23() do v56,v76,v28=(function() return v54(v56,v76,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[851 -(20 + 830) ];local v66=v62[4 -2 ];local v67=v62[2 + 1 + 0 + 0 ];return function(...) local v77=v65;local v78=v66;local v79=v67;local v80=v27;local v81=127 -(116 + 10 + 0) ;local v82= -(1 + 0);local v83={};local v84={...};local v85=v12("#",...) -1 ;local v86={};local v87={};for v110=0 -0 ,v85 do if (v110>=v79) then v83[v110-v79 ]=v84[v110 + 1 + 0 ];else v87[v110]=v84[v110 + 1 ];end end local v88=(v85-v79) + 1 + 0 ;local v89;local v90;while true do local v111=0 + 0 ;while true do if ((126<=3482) and (v111==(2 -1))) then if (v90<=(79 -48)) then if (v90<=((5986 -4420) -((2615 -1489) + 425))) then if ((v90<=(412 -((669 -(83 + 468)) + 287))) or (2374==4374)) then if (v90<=((1817 -(1202 + 604)) -8)) then if ((1575==1575) and (v90<=1)) then if ((v90>(1121 -(118 + 1003))) or (2970>=4542)) then v87[v89[1 + 1 ]]=v89[3]~=(0 -0) ;elseif ((v89[379 -((662 -520) + 235) ]==v87[v89[(29 -11) -(38 -24) ]]) or (2234==1455)) then v81=v81 + (326 -(45 + 280)) ;else v81=v89[1 + 1 + 1 ];end elseif ((252<=1977) and (v90>2)) then if ((v87[v89[2]]==v89[4]) or (1436==3775)) then v81=v81 + ((944 + 34) -(553 + 424)) ;else v81=v89[3];end else v87[v89[3 -1 ]]=v87[v89[3 + 0 + 0 ]][v89[4 + 0 + 0 ]];end elseif ((v90<=(3 + 2)) or (1067>1779)) then if (v90==(2 + 2)) then v87[v89[2 + 0 + 0 ]]=v63[v89[6 -3 ]];elseif ((2161>=934) and (v87[v89[5 -(1 + 2) ]]==v87[v89[(14 -6) -4 ]])) then v81=v81 + 1 + 0 ;else v81=v89[14 -(1922 -(340 + 1571)) ];end elseif (v90==6) then local v147=(298 + 455) -(239 + 514) ;local v148;local v149;while true do if ((1612==1612) and (v147==(0 + 0))) then v148=v89[2];v149={};v147=1330 -(797 + 532) ;end if (v147==1) then for v335=(1773 -(1733 + 39)) + 0 , #v86 do local v336=v86[v335];for v352=0, #v336 do local v353=v336[v352];local v354=v353[1 + 0 ];local v355=v353[4 -2 ];if ((4352>=2833) and (((v354==v87) and (v355>=v148)) or (1618<930))) then local v362=1202 -(373 + 829) ;while true do if (v362==(731 -(476 + 255))) then v149[v355]=v354[v355];v353[2 -1 ]=v149;break;end end end end end break;end end else local v150=(2988 -(673 + 1185)) -(369 + (1795 -(125 + 909))) ;local v151;while true do if (((4723>4153) and (v150==((1948 -(1096 + 852)) + 0))) or (3222<3073)) then v151=v89[(1 + 1) -0 ];v87[v151](v87[v151 + 1 ]);break;end end end elseif ((744<=2942) and ((v90<=(20 -9)) or (3654>=4654))) then if ((951<=1496) and (v90<=(247 -(64 + 174)))) then if ((v90==(2 + 6)) or (1833<=1322)) then local v152=v89[(5 -3) -0 ];local v153={v87[v152](v13(v87,v152 + (217 -(42 + 174)) ,v89[3 + 0 ]))};local v154=0 + 0 ;for v246=v152,v89[2 + 2 ] do local v247=1504 -(363 + 1141) ;while true do if ((1580 -(1183 + 397))==v247) then v154=v154 + 1 ;v87[v246]=v153[v154];break;end end end else local v155=v89[5 -(9 -6) ];local v156,v157=v80(v87[v155](v13(v87,v155 + 1 + 0 ,v89[3])));v82=(v157 + v155) -(1 + 0) ;local v158=1975 -(1913 + 62) ;for v248=v155,v82 do v158=v158 + 1 ;v87[v248]=v156[v158];end end elseif (v90==((9 -2) + 3 + 0)) then local v159=v89[5 -3 ];local v160={v87[v159](v13(v87,v159 + (3 -2) ,v89[3]))};local v161=1661 -(1477 + 184) ;for v251=v159,v89[5 -1 ] do local v252=0 + 0 ;while true do if (v252==(856 -((1076 -(409 + 103)) + 292))) then v161=v161 + (1 -0) ;v87[v251]=v160[v161];break;end end end else local v162=v89[5 -3 ];v87[v162](v13(v87,v162 + 1 ,v89[307 -(244 + 43 + 17) ]));end elseif ((v90<=(10 + 3)) or (1736==571) or (3467<=1055)) then if (v90>(10 + 2)) then do return;end else local v163=0;local v164;while true do if (v163==(476 -(41 + 435))) then v164=v89[2];v87[v164]=v87[v164](v13(v87,v164 + (1002 -(938 + 63)) ,v89[3 + 0 ]));break;end end end elseif (v90>(1139 -(936 + 189))) then if v87[v89[2]] then v81=v81 + 1 + 0 ;else v81=v89[1616 -(1565 + 48) ];end else do return v87[v89[2 -0 ]];end end elseif ((v90<=(6 + 17)) or (896>4769)) then if ((3541==3541) and (v90<=(12 + 7))) then if (v90<=17) then if (v90==((1390 -(46 + 190)) -(782 + (698 -342)))) then v87[v89[269 -(176 + (1971 -(446 + 1434))) ]]=v89[7 -4 ];else local v167=0 -(95 -(51 + 44)) ;local v168;local v169;while true do if (v167==(1093 -(975 + 33 + 84))) then v87[v168 + ((3193 -(1114 + 203)) -(157 + 1718)) ]=v169;v87[v168]=v169[v89[4]];break;end if (v167==(0 + 0)) then v168=v89[6 -(1287 -(1040 + 243)) ];v169=v87[v89[10 -(20 -13) ]];v167=1;end end end elseif (v90==(1036 -(697 + 321))) then v81=v89[7 -4 ];elseif (v87[v89[(729 -(228 + 498)) -1 ]]==v87[v89[8 -4 ]]) then v81=v81 + 1 ;else v81=v89[2 + 1 ];end elseif (v90<=(39 -18)) then if ((v90>20) or (3557>=4003)) then v87[v89[2]]();elseif  not v87[v89[(2 + 3) -3 ]] then v81=v81 + 1 ;else v81=v89[1230 -(322 + 905) ];end elseif (v90==(633 -((2449 -(559 + 1288)) + (1940 -(609 + 1322))))) then v87[v89[1191 -((903 -(13 + 441)) + 740) ]]={};else v87[v89[(483 + 391) -(826 + 46) ]]=v89[950 -(245 + 702) ];end elseif ((v90<=((748 -(174 + 489)) -58)) or (1045<=1020)) then if (v90<=25) then if ((v90==(8 + (41 -25))) or (657>=1668)) then do return v87[v89[2]];end elseif ((v89[1900 -(260 + 1638) ]==v87[v89[444 -(382 + 58) ]]) or (1027>3858)) then v81=v81 + (3 -2) ;else v81=v89[3 + 0 ];end elseif (v90>(53 -27)) then local v174=v89[2];do return v13(v87,v174,v174 + v89[8 -5 ] );end else local v175=v89[(4510 -3303) -(902 + (793 -490)) ];local v176=v89[(39 -31) -(1909 -(830 + 1075)) ];local v177=v175 + 2 ;local v178={v87[v175](v87[v175 + 1 + 0 ],v87[v177])};for v253=1,v176 do v87[v177 + v253 ]=v178[v253];end local v179=v178[1691 -(1121 + 569) ];if v179 then v87[v177]=v179;v81=v89[217 -(22 + 192) ];else v81=v81 + (525 -(303 + 221)) ;end end elseif (v90<=(712 -(483 + 200))) then if (v90==(1491 -(53 + 1351 + 59))) then do return;end else local v180=0 -0 ;local v181;while true do if (v180==0) then v181=v89[2 -0 ];v87[v181]=v87[v181]();break;end end end elseif (v90>(795 -(468 + 297))) then local v182=v89[564 -((1212 -878) + 228) ];local v183={v87[v182](v87[v182 + (2 -1) ])};local v184=0;for v256=v182,v89[6 -2 ] do v184=v184 + 1 + (1269 -(231 + 1038)) ;v87[v256]=v183[v184];end else v87[v89[238 -(141 + 95) ]]();end elseif ((v90<=(47 + 0)) or (3654<450)) then if (v90<=(33 + 6)) then if (v90<=(90 -55)) then if ((v90<=33) or (1160<=328)) then if ((3808>2924) and (v90==(76 -(1206 -(171 + 991))))) then for v259=v89[2],v89[1 + 2 ] do v87[v259]=nil;end else v87[v89[5 -(2 + 1) ]]=v89[3 + 0 ]~=(0 + 0) ;end elseif (v90>34) then v87[v89[2 -0 ]]=v87[v89[2 + 1 ]];else v81=v89[166 -(92 + 71) ];end elseif ((1891<4453) and (3891<4919) and (v90<=((78 -59) + 18))) then if (v90>(60 -24)) then local v189=v78[v89[768 -(574 + 191) ]];local v190;local v191={};v190=v10({},{__index=function(v261,v262) local v263=0 + 0 ;local v264;while true do if ((v263==0) or (2234<=1502)) then v264=v191[v262];return v264[2 -1 ][v264[2 + 0 ]];end end end,__newindex=function(v265,v266,v267) local v268=849 -(254 + 595) ;local v269;while true do if ((v268==(126 -(55 + 71))) or (3140<2129)) then v269=v191[v266];v269[1][v269[2 -0 ]]=v267;break;end end end});for v270=1791 -(319 + 254 + 1217) ,v89[10 -(16 -10) ] do v81=v81 + 1 + 0 ;local v271=v77[v81];if (v271[1]==(56 -21)) then v191[v270-(940 -(514 + 200 + (561 -336))) ]={v87,v271[1 + 2 ]};else v191[v270-(1 -0) ]={v63,v271[51 -(25 + 23) ]};end v86[ #v86 + 1 + 0 ]=v191;end v87[v89[1888 -(927 + 959) ]]=v29(v189,v190,v64);else v87[v89[6 -(437 -(153 + 280)) ]]=v64[v89[735 -(16 + 716) ]];end elseif (v90==(73 -35)) then v87[v89[99 -(11 + 86) ]]=v87[v89[6 -3 ]][v87[v89[289 -(175 + 110) ]]];else v87[v89[4 -2 ]]=v87[v89[14 -11 ]][v89[1800 -(503 + 1293) ]];end elseif ((v90<=43) or (2555<1240)) then if ((v90<=41) or (4727<=4722)) then if (v90>40) then v87[v89[(8 -3) -3 ]][v89[3 + 0 ]]=v89[1065 -(810 + (775 -524)) ];else local v201=v89[2 + 0 ];v87[v201](v13(v87,v201 + (1249 -(111 + 1137)) ,v89[8 -5 ]));end elseif (v90>(13 + 27 + 2)) then local v202=0;local v203;while true do if (((158 -(91 + 67)) + 0)==v202) then v203=v89[535 -(43 + 490) ];v87[v203]=v87[v203](v13(v87,v203 + (734 -(711 + 22)) ,v89[11 -8 ]));break;end end else local v204=v89[861 -(240 + 619) ];v87[v204](v87[v204 + 1 + 0 ]);end elseif (v90<=45) then if ((v90>(69 -25)) or (2512<432)) then local v205=0 + 0 ;local v206;while true do if (v205==(1744 -(1344 + 400))) then v206=v89[2];v87[v206]=v87[v206](v13(v87,v206 + 1 ,v82));break;end end else local v207=v89[2];local v208,v209=v80(v87[v207](v13(v87,v207 + (406 -((758 -503) + 150)) ,v89[3 + 0 ])));v82=(v209 + v207) -(1 + 0) ;local v210=0 -0 ;for v273=v207,v82 do local v274=(0 + 0) -0 ;while true do if ((740<4937) and (0==v274)) then v210=v210 + (1740 -(404 + 1335)) ;v87[v273]=v208[v210];break;end end end end elseif (v90==(452 -(183 + 223))) then if ((3658>=280) and (v87[v89[2]] or (1848==865))) then v81=v81 + ((524 -(423 + 100)) -0) ;else v81=v89[2 + 1 + 0 ];end else local v211=v89[1 + 1 ];local v212=v89[341 -(10 + 327) ];local v213=v211 + 2 + 0 ;local v214={v87[v211](v87[v211 + 1 + 0 ],v87[v213])};for v275=450 -(108 + 341) ,v212 do v87[v213 + v275 ]=v214[v275];end local v215=v214[1 + (0 -0) ];if (v215 or (4682<=4541) or (885>=1031)) then v87[v213]=v215;v81=v89[12 -9 ];else v81=v81 + (1494 -(711 + 782)) ;end end elseif ((v90<=(29 + 26)) or (3026>=4046)) then if (v90<=(97 -(24 + 22))) then if ((3554>=525) and (v90<=(518 -(270 + 199)))) then if (v90==(819 -(326 + 445))) then v87[v89[1 + 1 ]]={};elseif (v87[v89[1821 -(580 + 1239) ]]==v89[(10 + 1) -7 ]) then v81=v81 + 1 + 0 ;else v81=v89[3];end elseif (v90==(2 + 48)) then v63[v89[2 + 1 ]]=v87[v89[4 -(8 -6) ]];else v87[v89[2 + 0 ]]=v63[v89[1170 -(645 + 522) ]];end elseif (v90<=53) then if (v90==((1335 + 507) -(1010 + 780))) then v87[v89[2 + (0 -0) ]][v89[14 -11 ]]=v89[11 -7 ];else local v223=(2795 -959) -(1045 + 489 + 302) ;local v224;local v225;while true do if ((2414<=2972) and (v223==(2 -(2 -1)))) then for v346=(668 -(89 + 578)) -0 , #v86 do local v347=(1216 -(530 + 181)) -(351 + (320 -166)) ;local v348;while true do if (v347==(881 -(614 + 267))) then v348=v86[v346];for v364=1574 -(1281 + 293) , #v348 do local v365=v348[v364];local v366=v365[267 -(28 + 238) ];local v367=v365[4 -2 ];if ((2008>638) and (v366==v87) and (v367>=v224)) then v225[v367]=v366[v367];v365[(2609 -(572 + 477)) -(1381 + 178) ]=v225;end end break;end end end break;end if ((3529<=3538) and (1775<=3233) and (v223==((32 -(19 + 13)) + 0 + 0))) then v224=v89[2];v225={};v223=1 + 0 ;end end end elseif (v90==54) then v63[v89[2 + 0 + 1 ]]=v87[v89[6 -4 ]];else local v228=v89[2 + 0 ];v87[v228]=v87[v228]();end elseif ((v90<=(529 -(381 + 89))) or (4543==1997)) then if ((v90<=57) or (3102<728) or (2861<458)) then if ((1717<=4525) and (v90==(7 + 49))) then if (((345==345) and  not v87[v89[2 + (86 -(84 + 2)) ]]) or (3178<=1524)) then v81=v81 + 1 + 0 ;else v81=v89[4 -1 ];end else local v230=v78[v89[4 -1 ]];local v231;local v232={};v231=v10({},{__index=function(v278,v279) local v280=1156 -(1074 + 82) ;local v281;while true do if (v280==(0 -0)) then v281=v232[v279];return v281[1785 -(214 + 1570) ][v281[1457 -(990 + 465) ]];end end end,__newindex=function(v282,v283,v284) local v285=v232[v283];v285[1 + 0 ][v285[1 + 1 ]]=v284;end});for v287=1 + 0 + 0 ,v89[15 -11 ] do local v288=1726 -((3886 -2218) + 58) ;local v289;while true do if (((626 -(512 + (325 -211)))==v288) or (2827<378)) then v81=v81 + (2 -1) ;v289=v77[v81];v288=1 -0 ;end if (1==v288) then if (v289[1]==(121 -(1419 -(605 + 728)))) then v232[v287-(1 + 0) ]={v87,v289[10 -7 ]};else v232[v287-(1 -0) ]={v63,v289[1472 -(1269 + 200) ]};end v86[ #v86 + ((3 -2) -0) ]=v232;break;end end end v87[v89[817 -(98 + 717) ]]=v29(v230,v231,v64);end elseif ((4254>370) and (v90==((1832 -948) -(802 + 24)))) then v87[v89[2 -0 ]]=v64[v89[3 -0 ]];else local v236=0 + 0 ;local v237;local v238;while true do if ((v236==1) or (1635==1777)) then v87[v237 + 1 + 0 ]=v238;v87[v237]=v238[v89[1 + 3 ]];break;end if ((v236==((1812 -(1293 + 519)) + 0)) or (3476<2597)) then v237=v89[5 -3 ];v238=v87[v89[(17 -8) -(6 + 0) ]];v236=1 + 0 ;end end end elseif (((3079<4794) and (v90<=(25 + 36))) or (3338>=3993)) then if (v90>((138 -88) + (26 -16))) then v87[v89[2]]=v87[v89[3 + 0 ]][v87[v89[4]]];else v87[v89[2]]=v87[v89[(491 -(457 + 32)) + 1 ]];end elseif (v90<=(1495 -(797 + 636))) then local v243=v89[9 -7 ];v87[v243]=v87[v243](v13(v87,v243 + (1620 -(606 + 821 + (1594 -(832 + 570)))) ,v82));elseif ((4854>4464) and (v90>(22 + 41))) then local v304=v89[3 -1 ];local v305={v87[v304](v87[v304 + 1 + 0 ])};local v306=0 -0 ;for v330=v304,v89[4] do v306=v306 + 1 ;v87[v330]=v305[v306];end else for v333=v89[1 + 1 ],v89[3] do v87[v333]=nil;end end v81=v81 + (327 -(192 + 134)) ;break;end if ((v111==(1276 -(298 + 18 + 960))) or (4912==3758)) then v89=v77[v81];v90=v89[1 + 0 ];v111=1 + 0 ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
