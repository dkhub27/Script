local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v88=v5(v81,v19);v19=nil;return v88;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-((2257 -(1523 + 114)) -(555 + 64)))) + (932 -(857 + 67 + 7)))) ;return v82-(v82%(569 -(367 + 201))) ;else local v83=0;local v84;while true do if (v83==((1804 -(282 + 595)) -(214 + 713))) then v84=(2 -0)^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and 1) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=1065 -(68 + 997) ;local v36;local v37;while true do if (v35==(1271 -(226 + 1044))) then return (v37 * (1213 -(892 + (245 -(67 + 113))))) + v36 ;end if (v35==((0 + 0) -0)) then v36,v37=v1(v16,v18,v18 + (119 -(32 + 85)) );v18=v18 + (3 -1) ;v35=1 + 0 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (9 -5) ;return (v41 * (12338840 + 4438376)) + (v40 * (260471 -194935)) + (v39 * ((3252 -2044) -(802 + 150))) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=1;local v45=(v20(v43,1 -0 ,15 + 5 ) * ((999 -(915 + 82))^(90 -58))) + v42 ;local v46=v20(v43,13 + 8 ,40 -9 );local v47=((v20(v43,1219 -(1069 + (548 -(44 + 386))) )==(2 -(1487 -(998 + 488)))) and  -(1 -(0 + 0))) or (1 + 0) ;if (v46==(0 -(0 + 0))) then if (v45==(0 + 0)) then return v47 * (791 -(368 + 423)) ;else v46=3 -2 ;v44=18 -(10 + 8) ;end elseif (v46==(7874 -5827)) then return ((v45==(442 -(416 + 26))) and (v47 * ((3 -2)/(0 + 0)))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/((3 -1)^(490 -(145 + (1065 -(201 + 571))))))) ;end local function v25(v48) local v49=1138 -(116 + 1022) ;local v50;local v51;while true do if (v49==(12 -9)) then return v6(v51);end if (v49==(0 + 0)) then v50=nil;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=3 -2 ;end if (v49==((1529 -668) -((1894 -(1020 + 60)) + 45))) then v51={};for v89=2 -1 , #v50 do v51[v89]=v2(v1(v3(v50,v89,v89)));end v49=1 + (1425 -(630 + 793)) ;end if (v49==(1 + 0)) then v50=v3(v16,v18,(v18 + v48) -1 );v18=v18 + v48 ;v49=887 -((884 -623) + 624) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v66=(function() return 0 -0 ;end)();while true do if (v66==(936 -(39 + 896))) then if ((341 -(218 + 123))==v52) then v53=(function() return function(v96,v97,v98) local v99=(function() return 0;end)();local v100=(function() return;end)();while true do if (v99~=(0 -0)) then else v100=(function() return 0 -0 ;end)();while true do if (v100==0) then v96[v97-#"}" ]=(function() return v98();end)();return v96,v97,v98;end end break;end end end;end)();v54=(function() return {};end)();v55=(function() return {};end)();v56=(function() return {};end)();v52=(function() return 1582 -(1535 + 46) ;end)();end break;end if (v66~=0) then else local v91=(function() return 0 -0 ;end)();while true do if ((1 + 0)~=v91) then else v66=(function() return 1;end)();break;end if (v91==(560 -(306 + 254))) then if (v52~=(1 + 0)) then else local v101=(function() return 0 + 0 ;end)();local v102=(function() return;end)();while true do if (v101==0) then v102=(function() return 396 -(115 + 281) ;end)();while true do if (v102~=(1469 -(899 + 568))) then else v52=(function() return 2 + 0 ;end)();break;end if (v102==(2 -1)) then v59=(function() return {};end)();for v268= #",",v58 do local v269=(function() return 0 + 0 ;end)();local v270=(function() return;end)();local v271=(function() return;end)();local v272=(function() return;end)();while true do if (v269==(0 -0)) then local v347=(function() return 290 -(60 + 230) ;end)();while true do if (v347==(0 -0)) then v270=(function() return 572 -(426 + 146) ;end)();v271=(function() return nil;end)();v347=(function() return 1;end)();end if (v347==(868 -(550 + 317))) then v269=(function() return 1 + 0 ;end)();break;end end end if (v269~=(1 -0)) then else v272=(function() return nil;end)();while true do if (v270~=1) then else if (v271== #"\\") then v272=(function() return v21()~=(0 -0) ;end)();elseif (v271==(1458 -(282 + 1174))) then v272=(function() return v24();end)();elseif (v271== #"19(") then v272=(function() return v25();end)();end v59[v268]=(function() return v272;end)();break;end if (0==v270) then local v364=(function() return 811 -(569 + 242) ;end)();while true do if (v364~=(2 -1)) then else v270=(function() return 286 -(134 + 151) ;end)();break;end if (v364==(1665 -(970 + 695))) then v271=(function() return v21();end)();v272=(function() return nil;end)();v364=(function() return 1 -0 ;end)();end end end end break;end end end v102=(function() return 1992 -(582 + 1408) ;end)();end if (v102~=0) then else v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v102=(function() return 1;end)();end end break;end end end if (v52==2) then v57[ #"19("]=(function() return v21();end)();for v104= #",",v23() do local v105=(function() return v21();end)();if (v20(v105, #">", #"/")~=(0 + 0)) then else local v107=(function() return 0 -0 ;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v107==(1025 -(706 + 318))) then local v223=(function() return 1251 -(721 + 530) ;end)();while true do if (v223~=0) then else v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==(0 -0)) then local v355=(function() return 0 + 0 ;end)();while true do if (v355==(0 -0)) then v110[ #"gha"]=(function() return v22();end)();v110[ #"?id="]=(function() return v22();end)();break;end end elseif (v108== #"|") then v110[ #"xxx"]=(function() return v23();end)();elseif (v108==(1826 -(1195 + 629))) then v110[ #"91("]=(function() return v23() -((2 -0)^(257 -(187 + 54))) ;end)();elseif (v108== #"-19") then local v382=(function() return 1288 -(993 + 295) ;end)();local v383=(function() return;end)();while true do if (0~=v382) then else v383=(function() return 0;end)();while true do if (v383==(780 -(162 + 618))) then v110[ #"91("]=(function() return v23() -(2^(12 + 4)) ;end)();v110[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v223=(function() return 1 + 0 ;end)();end if (v223~=(1 + 0)) then else v107=(function() return 3 -1 ;end)();break;end end end if (v107~=(2 -0)) then else if (v20(v109, #" ", #"]")~= #"}") then else v110[2]=(function() return v59[v110[1 + 1 ]];end)();end if (v20(v109,1 + 1 ,2)== #"/") then v110[ #"91("]=(function() return v59[v110[ #"xnx"]];end)();end v107=(function() return 3;end)();end if ((1636 -(1373 + 263))==v107) then local v224=(function() return 1000 -(451 + 549) ;end)();local v225=(function() return;end)();while true do if ((0 + 0)==v224) then v225=(function() return 529 -(406 + 123) ;end)();while true do if (v225~=(0 -0)) then else v108=(function() return v20(v105,2 -0 , #"19(");end)();v109=(function() return v20(v105, #"?id=",6);end)();v225=(function() return 1 + 0 ;end)();end if (v225==1) then v107=(function() return 1385 -(746 + 638) ;end)();break;end end break;end end end if (v107==3) then if (v20(v109, #"-19", #"xxx")~= #"!") then else v110[ #"http"]=(function() return v59[v110[ #"xnxx"]];end)();end v54[v104]=(function() return v110;end)();break;end end end end for v106= #":",v23() do v55,v106,v28=(function() return v53(v55,v106,v28);end)();end return v57;end v91=(function() return 1;end)();end end end end end end local function v29(v60,v61,v62) local v63=v60[2 -1 ];local v64=v60[2];local v65=v60[9 -(3 + 3) ];return function(...) local v67=v63;local v68=v64;local v69=v65;local v70=v27;local v71=(257 + 1066) -(1249 + (177 -104)) ;local v72= -(1 + 0);local v73={};local v74={...};local v75=v12("#",...) -(1146 -(466 + 679)) ;local v76={};local v77={};for v85=0 -0 ,v75 do if ((1875<2258) and (v85>=v69)) then v73[v85-v69 ]=v74[v85 + (2 -1) ];else v77[v85]=v74[v85 + 1 + 0 ];end end local v78=(v75-v69) + (434 -(114 + 319)) + 0 ;local v79;local v80;while true do v79=v67[v71];v80=v79[1434 -(797 + 636) ];if ((2613<=2680) and (v80<=(165 -(187 -56)))) then if ((v80<=(1916 -(106 + 1794))) or (1482>=4288)) then if (v80<=(3 + 4)) then if (((1173>41) and (v80<=(6 -3))) or (2462>4426)) then if ((4774==4774) and (v80<=(1 + 0))) then if ((566<=960) and ((v80>((0 -0) + 0)) or (56>=3208))) then v61[v79[1 + 2 ]]=v77[v79[5 -3 ]];else local v114=v79[(18 -13) -3 ];local v115,v116=v70(v77[v114](v77[v114 + (115 -(4 + 110)) ]));v72=(v116 + v114) -((373 + 212) -(57 + 527)) ;local v117=0 + 0 ;for v227=v114,v72 do v117=v117 + (1428 -(41 + (1683 -(36 + 261)))) ;v77[v227]=v115[v117];end end elseif (((4313>3373) and (v80>(105 -((24 -7) + 86)))) or (2910<=1930)) then do return v77[v79[2 + 0 ]];end else v77[v79[2]]=v61[v79[6 -3 ]];end elseif ((v80<=(14 -9)) or (19>452)) then if ((v80==((297 -127) -(122 + 44))) or (4493==2225)) then local v120=0 -0 ;local v121;local v122;local v123;local v124;while true do if (v120==(3 -(1965 -(556 + 1407)))) then v72=(v123 + v121) -1 ;v124=(1368 -(34 + 1334)) + 0 ;v120=1 + 1 ;end if ((v120==(3 -1)) or (907>3152)) then for v319=v121,v72 do v124=v124 + (66 -(30 + 14 + 21)) ;v77[v319]=v122[v124];end break;end if (v120==(0 + (1206 -(741 + 465)))) then v121=v79[2 + 0 ];v122,v123=v70(v77[v121](v13(v77,v121 + 1 + 0 ,v79[1260 -(1043 + 214) ])));v120=3 -2 ;end end else local v125=v79[1214 -(323 + 889) ];do return v13(v77,v125,v125 + v79[7 -4 ] );end end elseif ((v80>(1778 -(1347 + 386 + 39))) or (2505>4470)) then v77[v79[(1865 -(1035 + 248)) -(361 + 219) ]]=v79[323 -(53 + 267) ]~=(0 + 0) ;else v77[v79[467 -(170 + 295) ]]=v61[v79[416 -(15 + 398) ]];end elseif ((3104>=3092) and (v80<=(15 -4))) then if (v80<=(991 -(18 + 964))) then if (v80==(30 -22)) then v77[v79[23 -(20 + 1) ]]=v79[2 + 1 ];else local v131=v68[v79[2 + 1 ]];local v132;local v133={};v132=v10({},{__index=function(v230,v231) local v232=v133[v231];return v232[237 -(46 + 190) ][v232[852 -(20 + 830) ]];end,__newindex=function(v233,v234,v235) local v236=0 + 0 ;local v237;while true do if (v236==(126 -(116 + 10))) then v237=v133[v234];v237[727 -(228 + 498) ][v237[2]]=v235;break;end end end});for v238=1 + 0 + 0 ,v79[3 + 1 ] do v71=v71 + (739 -(542 + 196)) ;local v239=v67[v71];if ((v239[1 -0 ]==(8 + 0 + (46 -27))) or (3711>4062)) then v133[v238-(1 + 0) ]={v77,v239[2 + 1 ]};else v133[v238-(1 + 0) ]={v61,v239[1554 -(1126 + 425) ]};end v76[ #v76 + (2 -(1 + 0)) ]=v133;end v77[v79[407 -(118 + 287) ]]=v29(v131,v132,v62);end elseif ((420==420) and (v80==(39 -29))) then if ((3548>3098) and  not v77[v79[1123 -((803 -(314 + 371)) + (3443 -2440)) ]]) then v71=v71 + (2 -1) ;else v71=v79[380 -(142 + 235) ];end else local v135=(0 + 0) -0 ;local v136;local v137;while true do if ((1 + 0)==v135) then for v324=159 -(91 + 67) , #v76 do local v325=v76[v324];for v348=0 -0 , #v325 do local v349=v325[v348];local v350=v349[1 + 0 ];local v351=v349[979 -((1521 -(478 + 490)) + 225 + 199) ];if (((v350==v77) and (v351>=v136)) or (3252==503)) then local v359=0 -0 ;while true do if (v359==(0 + 0)) then v137[v351]=v350[v351];v349[1 + 0 ]=v137;break;end end end end end break;end if (v135==(0 + 0 + 0)) then v136=v79[1 + 1 ];v137={};v135=1 + (1172 -(786 + 386)) ;end end end elseif (v80<=(27 -14)) then if ((v80>((125 -92) -21)) or (33>=3494)) then v77[v79[4 -2 ]]();else local v138=v79[6 -4 ];v77[v138](v77[v138 + (2 -(2 -1)) ]);end elseif (v80<=(725 -((2624 -2094) + 181))) then v77[v79[(1380 -(1055 + 324)) + 1 ]][v79[(1794 -(389 + 1391)) -(7 + 4) ]]=v79[(79 + 678) -(239 + (1854 -(1093 + 247))) ];elseif (((4733>2066) and (v80>(6 + 9))) or (1267==4744)) then local v274=1329 -(797 + 532) ;local v275;local v276;local v277;while true do if ((2428<3778) and (3549>=916) and (v274==(0 -(0 -0)))) then v275=v79[2 + 0 ];v276={v77[v275](v77[v275 + (2 -1) ])};v274=1203 -(373 + 829) ;end if (v274==(732 -(423 + 53 + 255))) then v277=1130 -(369 + 761) ;for v356=v275,v79[9 -5 ] do v277=v277 + 1 + 0 ;v77[v356]=v276[v277];end break;end end elseif  not v77[v79[3 -1 ]] then v71=v71 + (1 -0) ;else v71=v79[5 -(1 + 1) ];end elseif (v80<=(263 -(64 + 174))) then if (v80<=(3 + 17)) then if ((v80<=(26 -8)) or (2946<=1596)) then if (v80==(353 -(144 + 192))) then local v141=v79[(731 -513) -(42 + 174) ];v77[v141]=v77[v141](v13(v77,v141 + 1 + 0 ,v79[3 + 0 ]));else local v143=v79[(3 -2) + 1 ];local v144,v145=v70(v77[v143](v13(v77,v143 + (1505 -((1231 -868) + 1141)) ,v79[3])));v72=(v145 + v143) -(1581 -(1183 + 397)) ;local v146=0;for v241=v143,v72 do local v242=(0 -0) -(0 + 0) ;while true do if ((4433>3127) and (v242==(0 + 0))) then v146=v146 + 1 + 0 ;v77[v241]=v144[v146];break;end end end end elseif ((4300>=2733) and (v80==(54 -35))) then v77[v79[2]]=v77[v79[3]][v79[1979 -(1913 + 62) ]];else v77[v79[2]]=v77[v79[2 + 1 ]];end elseif (v80<=((369 -(309 + 2)) -36)) then if (v80==((4910 -2956) -(565 + 1368))) then local v151=v79[7 -5 ];v77[v151]=v77[v151](v13(v77,v151 + ((592 + 1070) -(1477 + 184)) ,v72));else local v153=v79[(2 -1) + 1 ];v77[v153]=v77[v153](v77[v153 + (1 -0) ]);end elseif (v80<=(44 -21)) then local v155=v79[2 + 0 ];local v156={v77[v155](v13(v77,v155 + (1284 -(1040 + 243)) ,v72))};local v157=0 -0 ;for v243=v155,v79[6 -2 ] do v157=v157 + (2 -1) ;v77[v243]=v156[v157];end elseif (v80>(328 -(244 + (1272 -(1090 + 122))))) then if v77[v79[456 -(13 + 441) ]] then v71=v71 + 1 + 0 ;else v71=v79[479 -(41 + 435) ];end else v71=v79[1004 -(938 + 63) ];end elseif (v80<=((79 -56) + 6)) then if ((v80<=(1152 -(936 + 189))) or (2189<=245)) then if (v80>(7 + 2 + 17)) then v77[v79[1 + 1 ]]=v77[v79[(4132 -2516) -(1565 + (161 -113)) ]];else do return v77[v79[(690 -(364 + 324)) + 0 ]];end end elseif ((4829==4829) and (v80>(13 + 15))) then v61[v79[(3127 -1986) -(782 + 356) ]]=v77[v79[269 -(176 + 91) ]];else local v162=v79[4 -2 ];local v163=v77[v79[3]];v77[v162 + 1 + 0 ]=v163;v77[v162]=v163[v79[(4 + 1) -1 ]];end elseif ((v80<=(1123 -(975 + 117))) or (1389>3925)) then if ((1683<=4726) and (v80>(1905 -((1275 -(628 + 490)) + 1718)))) then v77[v79[2 + 0 + 0 ]]();else v77[v79[2 + (0 -0) ]]=v79[3 + 0 ];end elseif (v80<=(113 -81)) then if (v79[5 -3 ]==v77[v79[4 + 0 ]]) then v71=v71 + 1 + 0 + 0 ;else v71=v79[10 -7 ];end elseif (v80==((2601 -1550) -((3185 -2488) + 321))) then local v280=v79[5 -3 ];local v281=v77[v79[(779 -(431 + 343)) -2 ]];v77[v280 + ((3 -1) -1) ]=v281;v77[v280]=v281[v79[2 + 2 ]];else for v310=v79[3 -1 ],v79[7 -4 ] do v77[v310]=nil;end end elseif ((4169>=3081) and (v80<=(1279 -((1347 -1025) + 905)))) then if ((4835>=3669) and (v80<=((1137 -427) -((257 -168) + 578)))) then if ((349<=894) and (v80<=(649 -(602 + (27 -18))))) then if ((731<=2978) and (v80<=(21 + 5 + (1278 -(1249 + 19))))) then if ((2851>1859) and (v80==(1224 -(449 + 740)))) then local v169=1049 -(572 + 477) ;local v170;while true do if (v169==(0 + 0)) then v170=v79[874 -(826 + 6 + 40) ];v77[v170](v77[v170 + (948 -(245 + (2397 -(556 + 1139)))) ]);break;end end else v77[v79[6 -4 ]]=v79[1 + 2 ]~=(1898 -(235 + 25 + 1638)) ;end elseif ((v80==((1856 -1379) -(382 + 58))) or (892>3892)) then local v172=v79[6 -(19 -(6 + 9)) ];v77[v172]=v77[v172]();else v77[v79[1 + 1 + 0 + 0 ]]=v62[v79[1336 -(605 + 728) ]];end elseif ((3848>2323) and (v80<=((251 -(28 + 141)) -42))) then if ((2836>469) and (v80==(115 -76))) then local v176=(2291 -(686 + 400)) -(708 + 194 + 303) ;local v177;while true do if (v176==(0 -0)) then v177=v79[4 -2 ];v77[v177](v13(v77,v177 + 1 + 0 ,v79[1693 -(1121 + (798 -(73 + 156))) ]));break;end end else local v178=v79[216 -(22 + 75 + 117) ];local v179={v77[v178](v13(v77,v178 + (1403 -(832 + 570)) ,v72))};local v180=683 -(483 + 200) ;for v246=v178,v79[1467 -(1404 + 59) ] do v180=v180 + ((1 + 2) -2) ;v77[v246]=v179[v180];end end elseif (v80<=(112 -71)) then local v181=v79[798 -(588 + 208) ];local v182={v77[v181](v13(v77,v181 + (812 -(721 + 90)) ,v79[3 -0 ]))};local v183=0 -0 ;for v249=v181,v79[769 -(468 + 297) ] do local v250=653 -(232 + 421) ;while true do if ((v250==(562 -(334 + 228))) or (4466==900)) then v183=v183 + 1 + 0 ;v77[v249]=v182[v183];break;end end end elseif ((v80>(141 -99)) or (2084>=2888) or (2096<=540)) then if ((v77[v79[4 -2 ]]==v79[6 -2 ]) or (3183<2645)) then v71=v71 + 1 + 0 + 0 + 0 ;else v71=v79[239 -(141 + 95) ];end else v77[v79[2 + (0 -0) ]]=v77[v79[7 -4 ]][v79[9 -5 ]];end elseif (v80<=((1329 -(486 + 831)) + 35)) then if (v80<=(123 -78)) then if (v80>(31 + 13)) then local v184=v79[2 + (470 -(224 + 246)) ];local v185={v77[v184](v77[v184 + 1 + 0 ])};local v186=163 -(92 + 71) ;for v251=v184,v79[2 + 2 ] do v186=v186 + 1 ;v77[v251]=v185[v186];end elseif (v77[v79[2 -0 ]]==v77[v79[769 -(574 + 191) ]]) then v71=v71 + 1 + 0 ;else v71=v79[(11 -4) -4 ];end elseif (v80>(24 + 22)) then for v254=v79[851 -(254 + (1548 -953)) ],v79[129 -(55 + 71) ] do v77[v254]=nil;end elseif v77[v79[(3 -1) -0 ]] then v71=v71 + (1791 -(573 + 1217)) ;else v71=v79[2 + 1 ];end elseif ((3230<=3760) and (v80<=(135 -(302 -216)))) then if (v80==(1 + 3 + 44)) then local v187=v79[7 -(15 -10) ];v77[v187]=v77[v187](v13(v77,v187 + (1 -0) ,v79[942 -(714 + 225) ]));else local v189=v79[5 -3 ];local v190,v191=v70(v77[v189](v77[v189 + 1 + 0 ]));v72=(v191 + v189) -((1 + 0) -(1263 -(668 + 595))) ;local v192=0 + 0 + 0 ;for v256=v189,v72 do v192=v192 + (1 -0) ;v77[v256]=v190[v192];end end elseif ((3828==3828) and (479<1863) and (v80<=(856 -(24 + 94 + 17 + 671)))) then local v193=48 -(19 + 6 + 23) ;local v194;while true do if ((554==554) and (v193==(0 + 0))) then v194=v79[1888 -((2527 -1600) + 959) ];v77[v194]=v77[v194](v13(v77,v194 + (3 -(292 -(23 + 267))) ,v72));break;end end elseif (v80>(783 -(16 + 716))) then v77[v79[3 -(1 -0) ]]=v77[v79[3]][v77[v79[101 -((36 -25) + 86) ]]];else local v291=v79[4 -2 ];v77[v291](v13(v77,v291 + ((799 -(203 + 310)) -(175 + 110)) ,v79[1 + 2 ]));end elseif ((v80<=((2097 -(1129 + 815)) -92)) or (2428>=4038)) then if (v80<=((2269 -(1238 + 755)) -220)) then if ((v80<=((130 + 1720) -(503 + 1293))) or (2563==172)) then if (v80>((278 -131) -94)) then local v195=v79[(7 -5) + 0 ];local v196=v79[1065 -(810 + 251) ];local v197=v195 + (120 -(88 + 30)) + 0 ;local v198={v77[v195](v77[v195 + 1 + 0 ],v77[v197])};for v259=(772 -(720 + 51)) + (1534 -(709 + 825)) ,v196 do v77[v197 + v259 ]=v198[v259];end local v199=v198[534 -((95 -52) + 490) ];if (v199 or (2878>2897)) then v77[v197]=v199;v71=v79[(1355 -619) -(711 + 22) ];else v71=v71 + ((1779 -(421 + 1355)) -(2 -0)) ;end else local v200=v79[7 -5 ];local v201={v77[v200](v13(v77,v200 + 1 ,v79[1 + 2 ]))};local v202=0 -0 ;for v262=v200,v79[1 + 3 ] do v202=v202 + (1 -0) ;v77[v262]=v201[v202];end end elseif (v80>((63 -19) + 11)) then if ((v79[1746 -(1344 + 400) ]==v77[v79[917 -(910 + 3) ]]) or (2469>3676)) then v71=v71 + (406 -(255 + 150)) ;else v71=v79[3 + 0 ];end else local v203=v79[2 + 0 ];local v204=v79[1688 -((2330 -(196 + 668)) + 218) ];local v205=v203 + (8 -6) ;local v206={v77[v203](v77[v203 + (3 -2) ],v77[v205])};for v265=1740 -(404 + (5270 -3935)) ,v204 do v77[v205 + v265 ]=v206[v265];end local v207=v206[407 -(183 + 223) ];if ((3889>=131) and (233<487) and v207) then local v295=0 -0 ;while true do if (v295==(0 + 0 + 0)) then v77[v205]=v207;v71=v79[2 + 1 ];break;end end else v71=v71 + (338 -(10 + (1410 -(286 + 797)))) ;end end elseif (v80<=((149 -108) + 17)) then if ((v80>(395 -(118 + 220))) or (492==4578)) then v77[v79[1 + 1 ]]={};elseif (v77[v79[451 -((223 -115) + 341) ]]==v79[837 -(171 + 662) ]) then v71=v71 + 1 + 0 ;else v71=v79[12 -9 ];end elseif (v80<=(1552 -(711 + (875 -(4 + 89))))) then local v209=0 -0 ;local v210;local v211;local v212;while true do if (v209==(470 -(270 + 199))) then v212={};v211=v10({},{__index=function(v333,v334) local v335=v212[v334];return v335[1 + 0 ][v335[1821 -(580 + 1239) ]];end,__newindex=function(v336,v337,v338) local v339=v212[v337];v339[575 -(102 + 472) ][v339[5 -3 ]]=v338;end});v209=2 + 0 ;end if (v209==(1 + 1)) then for v341=1 + 0 ,v79[9 -(2 + 3) ] do local v342=0 + 0 ;local v343;while true do if (((2473>=201) and ((0 + 0)==v342)) or (4112<1816)) then v71=v71 + (1168 -(645 + 522)) ;v343=v67[v71];v342=1791 -((3540 -2530) + 780) ;end if ((1 + 0 + 0)==v342) then if ((4525>=1223) and (v343[(804 -(24 + 776)) -3 ]==(47 -20))) then v212[v341-(2 -1) ]={v77,v343[4 -1 ]};else v212[v341-(506 -((540 -189) + 154)) ]={v61,v343[6 -3 ]};end v76[ #v76 + (1560 -(1381 + 178)) ]=v212;break;end end end v77[v79[2 + 0 ]]=v29(v210,v211,v62);break;end if (v209==((0 -0) + 0)) then v210=v68[v79[(6 + 1) -4 ]];v211=nil;v209=1 + 0 ;end end elseif ((4120>=133) and (v80>(250 -(23 + 167)))) then do return;end else v77[v79[364 -(112 + 250) ]]={};end elseif ((3080>=1986) and (v80<=(26 + 39))) then if (v80<=(157 -94)) then if ((1090<=4827) and (v80==((935 -722) -151))) then if (v77[v79[2 + 0 ]]==v77[v79[(186 + 288) -(381 + (1575 -(35 + 1451))) ]]) then v71=v71 + 1 + 0 + 0 ;else v71=v79[3 + 0 ];end else local v213=v79[2 + 0 ];v77[v213]=v77[v213]();end elseif ((v80>(1478 -(1001 + 413))) or (239>1345)) then do return;end else v77[v79[2 + 0 ]]=v77[v79[4 -1 ]][v77[v79[1160 -(1074 + 82) ]]];end elseif ((v80<=(146 -79)) or (1439>3538)) then if ((v80>(1850 -(214 + 1570))) or (419<7) or (3710>=3738)) then local v217=1455 -(990 + 465) ;local v218;local v219;while true do if ((2820==2820) and ((0 + 0)==v217)) then v218=v79[1 + (1454 -(28 + 1425)) ];v219={};v217=1 + (1993 -(941 + 1052)) ;end if (((3 -2)==v217) or (3838<2061)) then for v344=1727 -((2516 -(40 + 808)) + 58) , #v76 do local v345=(601 + 25) -(512 + (1628 -(822 + 692))) ;local v346;while true do if ((v345==(0 -0)) or (690>1172)) then v346=v76[v344];for v366=0, #v346 do local v367=0 -0 ;local v368;local v369;local v370;while true do if ((0 -0)==v367) then v368=v346[v366];v369=v368[1 + 0 ];v367=1 + 0 ;end if ((v367==(1 + 0)) or (4362<=3527)) then v370=v368[2 + 0 ];if ((v369==v77) and (v370>=v218)) then local v384=0 -0 ;while true do if (v384==(1994 -(109 + 1885))) then v219[v370]=v369[v370];v368[1470 -(1269 + (285 -85)) ]=v219;break;end end end break;end end end break;end end end break;end end else v71=v79[5 -2 ];end elseif (v80<=((416 + 467) -(98 + 717))) then local v221=v79[7 -5 ];v77[v221]=v77[v221](v77[v221 + (827 -(802 + 24)) ]);elseif (v80>(118 -49)) then v77[v79[2 -0 ]]=v62[v79[1 + (299 -(45 + 252)) ]];else v77[v79[2 + 0 + 0 ]][v79[1 + 2 ]]=v79[1 + 3 ];end v71=v71 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
