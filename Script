--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v88=0;local v89;while true do if (v88==0) then v89=v2(v0(v30,16));if v19 then local v118=v5(v89,v19);v19=nil;return v118;else return v89;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v90=0 -0 ;local v91;while true do if (v90==((0 + 0) -(877 -(282 + 595)))) then v91=(v31/((3 -1)^(v32-(2 -(1638 -(1523 + 114))))))%(2^(((v33-1) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v91-(v91%1) ;end end else local v92=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v92 + v92))>=v92) and 1) or (0 + 0) ;end end local function v21() local v34=1065 -(68 + 997) ;local v35;while true do if (v34==(1271 -(226 + 1044))) then return v35;end if (v34==(0 + 0)) then v35=v1(v16,v18,v18);v18=v18 + (118 -(32 + 19 + 66)) ;v34=1 -0 ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + 2 ;return (v37 * (610 -354)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (5 -2) );v18=v18 + (7 -3) ;return (v41 * (16777566 -(87 + (645 -382)))) + (v40 * (65716 -(50 + 17 + 113))) + (v39 * (188 + 68)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=3 -2 ;local v45=(v20(v43,19 -(4 + 6 + (893 -(261 + 624))) ,972 -(802 + 150) ) * ((444 -((739 -323) + 26))^((1165 -(1020 + 60)) -53))) + v42 ;local v46=v20(v43,(896 -(814 + 45)) -16 ,23 + 8 );local v47=((v20(v43,1029 -(915 + 82) )==((4 -2) -1)) and  -(1 + 0)) or (1 -0) ;if (v46==((64 + 1123) -(1069 + 118))) then if (v45==0) then return v47 * (0 + 0) ;else v46=1 + (1423 -(630 + 793)) ;v44=(0 -0) -0 ;end elseif (v46==(4477 -2430)) then return ((v45==((0 -0) + 0)) and (v47 * ((4 -3)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/((2 + 0)^(843 -(368 + 423))))) ;end local function v25(v48) local v49=0 + (1413 -(447 + 966)) ;local v50;local v51;while true do if (v49==(1 + 0)) then v50=v3(v16,v18,(v18 + v48) -(3 -(5 -3)) );v18=v18 + v48 ;v49=1 + (1818 -(1703 + 114)) ;end if (v49==(3 + 0)) then return v6(v51);end if (v49==(1057 -(87 + (1669 -(376 + 325))))) then v51={};for v112=1748 -(760 + 987) , #v50 do v51[v112]=v2(v1(v3(v50,v112,v112)));end v49=1916 -(1789 + 124) ;end if (v49==(766 -(745 + 21))) then v50=nil;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=1;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v93,v94,v95,v96,v97,v98,v99,v100,v101) local v102=(function() return 1271 -(945 + 326) ;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do local v111=(function() return 0 -0 ;end)();while true do if ((0 -0)~=v111) then else if (1==v102) then local v121=(function() return 1824 -(1195 + 629) ;end)();while true do if (v121==0) then local v126=(function() return 0 -0 ;end)();while true do if (v126==(241 -(187 + 54))) then while true do if (v93==(780 -(162 + 618))) then v94=(function() return v95();end)();if (v96(v94, #"[", #"[")~=(0 + 0)) then else local v332=(function() return 700 -(271 + 429) ;end)();local v333=(function() return;end)();local v334=(function() return;end)();local v335=(function() return;end)();while true do if (v332==3) then if (v96(v334, #"91(", #"gha")== #"]") then v335[ #"0313"]=(function() return v99[v335[ #".com"]];end)();end v100[v101]=(function() return v335;end)();break;end if (v332==(2 + 0)) then if (v96(v334, #"/", #">")~= #":") then else v335[2]=(function() return v99[v335[2]];end)();end if (v96(v334,2,2 + 0 )== #".") then v335[ #"gha"]=(function() return v99[v335[ #"nil"]];end)();end v332=(function() return 1503 -(1408 + 92) ;end)();end if (0==v332) then local v353=(function() return 0;end)();while true do if (v353==(1087 -(461 + 625))) then v332=(function() return 1289 -(993 + 295) ;end)();break;end if (v353==(0 -0)) then v333=(function() return v96(v94,2 -0 , #"19(");end)();v334=(function() return v96(v94, #"http",6);end)();v353=(function() return 1 + 0 ;end)();end end end if ((1637 -(1373 + 263))~=v332) then else local v354=(function() return 0;end)();while true do if (0==v354) then v335=(function() return {v97(),v97(),nil,nil};end)();if (v333==0) then local v358=(function() return 0 + 0 ;end)();local v359=(function() return;end)();while true do if (v358~=0) then else v359=(function() return 0 -0 ;end)();while true do if (v359==(0 -0)) then v335[ #"91("]=(function() return v97();end)();v335[ #".dev"]=(function() return v97();end)();break;end end break;end end elseif (v333== #"[") then v335[ #"-19"]=(function() return v98();end)();elseif (v333==(1 + 1)) then v335[ #"gha"]=(function() return v98() -(2^(1400 -(746 + 638))) ;end)();elseif (v333== #"xxx") then local v364=(function() return 0 + 0 ;end)();local v365=(function() return;end)();while true do if (v364==0) then v365=(function() return 0;end)();while true do if (v365==(0 + 0)) then v335[ #"xnx"]=(function() return v98() -((2 -0)^(357 -(218 + 123))) ;end)();v335[ #".com"]=(function() return v97();end)();break;end end break;end end end v354=(function() return 1;end)();end if ((1582 -(1535 + 46))~=v354) then else v332=(function() return 2;end)();break;end end end end end break;end end return v93,v94,v95,v96,v97,v98,v99,v100,v101;end end end end end if (v102==0) then local v122=(function() return 0 + 0 ;end)();local v123=(function() return;end)();while true do if (v122~=(0 + 0)) then else v123=(function() return 0 + 0 ;end)();while true do if (v123~=0) then else v93=(function() return 560 -(306 + 254) ;end)();v94=(function() return nil;end)();v123=(function() return 1 + 0 ;end)();end if (v123~=(1 -0)) then else v102=(function() return 1468 -(899 + 568) ;end)();break;end end break;end end end break;end end end end;end)();local v53=(function() return function(v103,v104,v105) local v106=(function() return 0;end)();local v107=(function() return;end)();while true do if (v106==(0 + 0)) then v107=(function() return 1900 -(106 + 1794) ;end)();while true do if ((0 + 0)==v107) then local v124=(function() return 0 + 0 ;end)();local v125=(function() return;end)();while true do if (0~=v124) then else v125=(function() return 0;end)();while true do if (v125~=(0 -0)) then else local v127=(function() return 0 -0 ;end)();while true do if (0~=v127) then else v103[v104-#"[" ]=(function() return v105();end)();return v103,v104,v105;end end end end break;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v67= #">",v58 do local v68=(function() return 290 -(60 + 230) ;end)();local v69=(function() return;end)();local v70=(function() return;end)();local v71=(function() return;end)();while true do if (v68==(572 -(426 + 146))) then v69=(function() return 0 + 0 ;end)();v70=(function() return nil;end)();v68=(function() return 1457 -(282 + 1174) ;end)();end if (v68~=(1428 -(41 + 1386))) then else v71=(function() return nil;end)();while true do if (v69==(812 -(569 + 242))) then if (v70== #"|") then v71=(function() return v21()~=0 ;end)();elseif (v70==(5 -3)) then v71=(function() return v24();end)();elseif (v70~= #"xxx") then else v71=(function() return v25();end)();end v59[v67]=(function() return v71;end)();break;end if (v69~=(0 + 0)) then else local v120=(function() return 0;end)();while true do if (v120==(0 + 0)) then v70=(function() return v21();end)();v71=(function() return nil;end)();v120=(function() return 1025 -(706 + 318) ;end)();end if (1==v120) then v69=(function() return 1252 -(721 + 530) ;end)();break;end end end end break;end end end v57[ #"gha"]=(function() return v21();end)();for v72= #".",v23() do FlatIdent_7F35E,Descriptor,v21,v20,v22,v23,v59,v54,v72=(function() return v52(FlatIdent_7F35E,Descriptor,v21,v20,v22,v23,v59,v54,v72);end)();end for v73= #":",v23() do v55,v73,v28=(function() return v53(v55,v73,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[2 -1 ];local v65=v61[168 -(122 + 44) ];local v66=v61[2 + 1 ];return function(...) local v74=v64;local v75=v65;local v76=v66;local v77=v27;local v78=1 -0 ;local v79= -((1467 -(157 + 1307)) -2);local v80={};local v81={...};local v82=v12("#",...) -(1 + 0) ;local v83={};local v84={};for v108=0 + 0 ,v82 do if ((v108>=v76) or (1145<=1082)) then v80[v108-v76 ]=v81[v108 + (1 -0) ];else v84[v108]=v81[v108 + (66 -(30 + 35)) ];end end local v85=(v82-v76) + 1 + 0 ;local v86;local v87;while true do v86=v74[v78];v87=v86[1258 -(1043 + 214) ];if (v87<=(53 -22)) then if (v87<=(56 -41)) then if ((v87<=(1219 -(323 + 889))) or (3105==4881)) then if (v87<=(7 -(1863 -(821 + 1038)))) then if (v87<=(581 -(361 + 219))) then if ((v87==(320 -(53 + 267))) or (1887>4878)) then do return v84[v86[1 + 1 ]];end else do return;end end elseif ((v87>(1 + 1)) or (4087>4116)) then v84[v86[2]]=v63[v86[(1037 -621) -(15 + 44 + 354) ]];else v84[v86[984 -(18 + 964) ]]=v84[v86[9 -6 ]];end elseif ((1106<=1266) and (v87<=(18 -13))) then if (v87>((4 -1) + 1)) then v62[v86[2 + 1 ]]=v84[v86[852 -(20 + 830) ]];else local v134=0 + 0 ;local v135;while true do if (v134==(0 + 0)) then v135=v86[1435 -(297 + 500 + 636) ];do return v13(v84,v135,v135 + v86[129 -((287 -171) + 10) ] );end break;end end end elseif ((3155<4650) and (v87==(1625 -(1427 + 192)))) then if (v84[v86[1 + 1 ]]==v84[v86[742 -(542 + 196) ]]) then v78=v78 + (1 -0) ;else v78=v86[1 + (1028 -(834 + 192)) ];end elseif ((3774>=1839) and (v86[2 + 0 ]==v84[v86[2 + 2 ]])) then v78=v78 + (2 -1) ;else v78=v86[2 + 1 ];end elseif (v87<=11) then if ((2811==2811) and (v87<=(7 + 2))) then if (v87==(8 + 0)) then if v84[v86[1 + 1 ]] then v78=v78 + 1 ;else v78=v86[3];end else v62[v86[7 -(2 + 2) ]]=v84[v86[1553 -(1126 + 425) ]];end elseif (v87==(415 -(118 + 287))) then v84[v86[7 -5 ]]=v84[v86[(1 + 3) -1 ]][v84[v86[1125 -((182 -64) + 1003) ]]];else local v140=0 -0 ;local v141;while true do if ((2146>1122) and (v140==(377 -(142 + (539 -(300 + 4)))))) then v141=v86[9 -7 ];v84[v141](v13(v84,v141 + 1 + 0 ,v86[980 -(553 + 114 + 310) ]));break;end end end elseif (v87<=(23 -10)) then if ((v87==(11 + 1)) or (56==3616)) then v84[v86[2 + 0 ]]=v62[v86[3 + 0 ]];elseif ((v84[v86[2 + 0 ]]==v86[(5013 -3098) -(340 + 1571) ]) or (2421<622)) then v78=v78 + 1 ;else v78=v86[3];end elseif (v87>(6 + (370 -(112 + 250)))) then v78=v86[1 + 1 + 1 ];else local v145=v86[4 -(4 -2) ];v84[v145](v13(v84,v145 + (1035 -(72 + 53 + 909)) ,v86[7 -4 ]));end elseif (v87<=(11 + 12)) then if (v87<=(42 -23)) then if (v87<=(5 + 12)) then if ((1009<=1130) and (v87>16)) then if ((2758<2980) and  not v84[v86[9 -7 ]]) then v78=v78 + ((390 + 364) -(239 + 514)) ;else v78=v86[239 -(46 + 190) ];end else local v146=0 + 0 + 0 ;local v147;local v148;local v149;while true do if (v146==(1 + 0 + 0)) then v149=1329 -(797 + 532) ;for v308=v147,v86[3 + 1 ] do local v309=0 + 0 ;while true do if ((v309==(0 + 0 + 0)) or (86>=3626)) then v149=v149 + (2 -(1415 -(1001 + 413))) ;v84[v308]=v148[v149];break;end end end break;end if (v146==(0 + 0)) then v147=v86[(2684 -1480) -(373 + 829) ];v148={v84[v147](v13(v84,v147 + (1131 -(369 + 761)) ,v86[2 + 1 ]))};v146=1 -0 ;end end end elseif (v87>(33 -(44 -29))) then local v150=v86[240 -(64 + 174) ];local v151=v84[v86[1 + 2 ]];v84[v150 + (603 -(512 + 90)) ]=v151;v84[v150]=v151[v86[4 + 0 ]];else v84[v86[2 -0 ]]={};end elseif ((2395==2395) and (v87<=((1992 -(1665 + 241)) -(782 -(373 + 344))))) then if (v87>(356 -(144 + 192))) then v84[v86[5 -(2 + 1) ]]=v84[v86[219 -(42 + 47 + 127) ]][v86[4 + 0 ]];elseif ((3780>2709) and (v84[v86[2 + 0 ]]==v84[v86[11 -7 ]])) then v78=v78 + 1 + 0 ;else v78=v86[1507 -(363 + 1141) ];end elseif (v87==(1602 -(1183 + 397))) then local v158=v86[2];v84[v158](v84[v158 + (2 -1) ]);else local v159=v86[2 + 0 ];v84[v159]=v84[v159](v13(v84,v159 + 1 + 0 ,v86[1 + (5 -3) ]));end elseif ((v87<=(2002 -(1913 + 62))) or (237>=2273)) then if ((v87<=(16 + 9)) or (2040<=703)) then if (v87==((105 -42) -39)) then local v161=1933 -(565 + 1368) ;local v162;while true do if (v161==(0 -0)) then v162=v86[1663 -(1477 + 184) ];v84[v162](v84[v162 + (1 -0) ]);break;end end elseif ((3279<=3967) and  not v84[v86[(1101 -(35 + 1064)) + 0 ]]) then v78=v78 + (857 -(564 + 292)) ;else v78=v86[(3 + 1) -1 ];end elseif (v87>(78 -52)) then if (v84[v86[306 -(244 + 60) ]] or (1988==877)) then v78=v78 + 1 + 0 ;else v78=v86[(74 -39) -(1 + 18 + 13) ];end elseif (v84[v86[2 -0 ]]==v86[480 -(41 + 435) ]) then v78=v78 + (2 -1) ;else v78=v86[1004 -(938 + 63) ];end elseif (v87<=(23 + (1242 -(298 + 938)))) then if (v87>(1153 -(936 + (1448 -(233 + 1026))))) then v84[v86[3 -1 ]]=v86[1 + 2 ]~=(1613 -((3231 -(636 + 1030)) + 48)) ;else local v164=v86[4 -2 ];local v165={};for v234=1 + 0 , #v83 do local v235=v83[v234];for v261=1138 -(782 + 183 + 173) , #v235 do local v262=v235[v261];local v263=v262[268 -(176 + 91) ];local v264=v262[4 -2 ];if ((v263==v84) and (v264>=v164)) then v165[v264]=v263[v264];v262[(1 + 0) -0 ]=v165;end end end end elseif (v87>(1122 -(975 + 117))) then local v166=1875 -(47 + 110 + 1718) ;local v167;local v168;local v169;while true do if ((4291>1912) and (v166==(0 + 0 + (221 -(55 + 166))))) then v167=v86[2 + 0 ];v168={v84[v167](v84[v167 + (3 -2) ])};v166=1 + 0 ;end if ((2003<2339) and (v166==(1019 -(697 + 33 + 288)))) then v169=1858 -(673 + 1185) ;for v313=v167,v86[11 -7 ] do v169=v169 + 1 ;v84[v313]=v168[v169];end break;end end else local v170=(0 -0) -(297 -(36 + 261)) ;local v171;local v172;while true do if (v170==(0 -0)) then v171=v86[2];v172={};v170=2 -1 ;end if ((1 + 0)==v170) then for v316=1 + 0 , #v83 do local v317=v83[v316];for v336=0 -0 , #v317 do local v337=v317[v336];local v338=v337[2 -1 ];local v339=v337[1229 -(322 + 905) ];if ((v338==v84) and (v339>=v171)) then v172[v339]=v338[v339];v337[612 -(602 + 9) ]=v172;end end end break;end end end elseif (v87<=(1236 -(449 + 740))) then if (v87<=(911 -(826 + (79 -33)))) then if (v87<=(1915 -(446 + 1434))) then if ((432==432) and (v87<=(980 -(245 + 702)))) then if (v87==(1400 -(34 + 1334))) then local v173=0 -0 ;local v174;while true do if (v173==(0 -0)) then v174=v86[1 + 1 ];v84[v174]=v84[v174](v13(v84,v174 + 1 ,v86[(731 + 1170) -(260 + 1638) ]));break;end end else local v175=440 -(382 + 58) ;local v176;while true do if (v175==0) then v176=v86[6 -(4 + 0) ];v84[v176]=v84[v176]();break;end end end elseif (v87==(29 + 5)) then v84[v86[3 -1 ]]={};else do return v84[v86[5 -3 ]];end end elseif ((v87<=(1242 -(902 + 303))) or (1145>=1253)) then if ((3418>2118) and (v87>(78 -42))) then local v178=v86[2];local v179={v84[v178](v13(v84,v178 + 1 + 0 ,v86[8 -5 ]))};local v180=0 + 0 ;for v236=v178,v86[4] do v180=v180 + 1 + 0 ;v84[v236]=v179[v180];end else v84[v86[1692 -(1121 + 569) ]]();end elseif (v87>(22 + 16)) then v84[v86[216 -(22 + 192) ]]=v84[v86[686 -(483 + 200) ]][v86[1467 -(1404 + (1342 -(1035 + 248))) ]];else local v183=v86[5 -3 ];local v184=v86[4 -0 ];local v185=v183 + (767 -(468 + (318 -(20 + 1)))) ;local v186={v84[v183](v84[v183 + (563 -(334 + 228)) ],v84[v185])};for v239=3 -2 ,v184 do v84[v185 + v239 ]=v186[v239];end local v187=v186[(2 + 0) -(320 -(134 + 185)) ];if v187 then local v265=0 -0 ;while true do if ((3066<=3890) and (v265==(0 + 0))) then v84[v185]=v187;v78=v86[1 + 2 ];break;end end else v78=v78 + (237 -(141 + 95)) ;end end elseif (v87<=(43 + 0)) then if (v87<=(105 -64)) then if ((v87==((1229 -(549 + 584)) -(741 -(314 + 371)))) or (2998>=3281)) then local v188=v86[1 + 1 ];local v189=v86[10 -6 ];local v190=v188 + (6 -4) ;local v191={v84[v188](v84[v188 + 1 + 0 ],v84[v190])};for v242=1 -(0 + 0) ,v189 do v84[v190 + v242 ]=v191[v242];end local v192=v191[1];if (v192 or (4649<=2632)) then v84[v190]=v192;v78=v86[2 + 1 ];else v78=v78 + (164 -(92 + (1243 -(786 + 386)))) ;end elseif (v86[1 + 1 ]==v84[v86[4]]) then v78=v78 + ((3 -2) -0) ;else v78=v86[768 -((1953 -(1055 + 324)) + 191) ];end elseif ((v87==(35 + (1347 -(1093 + 247)))) or (3860>4872)) then v84[v86[1 + 1 ]]=v84[v86[1 + 2 + 0 ]][v84[v86[9 -5 ]]];else local v195=v86[1335 -(605 + 728) ];local v196={v84[v195](v84[v195 + (850 -(254 + 595)) ])};local v197=0;for v245=v195,v86[130 -(55 + 71) ] do v197=v197 + (1 -0) ;v84[v245]=v196[v197];end end elseif (v87<=(1835 -(573 + 1217))) then if (v87>(40 + 4)) then local v198=0 -0 ;local v199;while true do if ((0 + 0)==v198) then v199=v86[2 -0 ];v84[v199]=v84[v199]();break;end end else local v200=939 -(714 + (893 -668)) ;local v201;local v202;local v203;while true do if (v200==0) then v201=v75[v86[9 -6 ]];v202=nil;v200=2 -1 ;end if ((1 -0)==v200) then v203={};v202=v10({},{__index=function(v318,v319) local v320=v203[v319];return v320[1 + 0 ][v320[2 -0 ]];end,__newindex=function(v321,v322,v323) local v324=v203[v322];v324[807 -(118 + 688) ][v324[50 -(25 + 23) ]]=v323;end});v200=(15 -9) -(2 + 2) ;end if (v200==(1 + (3 -2))) then for v326=1887 -(927 + 959) ,v86[(44 -31) -9 ] do v78=v78 + (733 -(16 + 716)) ;local v327=v74[v78];if ((v327[1 -0 ]==(99 -(11 + 86))) or (3998==2298)) then v203[v326-(1 + 0) ]={v84,v327[6 -3 ]};else v203[v326-(4 -(3 + 0)) ]={v62,v327[8 -5 ]};end v83[ #v83 + 1 + (0 -0) ]=v203;end v84[v86[1063 -(810 + 251) ]]=v29(v201,v202,v63);break;end end end elseif (v87==(651 -(316 + 289))) then local v204=v86[2 + 0 ];local v205=v84[v86[1 + (4 -2) ]];v84[v204 + 1 + 0 ]=v205;v84[v204]=v205[v86[2 + 2 + 0 ]];else v84[v86[535 -(43 + 490) ]]=v86[736 -(711 + 22) ];end elseif (v87<=(212 -157)) then if ((v87<=(910 -(240 + 619))) or (8>=2739)) then if (v87<=(12 + 37)) then if (v87==(146 -98)) then for v248=v86[2 -0 ],v86[5 -2 ] do v84[v248]=nil;end else v84[v86[1 + 1 ]]=v84[v86[1747 -(1344 + 400) ]];end elseif (v87>(455 -(255 + 150))) then v84[v86[(765 -582) -(92 + 89) ]]();else v84[v86[2 + 0 ]]=v62[v86[2 + 1 ]];end elseif (v87<=(226 -173)) then if ((2590==2590) and (v87==((266 -99) -115))) then v84[v86[1741 -(404 + 1335) ]]=v86[409 -(183 + 223) ];else v84[v86[2 -0 ]][v86[2 + 1 ]]=v86[2 + 2 ];end elseif (v87==(391 -(10 + 327))) then v78=v86[3 + 0 ];else local v220=v86[340 -(118 + 220) ];v84[v220]=v84[v220](v13(v84,v220 + (1 -0) ,v79));end elseif ((v87<=(20 + 39)) or (82>=1870)) then if (v87<=(506 -(108 + 341))) then if ((2624<4557) and (v87>(26 + 30))) then do return;end else v84[v86[8 -6 ]]=v86[1496 -(711 + 782) ]~=(0 -0) ;end elseif (v87>(527 -(270 + (604 -405)))) then v84[v86[1 + 1 ]][v86[1 + 2 ]]=v86[1823 -(580 + 1239) ];else v84[v86[2]]=v63[v86[8 -5 ]];end elseif (v87<=(59 + 2)) then if (v87==(3 + 57)) then for v250=v86[4 -2 ],v86[(1278 -(1249 + 19)) -7 ] do v84[v250]=nil;end else local v227=1073 -(1036 + 37) ;local v228;local v229;local v230;local v231;while true do if (v227==(0 + 0)) then v228=v86[4 -2 ];v229,v230=v77(v84[v228](v13(v84,v228 + 1 + 0 ,v86[1170 -(645 + 522) ])));v227=1791 -(1010 + 780) ;end if (((1 + 0)==v227) or (3131>3542)) then v79=(v230 + v228) -(4 -3) ;v231=(0 + 0) -0 ;v227=1838 -((4067 -3022) + (1877 -(686 + 400))) ;end if (v227==2) then for v329=v228,v79 do v231=v231 + (2 -1) ;v84[v329]=v229[v231];end break;end end end elseif (v87<=(93 -31)) then local v232=v86[507 -(276 + 75 + 154) ];v84[v232]=v84[v232](v13(v84,v232 + 1 + 0 ,v79));elseif (v87==(1637 -(1281 + 293))) then local v269=v75[v86[269 -(28 + (467 -(73 + 156))) ]];local v270;local v271={};v270=v10({},{__index=function(v293,v294) local v295=0 -0 ;local v296;while true do if (v295==(1559 -(1381 + 178))) then v296=v271[v294];return v296[1 + 0 ][v296[2 + 0 ]];end end end,__newindex=function(v297,v298,v299) local v300=v271[v298];v300[1 + 0 ][v300[6 -4 ]]=v299;end});for v302=1 + 0 ,v86[4] do v78=v78 + (471 -(381 + 89)) ;local v303=v74[v78];if ((2577>=1578) and (v303[1 + 0 ]==(741 -(396 + 343)))) then v271[v302-(1 + 0) ]={v84,v303[4 -1 ]};else v271[v302-(1157 -(1074 + 82)) ]={v62,v303[1458 -(990 + 465) ]};end v83[ #v83 + 1 + 0 ]=v271;end v84[v86[576 -(102 + 6 + 466) ]]=v29(v269,v270,v63);else local v273=v86[2 + 0 ];local v274,v275=v77(v84[v273](v13(v84,v273 + (3 -2) + 0 ,v86[3 + 0 ])));v79=(v275 + v273) -((473 -(224 + 246)) -2) ;local v276=1726 -(1668 + (93 -35)) ;for v305=v273,v79 do v276=v276 + (627 -(512 + 114)) ;v84[v305]=v274[v276];end end v78=v78 + (2 -1) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
