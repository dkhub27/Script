local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v89=0;local v90;while true do if (v89==0) then v90=v5(v82,v19);v19=nil;v89=1;end if (v89==1) then return v90;end end else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((5 -3)^(v32-(878 -(282 + 595)))))%((5 -3)^(((v33-1) -(v32-1)) + (1 -0))) ;return v83-(v83%((1639 -(1523 + 114)) -1)) ;else local v84=619 -(555 + 64) ;local v85;while true do if (v84==(931 -(857 + 74))) then v85=(570 -(330 + 37 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v85 + v85))>=v85) and (1 + 0)) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 -0 ;local v36;local v37;while true do if ((1066 -(68 + 997))==v35) then return (v37 * (1526 -(226 + 1044))) + v36 ;end if (v35==(0 + (0 -0))) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (8 -6) ;v35=2 -1 ;end end end local function v23() local v38=(0 -0) -0 ;local v39;local v40;local v41;local v42;while true do if (((1303 -(802 + 150)) -(87 + 263))==v38) then return (v42 * (16777396 -((180 -113) + (204 -91)))) + (v41 * (48056 + 17480)) + (v40 * 256) + v39 ;end if (v38==0) then v39,v40,v41,v42=v1(v16,v18,v18 + 3 );v18=v18 + (9 -5) ;v38=1 + 0 ;end end end local function v24() local v43=0;local v44;local v45;local v46;local v47;local v48;local v49;while true do if (v43==(2 + 0)) then v48=v20(v45,459 -(145 + 293) ,1028 -(915 + 82) );v49=((v20(v45,(247 -157) -58 )==(1 + 0)) and  -(1 + 0)) or (773 -(201 + (2239 -1668))) ;v43=1141 -(116 + 1022) ;end if ((3 -0)==v43) then if (v48==(0 + 0)) then if (v47==((10 + 1177) -(1069 + 118))) then return v49 * (0 -0) ;else local v100=859 -(814 + 45) ;while true do if (v100==(0 -0)) then v48=1 -0 ;v46=0 + 0 ;break;end end end elseif (v48==((2302 + 630) -(261 + (1679 -(87 + 968))))) then return ((v47==((0 -0) -0)) and (v49 * ((1 + 0)/(791 -(368 + 423))))) or (v49 * NaN) ;end return v8(v49,v48-(3466 -2443) ) * (v46 + (v47/((2 + 0)^(246 -194)))) ;end if (v43==(3 -2)) then v46=19 -(10 + 8) ;v47=(v20(v45,3 -2 ,462 -(416 + 26) ) * (2^32)) + v44 ;v43=6 -4 ;end if (v43==(0 + 0)) then v44=v23();v45=v23();v43=1 + 0 ;end end end local function v25(v50) local v51=0 -(1930 -(1869 + 61)) ;local v52;local v53;while true do if (v51==(1416 -(447 + 966))) then return v6(v53);end if ((15 -(9 + 5))==v51) then v52=v3(v16,v18,(v18 + v50) -(2 -1) );v18=v18 + v50 ;v51=1819 -(1703 + 114) ;end if (((2 + 5) -5)==v51) then v53={};for v91=1 + 0 , #v52 do v53[v91]=v2(v1(v3(v52,v91,v91)));end v51=704 -(376 + (1144 -819)) ;end if (v51==((254 -(163 + 91)) + (0 -0))) then v52=nil;if  not v50 then v50=v23();if (v50==(0 -0)) then return "";end end v51=2 -1 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v54=(function() return 700 -(271 + 429) ;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();while true do local v67=(function() return 1636 -(1373 + 263) ;end)();while true do if (0==v67) then if (v54~= #" ") then else local v97=(function() return 1500 -(1408 + 92) ;end)();local v98=(function() return;end)();while true do if (v97==(1086 -(461 + 625))) then v98=(function() return 0;end)();while true do if (v98~=(1289 -(993 + 295))) then else for v144= #"{",v59 do local v145=(function() return 0 + 0 ;end)();local v146=(function() return;end)();local v147=(function() return;end)();while true do if (v145==(1172 -(418 + 753))) then if (v146== #"|") then v147=(function() return v21()~=0 ;end)();elseif (v146==(1 + 1)) then v147=(function() return v24();end)();elseif (v146~= #"gha") then else v147=(function() return v25();end)();end v60[v144]=(function() return v147;end)();break;end if (v145==(1000 -(451 + 549))) then local v183=(function() return 0 + 0 ;end)();while true do if (v183~=(0 -0)) then else v146=(function() return v21();end)();v147=(function() return nil;end)();v183=(function() return 1 + 0 ;end)();end if (1==v183) then v145=(function() return 1 -0 ;end)();break;end end end end end v58[ #"xnx"]=(function() return v21();end)();v98=(function() return 1386 -(746 + 638) ;end)();end if (v98==(531 -(406 + 123))) then v54=(function() return 1 + 1 ;end)();break;end if (v98~=0) then else v59=(function() return v23();end)();v60=(function() return {};end)();v98=(function() return 1770 -(1749 + 20) ;end)();end end break;end end end if ((0 + 0)==v54) then local v99=(function() return 0;end)();while true do if (v99==(1 -0)) then v57=(function() return {};end)();v58=(function() return {v55,v56,nil,v57};end)();v99=(function() return 343 -(218 + 123) ;end)();end if (v99~=(1581 -(1535 + 46))) then else v55=(function() return {};end)();v56=(function() return {};end)();v99=(function() return 1;end)();end if (v99==(2 + 0)) then v54=(function() return  #":";end)();break;end end end v67=(function() return 1 + 0 ;end)();end if ((561 -(306 + 254))~=v67) then else if (v54==(1 + 1)) then for v101= #"]",v23() do local v102=(function() return 0;end)();local v103=(function() return;end)();local v104=(function() return;end)();while true do if (v102==(2 -1)) then while true do if ((0 -0)==v103) then v104=(function() return v21();end)();if (v20(v104, #"}", #":")==(1900 -(106 + 1794))) then local v171=(function() return 0;end)();local v172=(function() return;end)();local v173=(function() return;end)();local v174=(function() return;end)();while true do if (v171~=2) then else if (v20(v173, #"~", #"{")== #".") then v174[2]=(function() return v60[v174[3 -1 ]];end)();end if (v20(v173,1469 -(899 + 568) ,2)== #"~") then v174[ #"asd"]=(function() return v60[v174[ #"asd"]];end)();end v171=(function() return 1 + 2 ;end)();end if (v171~=(1 + 0)) then else v174=(function() return {v22(),v22(),nil,nil};end)();if (v172==0) then local v212=(function() return 0 + 0 ;end)();local v213=(function() return;end)();while true do if (v212~=0) then else v213=(function() return 0;end)();while true do if (v213==(0 -0)) then v174[ #"gha"]=(function() return v22();end)();v174[ #".dev"]=(function() return v22();end)();break;end end break;end end elseif (v172== #"/") then v174[ #"asd"]=(function() return v23();end)();elseif (v172==(605 -(268 + 335))) then v174[ #"xnx"]=(function() return v23() -((116 -(4 + 110))^(306 -(60 + 230))) ;end)();elseif (v172== #"nil") then local v219=(function() return 572 -(426 + 146) ;end)();local v220=(function() return;end)();while true do if ((0 + 0)==v219) then v220=(function() return 0;end)();while true do if (v220==(1456 -(282 + 1174))) then v174[ #"gha"]=(function() return v23() -((813 -(569 + 242))^(11 + 5)) ;end)();v174[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v171=(function() return 5 -3 ;end)();end if (v171==(1 + 2)) then if (v20(v173, #"-19", #"19(")== #".") then v174[ #"0836"]=(function() return v60[v174[ #"asd1"]];end)();end v55[v101]=(function() return v174;end)();break;end if (v171~=(1024 -(706 + 318))) then else v172=(function() return v20(v104,168 -(122 + 44) , #"xxx");end)();v173=(function() return v20(v104, #".com",1257 -(721 + 530) );end)();v171=(function() return 1;end)();end end end break;end end break;end if (v102==(1271 -(945 + 326))) then local v107=(function() return 0 -0 ;end)();while true do if (1==v107) then v102=(function() return 2 -1 ;end)();break;end if (v107~=(0 + 0)) then else v103=(function() return 0 + 0 ;end)();v104=(function() return nil;end)();v107=(function() return 1;end)();end end end end end for v105= #"/",v23() do v56[v105-#"~" ]=(function() return v28();end)();end return v58;end break;end end end end local function v29(v61,v62,v63) local v64=v61[1 -0 ];local v65=v61[67 -(22 + 8 + 35) ];local v66=v61[3 + 0 ];return function(...) local v68=v64;local v69=v65;local v70=v66;local v71=v27;local v72=1;local v73= -(1258 -(1043 + 214));local v74={};local v75={...};local v76=v12("#",...) -1 ;local v77={};local v78={};for v86=0 -0 ,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + (1213 -(323 + 463 + 426)) ];else v78[v86]=v75[v86 + (2 -1) ];end end local v79=(v76-v70) + (581 -(361 + 219)) ;local v80;local v81;while true do v80=v68[v72];v81=v80[1];if (v81<=20) then if (v81<=9) then if ((4855>4023) and (v81<=(324 -((74 -21) + 267)))) then if ((v81<=(1 + 0)) or (3428==965)) then if ((4084>265) and (v81==(413 -(15 + 398)))) then v78[v80[2]][v80[3]]=v80[986 -(18 + 964) ];else v78[v80[2]]=v78[v80[3]][v78[v80[14 -10 ]]];end elseif (v81<=(2 + 0)) then v78[v80[2 + 0 ]]=v63[v80[853 -(20 + 830) ]];elseif ((4358==4358) and (v81==3)) then v78[v80[2 + 0 ]]=v78[v80[129 -(116 + 10) ]][v80[1 + 3 ]];elseif ((v80[740 -(542 + 116 + 80) ]==v78[v80[4]]) or (3138<993)) then v72=v72 + (1 -0) ;else v72=v80[1 + 2 ];end elseif ((3330>2323) and (v81<=(4 + 2))) then if (v81==(2 + 3)) then local v115=0 -0 ;local v116;local v117;local v118;local v119;while true do if (v115==(0 -0)) then v116=v80[1553 -(1126 + 425) ];v117,v118=v71(v78[v116](v13(v78,v116 + 1 ,v80[408 -(118 + (450 -(92 + 71))) ])));v115=1;end if (v115==(3 -2)) then v73=(v118 + v116) -(1122 -(118 + 1003)) ;v119=0 -0 ;v115=379 -(142 + 235) ;end if (v115==(9 -7)) then for v185=v116,v73 do local v186=0 + 0 ;while true do if (v186==(977 -(553 + 424))) then v119=v119 + (1 -0) ;v78[v185]=v117[v119];break;end end end break;end end else v78[v80[2 + 0 ]]=v63[v80[3 + 0 ]];end elseif ((v81<=(5 + 2)) or (3626==3989)) then if  not v78[v80[1 + 1 ]] then v72=v72 + 1 + 0 ;else v72=v80[(3 + 3) -3 ];end elseif (v81==(22 -14)) then local v151=0 -0 ;local v152;while true do if ((v151==(0 -0)) or (916==2671)) then v152=v80[2];v78[v152]=v78[v152](v13(v78,v152 + 1 + 0 ,v73));break;end end else local v153=v80[9 -7 ];v78[v153](v13(v78,v153 + (754 -(239 + 514)) ,v80[3]));end elseif ((272==272) and (v81<=(5 + 9))) then if (v81<=11) then if (v81>(1339 -(797 + 532))) then v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]];else local v124=0;local v125;local v126;local v127;local v128;while true do if (v124==(4 -2)) then for v187=v125,v73 do local v188=0;while true do if (v188==(1202 -((1138 -(574 + 191)) + 829))) then v128=v128 + (732 -(476 + 255)) ;v78[v187]=v126[v128];break;end end end break;end if (v124==0) then v125=v80[(934 + 198) -(369 + (1906 -1145)) ];v126,v127=v71(v78[v125](v13(v78,v125 + 1 + 0 ,v80[3])));v124=1 -0 ;end if (v124==(1 -(0 + 0))) then v73=(v127 + v125) -((1088 -(254 + 595)) -(64 + 174)) ;v128=0 + 0 ;v124=2 -0 ;end end end elseif ((4249<=4839) and (v81<=(138 -(55 + 71)))) then v78[v80[338 -(144 + 192) ]]=v78[v80[219 -((54 -12) + (1964 -(573 + 1217))) ]];elseif ((2777<3200) and (v81==(10 + 3))) then do return;end elseif ((95<1957) and (v80[2 + (0 -0) ]==v78[v80[2 + 2 ]])) then v72=v72 + (1505 -(363 + 1141)) ;else v72=v80[1583 -(1183 + 31 + 366) ];end elseif (v81<=(51 -34)) then if ((826<1717) and (v81<=(11 + 4))) then v78[v80[2 + 0 ]]={};elseif (v81==((3207 -1216) -(1913 + 62))) then if v78[v80[2]] then v72=v72 + 1 ;else v72=v80[2 + 1 ];end else local v154=0 -0 ;local v155;local v156;while true do if (v154==0) then v155=v80[2];v156=v78[v80[(2875 -(714 + 225)) -((1650 -1085) + 1368) ]];v154=1;end if ((1426>=1105) and (v154==((3 -0) -2))) then v78[v155 + (1662 -(1477 + 184)) ]=v156;v78[v155]=v156[v80[5 -1 ]];break;end end end elseif (v81<=18) then local v132=v80[2 + 0 ];v78[v132](v78[v132 + (857 -(564 + 292)) ]);elseif (v81>(32 -(2 + 11))) then for v177=v80[2],v80[8 -5 ] do v78[v177]=nil;end else v78[v80[306 -(244 + 60) ]]=v80[3 + 0 ];end elseif (v81<=30) then if (v81<=(501 -(41 + 435))) then if ((2754<=3379) and (v81<=(1023 -(938 + 63)))) then if (v81>(17 + 4)) then v72=v80[1128 -(936 + 189) ];else v78[v80[1 + 1 ]]=v80[3]~=(1613 -(1565 + 48)) ;end elseif (v81<=23) then if  not v78[v80[2 + 0 ]] then v72=v72 + (1139 -(782 + 356)) ;else v72=v80[(390 -120) -(176 + (897 -(118 + 688))) ];end elseif (v81>(62 -38)) then local v160=v80[2 -0 ];v78[v160]=v78[v160](v13(v78,v160 + (1093 -((1023 -(25 + 23)) + 117)) ,v73));else v78[v80[1877 -(157 + 1718) ]]=v78[v80[3 + 0 ]][v80[14 -10 ]];end elseif (v81<=(92 -65)) then if (v81==26) then v78[v80[2]]=v78[v80[1021 -(697 + 321) ]][v78[v80[(2 + 8) -(1892 -(927 + 959)) ]]];else v78[v80[(10 -7) -1 ]]=v80[6 -3 ];end elseif (v81<=(11 + 17)) then if (v78[v80[(735 -(16 + 716)) -1 ]] or (3927==1413)) then v72=v72 + 1 ;else v72=v80[7 -4 ];end elseif ((v81>29) or (1154<=788)) then v78[v80[3 -1 ]]=v80[3]~=((1324 -(11 + 86)) -(322 + 905)) ;else for v179=v80[2],v80[614 -(602 + 9) ] do v78[v179]=nil;end end elseif (v81<=(1224 -((1094 -645) + 740))) then if (v81<=(904 -((1111 -(175 + 110)) + 46))) then if (v81>(978 -(245 + 702))) then v78[v80[6 -4 ]]();else do return;end end elseif (v81<=(11 + 22)) then v78[v80[1900 -(260 + 1638) ]][v80[443 -((964 -582) + (286 -228)) ]]=v80[12 -8 ];elseif (v81>(29 + (1801 -(503 + 1293)))) then v78[v80[3 -(2 -1) ]]();else local v166=v80[5 -3 ];v78[v166](v78[v166 + (1206 -(902 + 303)) ]);end elseif (v81<=(28 + 10)) then if (v81<=(78 -42)) then v72=v80[6 -3 ];elseif ((v81==37) or (1643>3379)) then v78[v80[1 + 1 ]]={};elseif (v78[v80[1692 -(1121 + 569) ]]==v80[218 -(22 + 192) ]) then v72=v72 + (684 -(483 + 200)) ;else v72=v80[3];end elseif (v81<=(1502 -(1404 + 59))) then local v142=0 -0 ;local v143;while true do if (v142==(0 -0)) then v143=v80[2];v78[v143](v13(v78,v143 + 1 ,v80[768 -(468 + 297) ]));break;end end elseif (v81==(602 -((1395 -(810 + 251)) + 228))) then if (v78[v80[6 -(3 + 1) ]]==v80[8 -4 ]) then v72=v72 + 1 ;else v72=v80[5 -2 ];end else local v168=0;local v169;local v170;while true do if ((v168==(1 + 0)) or (2803>4549)) then v78[v169 + (237 -(141 + 95)) ]=v170;v78[v169]=v170[v80[4 + 0 ]];break;end if (v168==(0 -0)) then v169=v80[4 -2 ];v170=v78[v80[3]];v168=1 + 0 + 0 ;end end end v72=v72 + ((2 + 0) -(534 -(43 + 490))) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
