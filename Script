local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v102=0;local v103;while true do if (v102==1) then return v103;end if (v102==0) then v103=v5(v81,v19);v19=nil;v102=1;end end else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=0 -0 ;local v83;while true do if (v82==(0 -(1637 -(1523 + 114)))) then v83=(v31/(2^(v32-(1 -0))))%((4 -(879 -(282 + 595)))^(((v33-((558 + 62) -(555 + 64))) -(v32-((1328 -396) -(857 + 74)))) + (569 -(367 + (1266 -(68 + 997)))))) ;return v83-(v83%(928 -(214 + 713))) ;end end else local v84=2^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and (1271 -(226 + 1044))) or (0 + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (8 -6) );v18=v18 + 2 ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 3 );v18=v18 + (6 -2) + 0 ;return (v40 * (3720433 + (23970033 -10913250))) + (v39 * (66493 -(892 + 65))) + (v38 * (610 -354)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=(1461 -1110) -(87 + 263) ;local v44=(v20(v42,181 -(67 + 113) ,15 + 3 + 2 ) * ((4 -2)^(24 + 8))) + v41 ;local v45=v20(v42,(302 -219) -62 ,983 -(802 + 150) );local v46=((v20(v42,85 -(188 -135) )==(3 -2)) and  -(1 -(859 -(814 + 45)))) or (1 + 0) ;if (v45==(997 -(915 + 82))) then if (v44==(0 + 0)) then return v46 * 0 ;else v45=2 -1 ;v43=0 + (0 -0) ;end elseif (v45==(2691 -644)) then return ((v44==(430 -(44 + 386))) and (v46 * (((81 + 1406) -(998 + 488))/(0 + 0)))) or (v46 * NaN) ;end return v8(v46,v45-(838 + 185) ) * (v43 + (v44/((1189 -(1069 + 118))^(117 -65)))) ;end local function v25(v47) local v48;if  not v47 then local v85=0 + 0 ;while true do if (v85==(885 -(261 + 624))) then v47=v23();if (v47==(0 -0)) then return "";end break;end end end v48=v3(v16,v18,(v18 + v47) -1 );v18=v18 + v47 ;local v49={};for v64=1081 -((2443 -(630 + 793)) + 60) , #v48 do v49[v64]=v2(v1(v3(v48,v64,v64)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return 0 -0 ;end)();local v51=(function() return;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if ((2 -0)==v50) then local v89=(function() return 0 -0 ;end)();while true do if (v89~=(0 -0)) then else v57=(function() return {};end)();for v104= #"}",v56 do local v105=(function() return 0;end)();local v106=(function() return;end)();local v107=(function() return;end)();local v108=(function() return;end)();while true do if (v105~=(286 -(134 + 151))) then else v108=(function() return nil;end)();while true do if (0==v106) then local v121=(function() return 0;end)();while true do if (v121==0) then v107=(function() return v21();end)();v108=(function() return nil;end)();v121=(function() return 1666 -(970 + 695) ;end)();end if (v121==(1 -0)) then v106=(function() return 1;end)();break;end end end if (1~=v106) then else if (v107== #"}") then v108=(function() return v21()~=(1990 -(582 + 1408)) ;end)();elseif (v107==(6 -4)) then v108=(function() return v24();end)();elseif (v107~= #"19(") then else v108=(function() return v25();end)();end v57[v104]=(function() return v108;end)();break;end end break;end if (v105~=0) then else v106=(function() return 0 -0 ;end)();v107=(function() return nil;end)();v105=(function() return 3 -2 ;end)();end end end v89=(function() return 1825 -(1195 + 629) ;end)();end if (v89~=(1 -0)) then else v55[ #"-19"]=(function() return v21();end)();v50=(function() return 244 -(187 + 54) ;end)();break;end end end if (0==v50) then local v90=(function() return 0;end)();while true do if (v90==1) then v53=(function() return {};end)();v50=(function() return 781 -(162 + 618) ;end)();break;end if (v90==(0 + 0)) then local v101=(function() return 0 + 0 ;end)();while true do if (v101~=(0 -0)) then else v51=(function() return function(v113,v114,v115) local v116=(function() return 0 -0 ;end)();local v117=(function() return;end)();while true do if ((0 + 0)==v116) then v117=(function() return 1636 -(1373 + 263) ;end)();while true do if (v117==0) then local v275=(function() return 1000 -(451 + 549) ;end)();while true do if (0==v275) then v113[v114-#"[" ]=(function() return v115();end)();return v113,v114,v115;end end end end break;end end end;end)();v52=(function() return {};end)();v101=(function() return 1;end)();end if (v101==1) then v90=(function() return 1 + 0 ;end)();break;end end end end end if (v50~=1) then else local v91=(function() return 0;end)();while true do if (v91==0) then v54=(function() return {};end)();v55=(function() return {v52,v53,nil,v54};end)();v91=(function() return 1 -0 ;end)();end if (v91==(1385 -(746 + 638))) then v56=(function() return v23();end)();v50=(function() return 1 + 1 ;end)();break;end end end if (v50~=3) then else for v92= #",",v23() do local v93=(function() return 0 -0 ;end)();local v94=(function() return;end)();while true do if (v93==(341 -(218 + 123))) then v94=(function() return v21();end)();if (v20(v94, #"\\", #"{")==0) then local v109=(function() return 1581 -(1535 + 46) ;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (3~=v109) then else if (v20(v111, #"-19", #"nil")~= #"[") then else v112[ #"xnxx"]=(function() return v57[v112[ #"0313"]];end)();end v52[v92]=(function() return v112;end)();break;end if (v109~=2) then else if (v20(v111, #"\\", #"|")~= #"]") then else v112[2]=(function() return v57[v112[2 + 0 ]];end)();end if (v20(v111,1 + 1 ,562 -(306 + 254) )== #"<") then v112[ #"xxx"]=(function() return v57[v112[ #"91("]];end)();end v109=(function() return 1 + 2 ;end)();end if (v109==1) then local v119=(function() return 0;end)();while true do if (v119==(1 -0)) then v109=(function() return 1469 -(899 + 568) ;end)();break;end if (v119==0) then v112=(function() return {v22(),v22(),nil,nil};end)();if (v110==(0 -0)) then local v276=(function() return 603 -(268 + 335) ;end)();local v277=(function() return;end)();while true do if (v276~=(290 -(60 + 230))) then else v277=(function() return 0;end)();while true do if ((572 -(426 + 146))==v277) then v112[ #"xxx"]=(function() return v22();end)();v112[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v110== #"|") then v112[ #"-19"]=(function() return v23();end)();elseif (v110==2) then v112[ #"gha"]=(function() return v23() -((1 + 1)^16) ;end)();elseif (v110~= #"xxx") then else local v357=(function() return 0;end)();local v358=(function() return;end)();while true do if (0==v357) then v358=(function() return 1456 -(282 + 1174) ;end)();while true do if (v358==(811 -(569 + 242))) then v112[ #"-19"]=(function() return v23() -((5 -3)^16) ;end)();v112[ #"?id="]=(function() return v22();end)();break;end end break;end end end v119=(function() return 1 + 0 ;end)();end end end if (v109~=0) then else local v120=(function() return 1024 -(706 + 318) ;end)();while true do if (v120~=0) then else local v230=(function() return 1251 -(721 + 530) ;end)();while true do if (v230==(1271 -(945 + 326))) then v110=(function() return v20(v94,4 -2 , #"19(");end)();v111=(function() return v20(v94, #"?id=",6);end)();v230=(function() return 1;end)();end if (1==v230) then v120=(function() return 1;end)();break;end end end if (v120==(1 + 0)) then v109=(function() return 1;end)();break;end end end end end break;end end end for v95= #" ",v23() do v53,v95,v28=(function() return v51(v53,v95,v28);end)();end return v55;end end end local function v29(v58,v59,v60) local v61=v58[1];local v62=v58[702 -(271 + 429) ];local v63=v58[3 + 0 ];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1501 -(1408 + 92) ;local v71= -(1087 -(461 + 625));local v72={};local v73={...};local v74=v12("#",...) -(1 + 0) ;local v75={};local v76={};for v86=1171 -(418 + 753) ,v74 do if ((v86>=v68) or (2896<805)) then v72[v86-v68 ]=v73[v86 + 1 + 0 ];else v76[v86]=v73[v86 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1 + 0 ];if (v79<=31) then if (v79<=(14 + 1)) then if (v79<=(3 + 3 + 1)) then if (v79<=(1 + 2)) then if (v79<=1) then if ((2316==2316) and (v79>0)) then v76[v78[2]]=v76[v78[(910 -378) -(406 + 123) ]][v78[1773 -((2905 -(1074 + 82)) + 20) ]];else local v128=0 + 0 ;local v129;while true do if (0==v128) then v129=v78[1324 -(1249 + 73) ];v76[v129]=v76[v129](v13(v76,v129 + 1 + 0 ,v71));break;end end end elseif (v79>((2513 -1366) -(466 + 679))) then do return;end elseif  not v76[v78[4 -2 ]] then v70=v70 + (2 -1) ;else v70=v78[1903 -(106 + 1794) ];end elseif (v79<=(2 + 3)) then if (v79>4) then local v130=0 + 0 ;local v131;while true do if (v130==0) then v131=v78[5 -3 ];v76[v131]=v76[v131]();break;end end else do return v76[v78[5 -3 ]];end end elseif ((v79==6) or (2570==1533)) then if (v76[v78[2]] or (883==1460)) then v70=v70 + (115 -((1788 -(214 + 1570)) + 110)) ;else v70=v78[587 -(57 + 527) ];end else v76[v78[(2884 -(990 + 465)) -(41 + 1386) ]]=v76[v78[106 -(17 + 36 + 50) ]][v78[3 + 1 ]];end elseif ((v79<=11) or (4619<=999)) then if ((v79<=(19 -10)) or (3410>4116)) then if ((v79==(23 -15)) or (903>=3059)) then if ((v76[v78[2]]==v78[4]) or (3976<2857)) then v70=v70 + 1 ;else v70=v78[169 -(122 + 44) ];end else local v134=v78[2];v76[v134](v13(v76,v134 + 1 ,v78[3]));end elseif (v79>(17 -7)) then v76[v78[6 -4 ]]();else v76[v78[2 + 0 ]][v78[1 + 2 ]]=v78[(4 + 3) -3 ];end elseif (v79<=((76 + 2) -(30 + 35))) then if (v79>(9 + 3)) then v76[v78[1259 -(1043 + 214) ]]=v60[v78[11 -8 ]];elseif (v78[7 -5 ]==v76[v78[1216 -(323 + 889) ]]) then v70=v70 + ((1728 -(1668 + 58)) -(627 -(512 + 114))) ;else v70=v78[583 -(361 + 219) ];end elseif ((4930>2307) and (v79==(334 -(53 + 267)))) then local v139=v78[1 + (2 -1) ];v76[v139]=v76[v139](v13(v76,v139 + (414 -(15 + 398)) ,v71));else v76[v78[984 -(18 + 964) ]]=v78[11 -8 ]~=(0 + 0) ;end elseif ((v79<=(15 + 8)) or (4046<1291)) then if ((v79<=19) or (4241==3545)) then if (v79<=(867 -(20 + 830))) then if (v79>(13 + 3)) then v76[v78[128 -(116 + 10) ]][v78[1 + 2 ]]=v78[742 -(542 + 196) ];else local v144=v78[3 -1 ];local v145,v146=v69(v76[v144](v13(v76,v144 + 1 + 0 ,v78[2 + 1 ])));v71=(v146 + v144) -(1 + 0) ;local v147=0 -0 ;for v231=v144,v71 do local v232=0;while true do if ((v232==(0 -0)) or (4048>4232)) then v147=v147 + (1552 -(1126 + 425)) ;v76[v231]=v145[v147];break;end end end end elseif ((v79==18) or (1750>=3473)) then local v148=405 -(118 + 287) ;local v149;while true do if ((3166==3166) and (v148==(0 -0))) then v149=v78[1123 -(118 + 1003) ];v76[v149]=v76[v149](v13(v76,v149 + (2 -1) ,v78[(785 -405) -(142 + 235) ]));break;end end else local v150=v78[9 -7 ];local v151=v78[1 + 3 ];local v152=v150 + (979 -(553 + 424)) ;local v153={v76[v150](v76[v150 + 1 + 0 ],v76[v152])};for v233=1,v151 do v76[v152 + v233 ]=v153[v233];end local v154=v153[1 + 0 ];if v154 then v76[v152]=v154;v70=v78[10 -7 ];else v70=v70 + 1 + 0 ;end end elseif (v79<=(9 + 12)) then if (v79==(6 + 6 + 8)) then v76[v78[2]]=v59[v78[3]];elseif ((1763<3724) and (v76[v78[4 -2 ]]==v76[v78[4]])) then v70=v70 + (2 -1) ;else v70=v78[3];end elseif ((57<=2723) and (v79==(48 -26))) then local v157=v78[1 + 1 ];local v158={};for v236=1, #v75 do local v237=v75[v236];for v259=0 -0 , #v237 do local v260=v237[v259];local v261=v260[754 -(239 + 514) ];local v262=v260[1 + 1 ];if (((v261==v76) and (v262>=v157)) or (2070==443)) then v158[v262]=v261[v262];v260[1330 -(797 + 100 + 432) ]=v158;end end end else v76[v78[2 + 0 + 0 ]]=v78[2 + (3 -2) ];end elseif (v79<=(63 -36)) then if (v79<=(1227 -(373 + (2823 -(109 + 1885))))) then if (v79>(755 -(476 + 255))) then v76[v78[1132 -(369 + 761) ]]=v78[(1471 -(1269 + 200)) + 1 ];else v59[v78[5 -2 ]]=v76[v78[2]];end elseif (v79>26) then v70=v78[3];else local v166=0 -0 ;local v167;local v168;local v169;while true do if (v166==(238 -((122 -58) + 174))) then v167=v67[v78[1 + 2 ]];v168=nil;v166=1 -0 ;end if (v166==(337 -(144 + 192))) then v169={};v168=v10({},{__index=function(v302,v303) local v304=0;local v305;while true do if (v304==(815 -(98 + 717))) then v305=v169[v303];return v305[827 -(802 + 24) ][v305[218 -(42 + 174) ]];end end end,__newindex=function(v306,v307,v308) local v309=0 + 0 ;local v310;while true do if ((v309==(0 + 0)) or (2705==1393)) then v310=v169[v307];v310[1 + 0 ][v310[1506 -(363 + 1141) ]]=v308;break;end end end});v166=2;end if (v166==(1582 -(1183 + 397))) then for v311=2 -1 ,v78[4] do v70=v70 + 1 + 0 ;local v312=v66[v70];if ((v312[1 + 0 ]==61) or (4601<61)) then v169[v311-1 ]={v76,v312[3]};else v169[v311-(2 -1) ]={v59,v312[11 -8 ]};end v75[ #v75 + (1662 -((1864 -387) + 184)) ]=v169;end v76[v78[2 -0 ]]=v29(v167,v168,v60);break;end end end elseif (v79<=(28 + 1)) then if ((v79>((131 + 753) -(564 + 292))) or (1390>=4744)) then local v170=0 -(0 + 0) ;local v171;local v172;while true do if (v170==((1 + 1) -1)) then v76[v171 + (305 -(244 + 60)) ]=v172;v76[v171]=v172[v78[4 + 0 ]];break;end if (v170==(476 -(41 + 435))) then v171=v78[1003 -(938 + 63) ];v172=v76[v78[3 + 0 + 0 ]];v170=1126 -(936 + (525 -336)) ;end end else v76[v78[(3 -2) + 1 ]]=v76[v78[1616 -(560 + 1005 + 48) ]][v76[v78[3 + 1 ]]];end elseif ((v79==(1168 -(782 + 356))) or (2003>3834)) then local v175=267 -(72 + 104 + 91) ;local v176;local v177;while true do if (v175==(1 + 0)) then for v314=2 -1 , #v75 do local v315=v75[v314];for v334=0 -0 , #v315 do local v335=v315[v334];local v336=v335[1093 -(975 + 117) ];local v337=v335[1877 -(157 + 1718) ];if ((v336==v76) and (v337>=v176)) then local v352=0 + 0 ;while true do if (v352==(0 -0)) then v177[v337]=v336[v337];v335[3 -2 ]=v177;break;end end end end end break;end if ((1018 -(507 + 190 + 321))==v175) then v176=v78[2];v177={};v175=2 -1 ;end end else local v178=v78[3 -1 ];v76[v178]=v76[v178]();end elseif (v79<=(108 -(29 + 32))) then if (v79<=(16 + 23)) then if (v79<=(65 -30)) then if (v79<=33) then if (v79==(85 -53)) then v76[v78[1229 -(322 + 905) ]]=v76[v78[614 -((2035 -(797 + 636)) + 9) ]];else local v182=v78[2];local v183,v184=v69(v76[v182](v13(v76,v182 + (1190 -(449 + 740)) ,v78[3])));v71=(v184 + v182) -(4 -3) ;local v185=1619 -(1427 + 192) ;for v238=v182,v71 do local v239=872 -(826 + 46) ;while true do if (v239==0) then v185=v185 + 1 ;v76[v238]=v183[v185];break;end end end end elseif (v79==(981 -(245 + 702))) then if (v78[2]==v76[v78[4]]) then v70=v70 + 1 + 0 ;else v70=v78[9 -6 ];end else v76[v78[1 + 1 ]]={};end elseif (v79<=(1935 -(260 + 1638))) then if ((v79==36) or (156>3913)) then v76[v78[442 -(382 + (134 -76)) ]]=v59[v78[9 -6 ]];else local v189=v78[2 + 0 ];v76[v189](v76[v189 + (1 -0) ]);end elseif (v79>(112 -74)) then local v190=1205 -(902 + 303) ;local v191;local v192;local v193;while true do if (v190==(0 -0)) then v191=v78[2];v192={v76[v191](v76[v191 + 1 ])};v190=1 + 0 ;end if (v190==(1691 -(1121 + 569))) then v193=0;for v318=v191,v78[218 -(22 + 192) ] do local v319=683 -(483 + 200) ;while true do if (v319==(1463 -(1404 + 59))) then v193=v193 + (2 -1) ;v76[v318]=v192[v193];break;end end end break;end end elseif ((195==195) and (v76[v78[2 -0 ]]==v78[4])) then v70=v70 + (766 -(468 + 297)) ;else v70=v78[565 -(334 + 228) ];end elseif (v79<=(144 -101)) then if (v79<=(94 -53)) then if (v79==(72 -32)) then local v194=0;local v195;while true do if ((3105>=1796) and (0==v194)) then v195=v78[2];v76[v195](v13(v76,v195 + 1 + 0 ,v78[239 -(141 + 95) ]));break;end end else local v196=v78[2 + 0 + 0 ];local v197=v78[4];local v198=v196 + (4 -2) ;local v199={v76[v196](v76[v196 + 1 + 0 ],v76[v198])};for v240=(1278 -(316 + 960)) -1 ,v197 do v76[v198 + v240 ]=v199[v240];end local v200=v199[1 + 0 ];if v200 then local v265=0 + 0 + 0 ;while true do if ((0 -(0 + 0))==v265) then v76[v198]=v200;v70=v78[3];break;end end else v70=v70 + 1 ;end end elseif (v79>(25 + 17)) then v76[v78[165 -(92 + 66 + 5) ]]();else v76[v78[(3 -2) + 1 ]]={};end elseif ((4379>=2131) and (v79<=((626 -(83 + 468)) -30))) then if (v79==((2615 -(1202 + 604)) -(574 + 191))) then local v202=v78[2];local v203={v76[v202](v76[v202 + (2 -1) ])};local v204=0 + 0 ;for v243=v202,v78[853 -(254 + (2777 -2182)) ] do local v244=126 -(55 + 71) ;while true do if ((3844>=2043) and (v244==(0 -0))) then v204=v204 + (1791 -(573 + 1217)) ;v76[v243]=v203[v204];break;end end end else local v205=v78[5 -3 ];v76[v205]=v76[v205](v13(v76,v205 + 1 ,v78[1 + (2 -0) ]));end elseif (v79>46) then v76[v78[2 -0 ]]=v60[v78[942 -(714 + 225) ]];elseif  not v76[v78[5 -3 ]] then v70=v70 + (1 -0) ;else v70=v78[1 + 2 ];end elseif (v79<=55) then if (v79<=51) then if (v79<=49) then if ((v79>(69 -21)) or (3232<=2731)) then v70=v78[(2239 -1430) -(118 + 688) ];else for v245=v78[50 -(25 + 23) ],v78[1 + 2 ] do v76[v245]=nil;end end elseif ((4905==4905) and (v79>(1936 -(927 + 959)))) then do return v76[v78[6 -4 ]];end else local v210=732 -(16 + 716) ;local v211;local v212;local v213;while true do if (v210==(1 -(325 -(45 + 280)))) then v213={};v212=v10({},{__index=function(v322,v323) local v324=v213[v323];return v324[98 -(11 + 86) ][v324[2]];end,__newindex=function(v325,v326,v327) local v328=v213[v326];v328[2 -1 ][v328[2]]=v327;end});v210=287 -(175 + 110) ;end if (v210==(4 -2)) then for v330=4 -3 ,v78[1800 -(503 + 1293) ] do v70=v70 + 1 + 0 ;local v331=v66[v70];if ((v331[1 + 0 ]==((63 + 107) -109)) or (4136>=4411)) then v213[v330-(1 + 0) ]={v76,v331[1 + 2 ]};else v213[v330-(1 + 0) ]={v59,v331[11 -8 ]};end v75[ #v75 + (860 -(240 + 619)) ]=v213;end v76[v78[1 + 1 ]]=v29(v211,v212,v60);break;end if (v210==(0 -0)) then v211=v67[v78[1 + 2 ]];v212=nil;v210=1745 -(1344 + 400) ;end end end elseif ((v79<=(458 -(45 + 210 + 150))) or (2958==4017)) then if ((1228>=813) and (v79==52)) then local v214=0 + 0 ;local v215;while true do if (v214==(0 + 0)) then v215=v78[8 -6 ];do return v13(v76,v215,v215 + v78[(16 -7) -6 ] );end break;end end elseif (v76[v78[1741 -(404 + 1335) ]] or (3455>4050)) then v70=v70 + (407 -((2094 -(340 + 1571)) + 223)) ;else v70=v78[3 -0 ];end elseif ((243==243) and (v79>(36 + 18))) then if (v76[v78[1 + 1 + 0 ]]==v76[v78[(2113 -(1733 + 39)) -(10 + (898 -571)) ]]) then v70=v70 + 1 + 0 ;else v70=v78[341 -((1152 -(125 + 909)) + 220) ];end else do return;end end elseif ((v79<=((1968 -(1096 + 852)) + 39)) or (271>1572)) then if (v79<=(506 -(49 + 59 + (486 -145)))) then if (v79>(26 + 30)) then local v216=v78[8 -6 ];local v217={v76[v216](v13(v76,v216 + 1 + 0 ,v78[5 -2 ]))};local v218=469 -(270 + 199) ;for v247=v216,v78[2 + 2 ] do v218=v218 + ((2332 -(409 + 103)) -((816 -(46 + 190)) + 1239)) ;v76[v247]=v217[v218];end else local v219=v78[2];v76[v219](v76[v219 + (2 -1) ]);end elseif (v79==(56 + 2)) then for v250=v78[2],v78[3] do v76[v250]=nil;end else v59[v78[1 + 2 ]]=v76[v78[2]];end elseif ((2739<3293) and (v79<=(27 + 34))) then if (v79==(156 -96)) then local v222=v78[2 + (95 -(51 + 44)) ];local v223=v76[v78[1170 -(182 + 463 + (1839 -(1114 + 203))) ]];v76[v222 + (1791 -(1010 + 780)) ]=v223;v76[v222]=v223[v78[4 + 0 ]];else v76[v78[9 -7 ]]=v76[v78[8 -(731 -(228 + 498)) ]];end elseif (v79<=(1898 -(1045 + 172 + 619))) then v76[v78[2]]=v78[7 -4 ]~=0 ;elseif (v79>(96 -33)) then local v269=505 -(351 + 154) ;local v270;local v271;local v272;while true do if ((v269==((871 + 704) -(1281 + 293))) or (3942<1134)) then v272=(929 -(174 + 489)) -(28 + (619 -381)) ;for v346=v270,v78[4] do local v347=(1905 -(830 + 1075)) -(524 -(303 + 221)) ;while true do if (v347==(1559 -(1381 + 178))) then v272=v272 + 1 ;v76[v346]=v271[v272];break;end end end break;end if ((v269==(0 + 0)) or (2693==4973)) then v270=v78[2];v271={v76[v270](v13(v76,v270 + 1 ,v78[2 + 1 ]))};v269=3 -2 ;end end else v76[v78[2 + 0 ]]=v76[v78[3]][v76[v78[4]]];end v70=v70 + (471 -((1650 -(231 + 1038)) + 89)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
