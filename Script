--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v89=0;while true do if (v89==0) then v19=v0(v3(v30,1,1));return "";end end else local v90=0;local v91;while true do if (v90==0) then v91=v2(v0(v30,16));if v19 then local v124=0;local v125;while true do if (0==v124) then v125=v5(v91,v19);v19=nil;v124=1;end if (v124==1) then return v125;end end else return v91;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v92=877 -(282 + (1552 -(892 + 65))) ;local v93;while true do if (v92==(0 -0)) then v93=(v31/((5 -3)^(v32-(1 -0))))%((4 -2)^(((v33-(620 -(555 + 64))) -(v32-1)) + 1)) ;return v93-(v93%((2222 -1290) -(857 + (136 -62)))) ;end end else local v94=0;local v95;while true do if (v94==(568 -(367 + (368 -167)))) then v95=(929 -(214 + 713))^(v32-((351 -(87 + 263)) + 0)) ;return (((v31%(v95 + v95))>=v95) and (1 + 0)) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (182 -(67 + 113)) ;return (v36 * (189 + 67)) + v35 ;end local function v23() local v37=0;local v38;local v39;local v40;local v41;while true do if (((0 -0) -0)==v37) then v38,v39,v40,v41=v1(v16,v18,v18 + (955 -(802 + 150)) );v18=v18 + (10 -6) ;v37=1 -0 ;end if (v37==(1 + 0)) then return (v41 * 16777216) + (v40 * (66533 -(915 + 82))) + (v39 * 256) + v38 ;end end end local function v24() local v42=0;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==3) then if (v47==(0 + 0)) then if (v46==(0 -0)) then return v48 * 0 ;else local v126=(420 + 767) -(1069 + 118) ;while true do if (v126==(0 -0)) then v47=1 -0 ;v45=0 + 0 ;break;end end end elseif (v47==(3636 -1589)) then return ((v46==0) and (v48 * ((1 + 0)/((2808 -2017) -(368 + 423))))) or (v48 * NaN) ;end return v8(v48,v47-((4073 -(814 + 45)) -2191) ) * (v45 + (v46/((20 -(10 + 8))^(199 -147)))) ;end if ((442 -(416 + 26))==v42) then v43=v23();v44=v23();v42=3 -(4 -2) ;end if (v42==1) then v45=1 + 0 ;v46=(v20(v44,1 -0 ,458 -(145 + 293) ) * ((432 -(44 + 21 + 365))^(1518 -(998 + (1373 -(261 + 624)))))) + v43 ;v42=(1 -0) + 1 ;end if (v42==2) then v47=v20(v44,(1098 -(1020 + 60)) + 3 ,803 -(201 + 571) );v48=((v20(v44,32)==(1139 -((1539 -(630 + 793)) + 1022))) and  -(4 -3)) or (1 + 0) ;v42=10 -7 ;end end end local function v25(v49) local v50=0 -0 ;local v51;local v52;while true do if (v50==(0 -0)) then v51=nil;if  not v49 then v49=v23();if (v49==(0 + 0)) then return "";end end v50=3 -2 ;end if (((1373 + 375) -(760 + 987))==v50) then v51=v3(v16,v18,(v18 + v49) -(1914 -(1789 + 124)) );v18=v18 + v49 ;v50=768 -(745 + 21) ;end if (v50==(1 + 1)) then v52={};for v113=2 -1 , #v51 do v52[v113]=v2(v1(v3(v51,v113,v113)));end v50=11 -8 ;end if (((1056 -(87 + 968)) + 2)==v50) then return v6(v52);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return function(v96,v97,v98,v99,v100,v101,v102,v103,v104) local v105=(function() return 0;end)();local v96=(function() return;end)();local v97=(function() return;end)();while true do if (v105==0) then local v120=(function() return 0 -0 ;end)();while true do if (v120~=(1991 -(582 + 1408))) then else v105=(function() return 1;end)();break;end if (v120~=0) then else v96=(function() return 0 -0 ;end)();v97=(function() return nil;end)();v120=(function() return 1 -0 ;end)();end end end if (v105~=(3 -2)) then else local v121=(function() return 0;end)();while true do if (v121~=0) then else while true do if (v96~=(1824 -(1195 + 629))) then else v97=(function() return v98();end)();if (v99(v97, #"]", #"[")~=(0 -0)) then else local v130=(function() return 0;end)();local v131=(function() return;end)();local v132=(function() return;end)();local v133=(function() return;end)();local v134=(function() return;end)();while true do if (v130~=(241 -(187 + 54))) then else local v135=(function() return 780 -(162 + 618) ;end)();while true do if (v135==(0 + 0)) then v131=(function() return 0 + 0 ;end)();v132=(function() return nil;end)();v135=(function() return 1 -0 ;end)();end if (v135~=(1 -0)) then else v130=(function() return 1;end)();break;end end end if (v130~=1) then else v133=(function() return nil;end)();v134=(function() return nil;end)();v130=(function() return 1 + 1 ;end)();end if (v130==2) then while true do if (v131== #"{") then local v281=(function() return 1636 -(1373 + 263) ;end)();local v282=(function() return;end)();while true do if (v281~=(1000 -(451 + 549))) then else v282=(function() return 0 + 0 ;end)();while true do if (1~=v282) then else v131=(function() return 2;end)();break;end if (v282==0) then v134=(function() return {v100(),v100(),nil,nil};end)();if (v132==(0 -0)) then local v371=(function() return 0 -0 ;end)();local v372=(function() return;end)();while true do if (v371==(1384 -(746 + 638))) then v372=(function() return 0;end)();while true do if (v372==0) then v134[ #"-19"]=(function() return v100();end)();v134[ #"xnxx"]=(function() return v100();end)();break;end end break;end end elseif (v132== #"~") then v134[ #"xxx"]=(function() return v101();end)();elseif (v132==(1 + 1)) then v134[ #"nil"]=(function() return v101() -((2 -0)^(357 -(218 + 123))) ;end)();elseif (v132~= #"91(") then else local v379=(function() return 1581 -(1535 + 46) ;end)();local v380=(function() return;end)();while true do if (v379==(0 + 0)) then v380=(function() return 0;end)();while true do if (v380==0) then v134[ #"asd"]=(function() return v101() -((1 + 1)^(576 -(306 + 254))) ;end)();v134[ #"0836"]=(function() return v100();end)();break;end end break;end end end v282=(function() return 1;end)();end end break;end end end if (v131~=2) then else local v283=(function() return 0;end)();local v284=(function() return;end)();while true do if (v283~=0) then else v284=(function() return 0 + 0 ;end)();while true do if (v284==0) then if (v99(v133, #"~", #"~")~= #"{") then else v134[3 -1 ]=(function() return v102[v134[2]];end)();end if (v99(v133,1469 -(899 + 568) ,2 + 0 )~= #"/") then else v134[ #"-19"]=(function() return v102[v134[ #"-19"]];end)();end v284=(function() return 1;end)();end if (v284~=1) then else v131=(function() return  #"gha";end)();break;end end break;end end end if (0~=v131) then else local v285=(function() return 0 -0 ;end)();local v286=(function() return;end)();while true do if (v285~=(603 -(268 + 335))) then else v286=(function() return 0;end)();while true do if (v286==(291 -(60 + 230))) then v131=(function() return  #"[";end)();break;end if (v286~=0) then else v132=(function() return v99(v97,2, #"asd");end)();v133=(function() return v99(v97, #"xnxx",6);end)();v286=(function() return 573 -(426 + 146) ;end)();end end break;end end end if (v131== #"91(") then if (v99(v133, #"19(", #"nil")~= #"}") then else v134[ #"xnxx"]=(function() return v102[v134[ #"asd1"]];end)();end v103[v104]=(function() return v134;end)();break;end end break;end end end break;end end return v96,v97,v98,v99,v100,v101,v102,v103,v104;end end end end end;end)();local v54=(function() return function(v106,v107,v108) local v109=(function() return 0 + 0 ;end)();local v110=(function() return;end)();while true do if (v109==0) then v110=(function() return 1456 -(282 + 1174) ;end)();while true do if (v110==0) then v106[v107-#"\\" ]=(function() return v108();end)();return v106,v107,v108;end end break;end end end;end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {};end)();local v58=(function() return {v55,v56,nil,v57};end)();local v59=(function() return v23();end)();local v60=(function() return {};end)();for v68= #".",v59 do local v69=(function() return 811 -(569 + 242) ;end)();local v70=(function() return;end)();local v71=(function() return;end)();local v72=(function() return;end)();while true do if (v69~=(0 -0)) then else local v115=(function() return 0 + 0 ;end)();while true do if (v115==(1024 -(706 + 318))) then v70=(function() return 1251 -(721 + 530) ;end)();v71=(function() return nil;end)();v115=(function() return 1;end)();end if ((1272 -(945 + 326))~=v115) then else v69=(function() return 1;end)();break;end end end if (v69~=(2 -1)) then else v72=(function() return nil;end)();while true do if (v70==(0 + 0)) then local v127=(function() return 0;end)();while true do if (v127~=0) then else v71=(function() return v21();end)();v72=(function() return nil;end)();v127=(function() return 1;end)();end if (v127==(701 -(271 + 429))) then v70=(function() return 1;end)();break;end end end if (1~=v70) then else if (v71== #",") then v72=(function() return v21()~=0 ;end)();elseif (v71==2) then v72=(function() return v24();end)();elseif (v71== #"xnx") then v72=(function() return v25();end)();end v60[v68]=(function() return v72;end)();break;end end break;end end end v58[ #"gha"]=(function() return v21();end)();for v73= #"/",v23() do FlatIdent_781F8,Descriptor,v21,v20,v22,v23,v60,v55,v73=(function() return v53(FlatIdent_781F8,Descriptor,v21,v20,v22,v23,v60,v55,v73);end)();end for v74= #">",v23() do v56,v74,v28=(function() return v54(v56,v74,v28);end)();end return v58;end local function v29(v62,v63,v64) local v65=v62[1 + 0 ];local v66=v62[1502 -(1408 + 92) ];local v67=v62[(2386 -1297) -(461 + 625) ];return function(...) local v75=v65;local v76=v66;local v77=v67;local v78=v27;local v79=1;local v80= -(1289 -(993 + 295));local v81={};local v82={...};local v83=v12("#",...) -1 ;local v84={};local v85={};for v111=1171 -(418 + 753) ,v83 do if ((2877>240) and (v111>=v77)) then v81[v111-v77 ]=v82[v111 + 1 + 0 ];else v85[v111]=v82[v111 + 1 + 0 ];end end local v86=(v83-v77) + 1 ;local v87;local v88;while true do local v112=0 + 0 ;while true do if (v112==(0 + 0)) then v87=v75[v79];v88=v87[1];v112=530 -(406 + 123) ;end if ((v112==(1770 -(1749 + 20))) or (2896<805)) then if (v88<=(8 + 23)) then if (v88<=(1337 -(1249 + 73))) then if ((2316==2316) and (v88<=7)) then if (v88<=3) then if ((v88<=1) or (2570==1533)) then if (v88==(0 + 0)) then v85[v87[1147 -(466 + 679) ]]=v63[v87[6 -3 ]];else v85[v87[5 -3 ]][v87[1903 -(106 + (3578 -(214 + 1570))) ]]=v87[2 + 2 ];end elseif ((v88==(1 + 1)) or (883==1460)) then v85[v87[(1460 -(990 + 465)) -3 ]]=v87[7 -4 ];elseif (v85[v87[2]]==v85[v87[4]]) then v79=v79 + (115 -(4 + 110)) ;else v79=v87[587 -(57 + 527) ];end elseif (v88<=(1432 -(41 + 1386))) then if (v88>(107 -(17 + 86))) then v63[v87[3]]=v85[v87[2]];else for v247=v87[1 + 1 + 0 ],v87[6 -3 ] do v85[v247]=nil;end end elseif (v88==(17 -11)) then if  not v85[v87[168 -(54 + 68 + 44) ]] then v79=v79 + (1 -0) ;else v79=v87[9 -6 ];end else local v144=0 + 0 ;local v145;local v146;local v147;local v148;while true do if (v144==(1 + 0)) then v80=(v147 + v145) -(1 -0) ;v148=65 -(30 + 35) ;v144=2 + 0 ;end if (v144==(1257 -(1015 + 28 + 214))) then v145=v87[2];v146,v147=v78(v85[v145](v13(v85,v145 + (3 -2) ,v87[1215 -((1270 -947) + (2615 -(1668 + 58))) ])));v144=2 -1 ;end if (v144==(628 -(512 + 114))) then for v324=v145,v80 do v148=v148 + (581 -(361 + 219)) ;v85[v324]=v146[v148];end break;end end end elseif (v88<=(331 -(53 + 267))) then if (v88<=(3 + 6)) then if (v88>(421 -(15 + 398))) then v85[v87[984 -(18 + 964) ]]=v85[v87[11 -8 ]][v85[v87[4]]];else do return;end end elseif (v88==(6 + 4)) then local v151=v87[2 + 0 ];local v152={v85[v151](v13(v85,v151 + (851 -(20 + 830)) ,v87[3 + 0 ]))};local v153=0;for v249=v151,v87[130 -(116 + 10) ] do local v250=0 + 0 ;while true do if (v250==(738 -(542 + 196))) then v153=v153 + (1 -(0 -0)) ;v85[v249]=v152[v153];break;end end end else local v154=0 + 0 ;local v155;local v156;local v157;while true do if ((v154==(0 + 0)) or (4619<=999)) then v155=v87[1 + 1 ];v156={v85[v155](v85[v155 + (2 -1) ])};v154=1552 -(1126 + 425) ;end if ((v154==(406 -(118 + (593 -306)))) or (3410>4116)) then v157=0 -0 ;for v329=v155,v87[4] do local v330=0 -0 ;while true do if ((v330==((522 + 599) -(118 + 1003))) or (903>=3059)) then v157=v157 + (2 -1) ;v85[v329]=v156[v157];break;end end end break;end end end elseif (v88<=(390 -(142 + 235))) then if (v88==(54 -42)) then v85[v87[2]]=v64[v87[1 + 2 ]];else v85[v87[979 -(553 + 424) ]]=v85[v87[5 -2 ]][v87[4 + 0 ]];end elseif ((v88>(14 + 0)) or (3976<2857)) then if  not v85[v87[2 + 0 ]] then v79=v79 + 1 + 0 ;else v79=v87[2 + 1 ];end else v85[v87[4 -2 ]]=v85[v87[7 -4 ]][v87[8 -4 ]];end elseif ((4930>2307) and (v88<=(7 + 3 + 13))) then if ((v88<=(91 -72)) or (4046<1291)) then if (v88<=17) then if (v88>(769 -(239 + 514))) then if (v87[1 + 1 ]==v85[v87[4]]) then v79=v79 + ((1157 + 173) -(797 + 532)) ;else v79=v87[3 + 0 ];end else local v164=(0 -0) + 0 ;local v165;local v166;while true do if (v164==(0 -0)) then v165=v87[1204 -(373 + 829) ];v166=v85[v87[734 -(476 + 255) ]];v164=1131 -(369 + 761) ;end if ((((1995 -(109 + 1885)) + 0)==v164) or (4241==3545)) then v85[v165 + (1 -0) ]=v166;v85[v165]=v166[v87[7 -3 ]];break;end end end elseif (v88==((1725 -(1269 + 200)) -(64 + (333 -159)))) then do return;end else v79=v87[1 + 2 ];end elseif (v88<=(30 -9)) then if (v88==(356 -(144 + 192))) then local v168=v87[218 -(42 + (989 -(98 + 717))) ];local v169=v87[4 + 0 ];local v170=v168 + (828 -(802 + 24)) + 0 ;local v171={v85[v168](v85[v168 + (1505 -(363 + 1141)) ],v85[v170])};for v251=1581 -(1183 + 397) ,v169 do v85[v170 + v251 ]=v171[v251];end local v172=v171[2 -1 ];if v172 then local v292=0 + 0 ;while true do if (v292==(0 -0)) then v85[v170]=v172;v79=v87[3];break;end end else v79=v79 + 1 + 0 ;end else v85[v87[(292 + 1685) -(1913 + 62) ]]=v87[2 + 1 ];end elseif (v88==(58 -36)) then local v175=1933 -(435 + 130 + 1368) ;local v176;while true do if (v175==0) then v176=v87[7 -(1 + 4) ];v85[v176]=v85[v176]();break;end end else local v177=v87[2];local v178={};for v254=1662 -(1477 + 184) , #v84 do local v255=v84[v254];for v293=0 -0 , #v255 do local v294=v255[v293];local v295=v294[1 + 0 ];local v296=v294[858 -(564 + 292) ];if ((v295==v85) and (v296>=v177)) then v178[v296]=v295[v296];v294[1 -0 ]=v178;end end end end elseif (v88<=((18 + 63) -54)) then if (v88<=(329 -(244 + (166 -106)))) then if ((v88>(19 + 5)) or (4048>4232)) then local v179=476 -(41 + 435) ;local v180;while true do if ((v179==(1001 -(938 + 63))) or (1750>=3473)) then v180=v87[2 + (0 -0) ];do return v13(v85,v180,v180 + v87[3] );end break;end end else local v181=(403 + 722) -(936 + 77 + 112) ;local v182;while true do if ((3166==3166) and (v181==(0 + 0))) then v182=v87[2];v85[v182]=v85[v182](v13(v85,v182 + 1 ,v80));break;end end end elseif (v88>(1639 -(1565 + 48))) then local v183=v87[2 + 0 ];v85[v183]=v85[v183]();elseif ((1763<3724) and (v85[v87[1140 -(782 + 294 + 62) ]]==v87[271 -(176 + 91) ])) then v79=v79 + (2 -1) ;else v79=v87[3];end elseif ((57<=2723) and (v88<=29)) then if (v88==((30 + 11) -13)) then local v185=v87[1094 -(975 + 117) ];local v186=v87[1879 -(157 + 1718) ];local v187=v185 + 2 + 0 ;local v188={v85[v185](v85[v185 + (3 -2) ],v85[v187])};for v256=3 -2 ,v186 do v85[v187 + v256 ]=v188[v256];end local v189=v188[1019 -((2130 -(797 + 636)) + (1558 -1237)) ];if v189 then local v298=0 -0 ;while true do if (v298==(0 -0)) then v85[v187]=v189;v79=v87[6 -3 ];break;end end else v79=v79 + 1 + 0 ;end elseif (v85[v87[2]]==v87[4]) then v79=v79 + (1 -0) ;else v79=v87[7 -4 ];end elseif (v88>30) then local v190=1227 -((1941 -(1427 + 192)) + 905) ;local v191;while true do if (v190==(611 -(602 + 4 + 5))) then v191=v87[1191 -(449 + 740) ];v85[v191](v85[v191 + (873 -(826 + 46)) ]);break;end end else v85[v87[2]]={};end elseif (v88<=((2307 -1313) -(245 + 702))) then if (v88<=(122 -83)) then if ((v88<=(32 + 3)) or (2070==443)) then if ((v88<=(11 + 22)) or (2705==1393)) then if (v88>(1930 -(260 + 1638))) then local v193=440 -(382 + 58) ;local v194;local v195;while true do if (v193==(0 -0)) then v194=v87[2 + 0 ];v195={};v193=1 -0 ;end if ((2 -(1 + 0))==v193) then for v334=1206 -(902 + 303) , #v84 do local v335=v84[v334];for v358=(326 -(192 + 134)) -0 , #v335 do local v359=v335[v358];local v360=v359[1];local v361=v359[4 -2 ];if ((v360==v85) and (v361>=v194)) then v195[v361]=v360[v361];v359[1 + 0 ]=v195;end end end break;end end else v85[v87[2]]();end elseif ((v88>34) or (4601<61)) then local v196=1690 -(1121 + 569) ;local v197;while true do if (v196==(214 -(22 + 192))) then v197=v87[685 -((1759 -(316 + 960)) + 200) ];v85[v197](v13(v85,v197 + (1464 -(1404 + 59)) ,v87[8 -5 ]));break;end end else local v198=0;local v199;while true do if (v198==(0 -(0 + 0))) then v199=v87[2];v85[v199]=v85[v199](v13(v85,v199 + (766 -(468 + 297)) ,v87[3 + 0 ]));break;end end end elseif ((v88<=(599 -(334 + 211 + 17))) or (1390>=4744)) then if ((v88>((462 -341) -85)) or (2003>3834)) then v85[v87[4 -2 ]]=v85[v87[3]];else v85[v87[2]]();end elseif (v88>(68 -30)) then local v202=v87[2];local v203={v85[v202](v85[v202 + (237 -(141 + 95)) ])};local v204=0 + 0 ;for v259=v202,v87[(1815 -(1202 + 604)) -5 ] do v204=v204 + ((9 -7) -1) ;v85[v259]=v203[v204];end else v85[v87[1 + (1 -0) ]]=v87[(22 -14) -5 ]~=(0 + 0) ;end elseif (v88<=(23 + 20)) then if ((v88<=(57 -16)) or (156>3913)) then if (v88==(24 + 16)) then local v206=v87[165 -(92 + 71) ];v85[v206]=v85[v206](v13(v85,v206 + 1 + 0 ,v80));else v85[v87[2 -0 ]]={};end elseif ((195==195) and (v88==42)) then local v209=v87[(1092 -(45 + 280)) -(574 + 191) ];local v210=v85[v87[3]];v85[v209 + 1 + 0 ]=v210;v85[v209]=v210[v87[9 -5 ]];else v85[v87[2 + 0 ]]=v64[v87[852 -(254 + 575 + 20) ]];end elseif (v88<=45) then if (v88>44) then local v216=v87[128 -(55 + 71) ];v85[v216]=v85[v216](v13(v85,v216 + (1 -0) ,v87[1793 -(573 + 1217) ]));else local v218=0;local v219;local v220;local v221;while true do if ((3105>=1796) and (v218==1)) then v221={};v220=v10({},{__index=function(v336,v337) local v338=v221[v337];return v338[1][v338[5 -3 ]];end,__newindex=function(v339,v340,v341) local v342=v221[v340];v342[1 + 0 ][v342[2 -0 ]]=v341;end});v218=1 + 1 ;end if (v218==(939 -(714 + 225))) then v219=v76[v87[8 -5 ]];v220=nil;v218=1;end if ((4379>=2131) and (v218==(2 -0))) then for v344=1 + 0 ,v87[5 -(1 + 0) ] do local v345=0;local v346;while true do if (v345==(807 -(118 + 688))) then if ((3844>=2043) and (v346[49 -(25 + 23) ]==49)) then v221[v344-(1 + 0) ]={v85,v346[3]};else v221[v344-(1 -0) ]={v63,v346[735 -(16 + 716) ]};end v84[ #v84 + (1 -0) ]=v221;break;end if (v345==(97 -(11 + 86))) then v79=v79 + (2 -1) ;v346=v75[v79];v345=286 -(175 + 110) ;end end end v85[v87[4 -2 ]]=v29(v219,v220,v64);break;end end end elseif ((v88>(226 -180)) or (3232<=2731)) then local v222=v87[1798 -(503 + 510 + 783) ];local v223={v85[v222](v13(v85,v222 + 1 + 0 ,v87[1064 -(810 + 251) ]))};local v224=0;for v262=v222,v87[4] do v224=v224 + 1 ;v85[v262]=v223[v224];end else for v265=v87[2 + 0 ],v87[3] do v85[v265]=nil;end end elseif (v88<=(17 + 38)) then if ((4905==4905) and (v88<=51)) then if ((v88<=(45 + 4)) or (4136>=4411)) then if (v88>(581 -(43 + 490))) then v85[v87[735 -(711 + 22) ]]=v85[v87[11 -8 ]];elseif v85[v87[861 -(240 + 619) ]] then v79=v79 + 1 + 0 ;else v79=v87[3];end elseif ((v88==((1113 -(125 + 909)) -(1977 -(1096 + 852)))) or (2958==4017)) then local v227=v87[1 + 1 ];local v228,v229=v78(v85[v227](v13(v85,v227 + 1 ,v87[1747 -(1344 + 400) ])));v80=(v229 + v227) -1 ;local v230=(182 + 223) -(255 + 150) ;for v267=v227,v80 do local v268=0 + 0 ;while true do if ((1228>=813) and ((0 + 0)==v268)) then v230=v230 + (4 -3) ;v85[v267]=v228[v230];break;end end end else local v231=v87[6 -4 ];v85[v231](v85[v231 + (1740 -(404 + 1335)) ]);end elseif (v88<=(459 -(183 + 223))) then if ((v88>(62 -10)) or (3455>4050)) then v85[v87[2]]=v63[v87[2 + 1 ]];else v63[v87[3]]=v85[v87[1 + 1 ]];end elseif (v88==(391 -(10 + 327))) then v79=v87[3];else v85[v87[2]]=v87[3 + (0 -0) ]~=0 ;end elseif (v88<=(397 -(118 + 220))) then if (v88<=(19 + 37 + 1)) then if ((243==243) and (v88>(505 -(108 + (853 -(409 + 103)))))) then do return v85[v87[2]];end else local v238=v87[1 + 1 ];v85[v238](v13(v85,v238 + (4 -3) ,v87[1496 -(711 + 782) ]));end elseif (v88>58) then v85[v87[2]][v87[5 -2 ]]=v87[(709 -(46 + 190)) -(270 + 199) ];elseif v85[v87[2]] then v79=v79 + (96 -(51 + 44)) + 0 ;else v79=v87[1822 -(580 + 1239) ];end elseif (v88<=(181 -120)) then if (v88>(58 + 2)) then local v241=v76[v87[3]];local v242;local v243={};v242=v10({},{__index=function(v269,v270) local v271=0 + 0 ;local v272;while true do if (v271==(0 + 0)) then v272=v243[v270];return v272[2 -1 ][v272[2]];end end end,__newindex=function(v273,v274,v275) local v276=0 + 0 ;local v277;while true do if (v276==(1167 -(645 + 522))) then v277=v243[v274];v277[1791 -(1010 + 780) ][v277[2 + 0 ]]=v275;break;end end end});for v278=4 -3 ,v87[4] do v79=v79 + 1 ;local v279=v75[v79];if (v279[2 -1 ]==49) then v243[v278-1 ]={v85,v279[3]};else v243[v278-(1 -0) ]={v63,v279[269 -(28 + 238) ]};end v84[ #v84 + 1 ]=v243;end v85[v87[4 -2 ]]=v29(v241,v242,v64);else v85[v87[1561 -(1381 + 178) ]]=v85[v87[3 + 0 ]][v85[v87[4 + 0 ]]];end elseif (v88<=(35 + 27)) then do return v85[v87[1 + 1 ]];end elseif ((v88>63) or (271>1572)) then if (v85[v87[(669 -(174 + 489)) -(10 -6) ]]==v85[v87[4]]) then v79=v79 + 1 + 0 ;else v79=v87[3];end elseif (v87[472 -(381 + 89) ]==v85[v87[4 + 0 ]]) then v79=v79 + 1 + 0 ;else v79=v87[4 -(1906 -(830 + 1075)) ];end v79=v79 + (1157 -(1074 + 82)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
