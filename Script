local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v86=v2(v0(v30,16));if v19 then local v115=0;local v116;while true do if (v115==0) then v116=v5(v86,v19);v19=nil;v115=1;end if (v115==1) then return v116;end end else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=(v31/(2^(v32-(2 -1))))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(88 + 467 + 64)))) ;return v87-(v87%(932 -(857 + 74))) ;else local v88=(570 -(367 + 201))^(v32-(928 -((1091 -(282 + 595)) + 713))) ;return (((v31%(v88 + v88))>=v88) and (1 + (1637 -(1523 + 114)))) or 0 ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1273 -(226 + 1024 + 20)) );v18=v18 + (17 -13) ;return (v40 * 16777216) + (v39 * (65653 -(32 + 85))) + (v38 * (57 + 199)) + v37 ;end local function v24() local v41=957 -((910 -(10 + 8)) + (249 -184)) ;local v42;local v43;local v44;local v45;local v46;local v47;while true do if (v41==(2 -1)) then v44=(443 -(416 + 26)) -0 ;v45=(v20(v43,1 -0 ,370 -(87 + 263) ) * (2^(212 -((213 -146) + 49 + 64)))) + v42 ;v41=(3 -1) + 0 ;end if (v41==(7 -(442 -(145 + 293)))) then if (v46==(0 + 0)) then if (v45==0) then return v47 * (0 -0) ;else v46=953 -(802 + 150) ;v44=0;end elseif (v46==(5511 -3464)) then return ((v45==(0 -0)) and (v47 * ((1 + (430 -(44 + 386)))/(1486 -(998 + 488))))) or (v47 * NaN) ;end return v8(v47,v46-(2020 -(915 + 82)) ) * (v44 + (v45/(2^(147 -(31 + 64))))) ;end if ((0 + 0)==v41) then v42=v23();v43=v23();v41=1 -0 ;end if ((1189 -(1069 + 118))==v41) then v46=v20(v43,(39 + 8) -26 ,67 -36 );v47=((v20(v43,6 + 26 )==(1 -0)) and  -(1 + 0)) or (792 -(368 + 423)) ;v41=9 -6 ;end end end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(773 -(201 + 571)) );v18=v18 + v48 ;local v50={};for v67=1139 -(116 + 1022) , #v49 do v50[v67]=v2(v1(v3(v49,v67,v67)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 374 -(123 + 251) ;end)();local v90=(function() return;end)();local v91=(function() return;end)();while true do if (v89~= #"{") then else if (v90== #"\\") then v91=(function() return v92()~=0 ;end)();elseif (v90==(9 -7)) then v91=(function() return v93();end)();elseif (v90== #"asd") then v91=(function() return v94();end)();end v95[v96]=(function() return v91;end)();break;end if (v89~=0) then else local v122=(function() return 0 + 0 ;end)();while true do if (v122==(699 -(208 + 490))) then v89=(function() return  #"{";end)();break;end if (v122==(0 + 0)) then v90=(function() return v92();end)();v91=(function() return nil;end)();v122=(function() return 1;end)();end end end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v52=(function() return function(v97,v98,v99,v100,v101,v102,v103,v104,v105) local v106=(function() return 0;end)();local v97=(function() return;end)();local v98=(function() return;end)();while true do local v114=(function() return 0 + 0 ;end)();while true do if (v114~=(0 -0)) then else if (v106==(837 -(660 + 176))) then while true do if (v97==0) then v98=(function() return v99();end)();if (v100(v98, #"~", #",")==(1636 -(1373 + 263))) then local v129=(function() return 1000 -(451 + 549) ;end)();local v130=(function() return;end)();local v131=(function() return;end)();local v132=(function() return;end)();while true do if (1~=v129) then else local v133=(function() return 0 + 0 ;end)();while true do if (v133~=(202 -(14 + 188))) then else local v280=(function() return 675 -(534 + 141) ;end)();while true do if (v280==(1 + 0)) then v133=(function() return 1;end)();break;end if ((0 + 0)~=v280) then else v132=(function() return {v101(),v101(),nil,nil};end)();if (v130==(0 -0)) then local v345=(function() return 0 -0 ;end)();local v346=(function() return;end)();while true do if (v345==(0 -0)) then v346=(function() return 0 + 0 ;end)();while true do if (v346==(1581 -(1535 + 46))) then v132[ #"xxx"]=(function() return v101();end)();v132[ #"0313"]=(function() return v101();end)();break;end end break;end end elseif (v130== #"\\") then v132[ #"91("]=(function() return v102();end)();elseif (v130==(2 + 0)) then v132[ #"asd"]=(function() return v102() -((1 + 1)^(11 + 5)) ;end)();elseif (v130== #"xxx") then local v375=(function() return 396 -(115 + 281) ;end)();local v376=(function() return;end)();while true do if (0~=v375) then else v376=(function() return 0 -0 ;end)();while true do if (v376==0) then v132[ #"asd"]=(function() return v102() -((2 + 0)^(38 -22)) ;end)();v132[ #"0313"]=(function() return v101();end)();break;end end break;end end end v280=(function() return 3 -2 ;end)();end end end if (v133==(868 -(550 + 317))) then v129=(function() return 4 -2 ;end)();break;end end end if (3==v129) then if (v100(v131, #"asd", #"91(")~= #",") then else v132[ #"asd1"]=(function() return v103[v132[ #"0836"]];end)();end v104[v105]=(function() return v132;end)();break;end if (v129~=(0 -0)) then else local v135=(function() return 0;end)();while true do if (v135==(1 -0)) then v129=(function() return 573 -(426 + 146) ;end)();break;end if (v135==0) then v130=(function() return v100(v98,2, #"-19");end)();v131=(function() return v100(v98, #"asd1",6);end)();v135=(function() return 2 -1 ;end)();end end end if (v129==2) then if (v100(v131, #"~", #".")== #"~") then v132[2]=(function() return v103[v132[287 -(134 + 151) ]];end)();end if (v100(v131,2,1667 -(970 + 695) )~= #"!") then else v132[ #"xnx"]=(function() return v103[v132[ #"-19"]];end)();end v129=(function() return 3;end)();end end end break;end end return v97,v98,v99,v100,v101,v102,v103,v104,v105;end if (v106==(0 -0)) then local v125=(function() return 1990 -(582 + 1408) ;end)();local v126=(function() return;end)();while true do if (v125==(0 -0)) then v126=(function() return 0 + 0 ;end)();while true do if (v126==1) then v106=(function() return 1 -0 ;end)();break;end if (v126~=(0 -0)) then else v97=(function() return 1271 -(945 + 326) ;end)();v98=(function() return nil;end)();v126=(function() return 2 -1 ;end)();end end break;end end end break;end end end end;end)();local v53=(function() return function(v107,v108,v109) local v110=(function() return 0 + 0 ;end)();local v111=(function() return;end)();while true do if (v110==0) then v111=(function() return 1824 -(1195 + 629) ;end)();while true do if (v111==(700 -(271 + 429))) then local v127=(function() return 0;end)();while true do if (v127~=(0 -0)) then else v107[v108-#"<" ]=(function() return v109();end)();return v107,v108,v109;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"{",v58 do FlatIdent_7126A,Type,Cons,v21,v24,v25,v59,v69=(function() return v51(FlatIdent_7126A,Type,Cons,v21,v24,v25,v59,v69);end)();end v57[ #"-19"]=(function() return v21();end)();for v70= #",",v23() do FlatIdent_882F4,Descriptor,v21,v20,v22,v23,v59,v54,v70=(function() return v52(FlatIdent_882F4,Descriptor,v21,v20,v22,v23,v59,v54,v70);end)();end for v71= #"\\",v23() do v55,v71,v28=(function() return v53(v55,v71,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[1501 -(1408 + 92) ];local v65=v61[1088 -(461 + 625) ];local v66=v61[1291 -(993 + 295) ];return function(...) local v72=v64;local v73=v65;local v74=v66;local v75=v27;local v76=1 + 0 ;local v77= -((305 -(300 + 4)) + 0 + 0);local v78={};local v79={...};local v80=v12("#",...) -(1 + 0) ;local v81={};local v82={};for v112=0 + (362 -(112 + 250)) ,v80 do if (v112>=v74) then v78[v112-v74 ]=v79[v112 + 1 + 0 ];else v82[v112]=v79[v112 + 1 + 0 ];end end local v83=(v80-v74) + 1 + 0 ;local v84;local v85;while true do local v113=(211 + 318) -(406 + 123) ;while true do if (v113==(1769 -(1749 + (50 -30)))) then v84=v72[v76];v85=v84[1 + 0 ];v113=1;end if (v113==(1323 -(1249 + 42 + 31))) then if ((v85<=(12 + 19)) or (2575==4178)) then if (v85<=(1160 -(466 + 679))) then if (v85<=(16 -9)) then if (v85<=(8 -5)) then if ((v85<=(1901 -(106 + 928 + 866))) or (86>=3626)) then if (v85>(0 + 0 + 0)) then local v136=v84[1 + 1 ];local v137={v82[v136](v82[v136 + (2 -1) ])};local v138=114 -(4 + 110) ;for v249=v136,v84[1 + 0 + 3 ] do local v250=584 -(57 + 527) ;while true do if ((1427 -(41 + 1386))==v250) then v138=v138 + (104 -(17 + 86)) ;v82[v249]=v137[v138];break;end end end else v82[v84[6 -4 ]]=v82[v84[3 + 0 ]][v84[(1095 + 378) -((2683 -(1001 + 413)) + 200) ]];end elseif ((2395==2395) and (v85>2)) then v82[v84[3 -1 ]]=v63[v84[818 -(98 + 717) ]];else v82[v84[5 -3 ]]=v84[169 -(122 + 44) ];end elseif (v85<=(8 -3)) then if ((3780>2709) and (v85>(12 -8))) then local v145=v84[2 + 0 ];local v146={v82[v145](v82[v145 + 1 + 0 ])};local v147=(882 -(244 + 638)) -0 ;for v251=v145,v84[(762 -(627 + 66)) -((89 -59) + (637 -(512 + 90))) ] do local v252=0 + 0 ;while true do if (v252==(1257 -(1043 + 214))) then v147=v147 + (3 -2) ;v82[v251]=v146[v147];break;end end end else v82[v84[1214 -(323 + 889) ]][v84[7 -4 ]]=v84[3 + (1907 -(1665 + 241)) ];end elseif ((v85==(586 -((1078 -(373 + 344)) + 219))) or (237>=2273)) then local v150=0 + 0 ;local v151;local v152;local v153;while true do if ((v150==((146 + 176) -(53 + 267))) or (2040<=703)) then for v317=1 + 0 ,v84[4] do local v318=413 -(4 + 11 + 398) ;local v319;while true do if (v318==(982 -(18 + 964))) then v76=v76 + (3 -2) ;v319=v72[v76];v318=2 -1 ;end if (v318==(1 + 0)) then if (v319[1 + 0 ]==(869 -(20 + (2189 -1359)))) then v153[v317-(1 + 0) ]={v82,v319[1 + 2 ]};else v153[v317-(739 -(542 + 196)) ]={v62,v319[554 -(83 + 468) ]};end v81[ #v81 + 1 ]=v153;break;end end end v82[v84[2]]=v29(v151,v152,v63);break;end if ((0 + (1099 -(35 + 1064)))==v150) then v151=v73[v84[1809 -(1202 + 604) ]];v152=nil;v150=1 + 0 ;end if (v150==(1 + 0)) then v153={};v152=v10({},{__index=function(v320,v321) local v322=v153[v321];return v322[2 -1 ][v322[4 -2 ]];end,__newindex=function(v323,v324,v325) local v326=325 -(45 + 280) ;local v327;while true do if ((3279<=3967) and (v326==(1551 -(1126 + 425)))) then v327=v153[v324];v327[406 -(118 + 287) ][v327[2 + 0 ]]=v325;break;end end end});v150=7 -5 ;end end elseif ((v82[v84[1123 -(118 + 1003) ]]==v84[1 + 0 + 3 ]) or (1988==877)) then v76=v76 + (2 -1) ;else v76=v84[380 -((1378 -(298 + 938)) + 235) ];end elseif ((4291>1912) and (v85<=(1922 -((1599 -(233 + 1026)) + 1571)))) then if ((2003<2339) and (v85<=(4 + 5))) then if ((432==432) and (v85>8)) then for v253=v84[1774 -(1733 + 39) ],v84[13 -10 ] do v82[v253]=nil;end else local v154=v84[1 + 1 ];v82[v154](v13(v82,v154 + (978 -(553 + 424)) ,v84[5 -2 ]));end elseif (v85>(5 + 5)) then local v155=(1666 -(636 + 1030)) + 0 ;local v156;local v157;local v158;local v159;while true do if ((v155==(0 + 0)) or (1145>=1253)) then v156=v84[2 + 0 ];v157,v158=v75(v82[v156](v13(v82,v156 + ((1 + 0) -0) ,v84[3 + 0 + 0 ])));v155=1 + 0 ;end if (v155==(514 -(122 + 287 + 103))) then for v328=v156,v77 do local v329=236 -(46 + 190) ;while true do if (v329==(0 + 0)) then v159=v159 + 1 + 0 ;v82[v328]=v157[v159];break;end end end break;end if ((3418>2118) and (v155==1)) then v77=(v158 + v156) -(2 -1) ;v159=0 -(0 + 0) ;v155=2;end end else v82[v84[1 + 1 ]]=v82[v84[6 -3 ]];end elseif (v85<=(676 -(174 + 489))) then if (v85==(4 + 8)) then local v162=v84[1907 -(830 + (1296 -(55 + 166))) ];local v163=v82[v84[14 -11 ]];v82[v162 + (754 -(239 + 514)) ]=v163;v82[v162]=v163[v84[4 + 0 ]];else v82[v84[1 + 1 ]]=v84[3];end elseif (v85==(1343 -(797 + 532))) then local v169=v84[2 + 0 ];v82[v169](v82[v169 + 1 + 0 ]);else local v170=v73[v84[6 -3 ]];local v171;local v172={};v171=v10({},{__index=function(v255,v256) local v257=1202 -(373 + 829) ;local v258;while true do if (v257==(731 -(476 + 255))) then v258=v172[v256];return v258[1131 -(369 + 761) ][v258[2 + 0 ]];end end end,__newindex=function(v259,v260,v261) local v262=0 -0 ;local v263;while true do if (v262==(158 -(91 + 67))) then v263=v172[v260];v263[1 -0 ][v263[1 + 1 ]]=v261;break;end end end});for v264=524 -(423 + 100) ,v84[1 + 3 ] do v76=v76 + (239 -(64 + 174)) ;local v265=v72[v76];if (v265[2 -1 ]==(3 + 16)) then v172[v264-(772 -(326 + 445)) ]={v82,v265[219 -(42 + 174) ]};else v172[v264-(1 + 0) ]={v62,v265[1507 -(363 + 1141) ]};end v81[ #v81 + (1581 -(1183 + 397)) ]=v172;end v82[v84[2]]=v29(v170,v171,v63);end elseif ((3066<=3890) and (v85<=(65 -42))) then if (v85<=(57 -38)) then if ((v85<=(13 + 4)) or (2998>=3281)) then if ((v85>(12 + 4)) or (4649<=2632)) then if ((v82[v84[3 -1 ]]==v82[v84[(3347 -(34 + 1334)) -(1913 + 62) ]]) or (3860>4872)) then v76=v76 + 1 + 0 + 0 ;else v76=v84[1815 -(1293 + 519) ];end else v62[v84[5 -2 ]]=v82[v84[5 -3 ]];end elseif (v85==(1951 -(565 + 1368))) then v82[v84[7 -5 ]]();else v82[v84[(1293 + 370) -(1477 + 184) ]]=v82[v84[3 -0 ]];end elseif (v85<=(20 + 1)) then if (v85==(876 -(564 + 292))) then v82[v84[2]]=v82[v84[4 -(1284 -(1035 + 248)) ]][v82[v84[(32 -(20 + 1)) -(4 + 3) ]]];else local v180=v84[306 -((563 -(134 + 185)) + 60) ];local v181={v82[v180](v13(v82,v180 + 1 ,v84[479 -(41 + 435) ]))};local v182=1858 -(673 + 1185) ;for v267=v180,v84[(2138 -(549 + 584)) -(938 + 63) ] do local v268=0 + 0 ;while true do if (v268==((1810 -(314 + 371)) -(936 + 189))) then v182=v182 + 1 + 0 ;v82[v267]=v181[v182];break;end end end end elseif ((v85>(1635 -(1565 + 48))) or (3998==2298)) then v82[v84[2 + (0 -0) ]]=v82[v84[1141 -(782 + 356) ]][v82[v84[271 -(176 + 91) ]]];else local v185=v84[3 -1 ];local v186,v187=v75(v82[v185](v13(v82,v185 + (1881 -(446 + 1434)) ,v84[3])));v77=(v187 + v185) -(2 -1) ;local v188=0 -(968 -(478 + 490)) ;for v269=v185,v77 do v188=v188 + (1093 -(975 + 117)) ;v82[v269]=v186[v188];end end elseif (v85<=(1902 -(157 + 1718))) then if (v85<=(12 + 9 + 4)) then if (v85>((1257 -(786 + 386)) -(197 -136))) then if  not v82[v84[(1385 -(1055 + 324)) -4 ]] then v76=v76 + ((2359 -(1093 + 247)) -(697 + 321)) ;else v76=v84[7 -4 ];end else local v189=0 -0 ;local v190;while true do if ((v189==(0 -0)) or (8>=2739)) then v190=v84[4 -2 ];do return v13(v82,v190,v190 + v84[3] );end break;end end end elseif (v85==(11 + 15)) then v76=v84[5 -2 ];else v82[v84[5 -3 ]]={};end elseif (v85<=(1256 -(322 + 905))) then if ((2590==2590) and (v85>(639 -(602 + 9)))) then v82[v84[1191 -(449 + 658 + 82) ]]=v84[875 -(87 + 739 + 46) ]~=((3759 -2812) -(245 + (2382 -1680))) ;else v82[v84[6 -4 ]][v84[1 + 2 ]]=v84[10 -6 ];end elseif (v85==(1928 -((653 -393) + 1638))) then local v196=440 -(382 + 58) ;local v197;while true do if (v196==(0 -0)) then v197=v84[2 + 0 ];v82[v197]=v82[v197]();break;end end elseif v82[v84[(2 + 1) -1 ]] then v76=v76 + (2 -1) ;else v76=v84[8 -5 ];end elseif (v85<=(1252 -(902 + 303))) then if (v85<=(85 -46)) then if (v85<=(84 -49)) then if (v85<=(3 + 30)) then if (v85>(1722 -(1121 + 569))) then local v198=0 + 0 ;local v199;while true do if (v198==(214 -(22 + 192))) then v199=v84[685 -(483 + 200) ];v82[v199](v82[v199 + (1464 -(1404 + 59)) ]);break;end end else v82[v84[5 -(11 -8) ]]=v63[v84[(10 -7) + 0 ]];end elseif (v85==(44 -10)) then v82[v84[1051 -(572 + 477) ]]=v82[v84[1 + 2 ]][v84[769 -(353 + 115 + 297) ]];else local v204=562 -(334 + 228) ;local v205;local v206;while true do if (v204==(3 -2)) then for v335=2 -1 , #v81 do local v336=0;local v337;while true do if (v336==(0 -0)) then v337=v81[v335];for v357=0, #v337 do local v358=v337[v357];local v359=v358[(2155 -1312) -(497 + 345) ];local v360=v358[1 + (689 -(364 + 324)) ];if ((v359==v82) and (v360>=v205)) then v206[v360]=v359[v360];v358[237 -(141 + 95) ]=v206;end end break;end end end break;end if (v204==(1333 -(605 + 728))) then v205=v84[(5 -3) + (0 -0) ];v206={};v204=2 -1 ;end end end elseif (v85<=(2 + 35)) then if ((v85==(133 -97)) or (82>=1870)) then v82[v84[4 -2 ]]=v84[1 + 2 ]~=(0 -0) ;else for v272=v84[2 + 0 ],v84[2 + 1 ] do v82[v272]=nil;end end elseif (v85>(53 -15)) then do return;end else v82[v84[2 + 0 + 0 ]]=v62[v84[166 -(92 + 71) ]];end elseif (v85<=((91 -69) + 21)) then if (v85<=(68 -27)) then if (v85==(805 -(574 + 191))) then v82[v84[2 + 0 ]]();elseif (v82[v84[4 -2 ]]==v84[(4 -1) + 1 ]) then v76=v76 + (850 -(254 + 595)) ;else v76=v84[6 -3 ];end elseif (v85==(127 -85)) then local v210=v84[2 + 0 ];local v211=v84[130 -(55 + 71) ];local v212=v210 + (1891 -(1569 + 320)) ;local v213={v82[v210](v82[v210 + (1 -0) ],v82[v212])};for v274=1 + 0 ,v211 do v82[v212 + v274 ]=v213[v274];end local v214=v213[1791 -(573 + 1217) ];if v214 then local v286=0 -0 ;while true do if (v286==(0 + 0)) then v82[v212]=v214;v76=v84[(4 + 0) -(3 -2) ];break;end end else v76=v76 + (940 -((1800 -(686 + 400)) + 177 + 48)) ;end else local v215=0 -0 ;local v216;local v217;local v218;while true do if (v215==((230 -(73 + 156)) -0)) then v218=0 + 0 ;for v338=v216,v84[5 -1 ] do local v339=0 + 0 ;while true do if ((2624<4557) and (v339==(806 -(118 + 688)))) then v218=v218 + (49 -(25 + 23)) ;v82[v338]=v217[v218];break;end end end break;end if (v215==(0 + 0)) then v216=v84[1 + 1 ];v217={v82[v216](v13(v82,v216 + (3 -2) ,v84[735 -(16 + 716) ]))};v215=1 -0 ;end end end elseif ((v85<=(142 -(11 + 86))) or (3131>3542)) then if (v85>(85 -41)) then if (v84[4 -(1 + 1) ]==v82[v84[4]]) then v76=v76 + (286 -(175 + 110)) ;else v76=v84[3];end else local v219=v84[7 -5 ];v82[v219]=v82[v219]();end elseif (v85==(115 -69)) then local v221=(811 -(721 + 90)) -0 ;local v222;while true do if (v221==(1796 -(503 + 1293))) then v222=v84[5 -3 ];v82[v222](v13(v82,v222 + 1 ,v84[2 + 1 ]));break;end end else do return;end end elseif (v85<=(1 + 39 + 15)) then if ((2577>=1578) and (v85<=(1112 -(810 + 251)))) then if ((4103<=4571) and (v85<=((113 -78) + 14))) then if ((v85==(15 + 33)) or (1495==4787)) then v82[v84[4 -2 ]]={};else do return v82[v84[2 + 0 ]];end end elseif ((v85>(583 -(43 + 490))) or (310>4434)) then local v224=v84[735 -((1181 -(224 + 246)) + 22) ];local v225=v82[v84[(17 -6) -8 ]];v82[v224 + (860 -(240 + 619)) ]=v225;v82[v224]=v225[v84[1 + (5 -2) ]];elseif v82[v84[2 + 0 ]] then v76=v76 + (1 -0) ;else v76=v84[1 + 2 ];end elseif (v85<=(1797 -(1344 + 400))) then if ((2168<=4360) and (v85==(457 -(255 + 150)))) then if (v84[2 + 0 ]==v82[v84[1 + 3 ]]) then v76=v76 + (2 -1) ;else v76=v84[2 + 1 ];end elseif (v82[v84[8 -6 ]]==v82[v84[12 -(1 + 7) ]]) then v76=v76 + (1740 -(404 + 1335)) ;else v76=v84[409 -(183 + 223) ];end elseif (v85==(64 -10)) then local v229=0 + 0 ;local v230;local v231;while true do if ((994==994) and ((1 + 0)==v229)) then for v340=914 -(910 + 3) , #v81 do local v341=0 -0 ;local v342;while true do if ((1655>401) and ((337 -(8 + 2 + 327))==v341)) then v342=v81[v340];for v361=0 + 0 , #v342 do local v362=v342[v361];local v363=v362[1];local v364=v362[340 -(118 + (437 -217)) ];if ((3063<=3426) and (v363==v82) and (v364>=v230)) then local v371=0 + 0 ;while true do if (v371==0) then v231[v364]=v363[v364];v362[450 -(108 + 341) ]=v231;break;end end end end break;end end end break;end if ((1459>764) and (v229==(0 + 0))) then v230=v84[8 -(19 -13) ];v231={};v229=(2007 -(203 + 310)) -(711 + 782) ;end end else v62[v84[5 -2 ]]=v82[v84[3 -1 ]];end elseif (v85<=(798 -(396 + (2336 -(1238 + 755))))) then if ((v85<=(526 -(270 + 199))) or (641>4334)) then if ((3399>=2260) and (v85==(19 + 37))) then do return v82[v84[1391 -(135 + 1254) ]];end else local v234=1819 -(580 + 1239) ;local v235;while true do if (((0 + 0) -0)==v234) then v235=v84[2 + 0 ];v82[v235]=v82[v235](v13(v82,v235 + (1528 -(389 + 1138)) ,v84[1 + 2 ]));break;end end end elseif (v85>(26 + 32)) then if  not v82[v84[4 -2 ]] then v76=v76 + (1535 -(709 + 825)) ;else v76=v84[2 + 1 ];end else local v236=v84[1169 -(645 + (961 -439)) ];v82[v236]=v82[v236](v13(v82,v236 + (1791 -(1010 + 780)) ,v84[3 + 0 ]));end elseif (v85<=(1606 -(320 + 1225))) then if (v85==(285 -225)) then v76=v84[8 -5 ];else local v239=v84[(2134 -668) -(157 + 1307) ];v82[v239]=v82[v239](v13(v82,v239 + (1837 -(1045 + 791)) ,v77));end elseif (v85<=(156 -94)) then local v241=v84[2 -0 ];local v242=v84[4];local v243=v241 + 1 + (865 -(196 + 668)) ;local v244={v82[v241](v82[v241 + (506 -(351 + 154)) ],v82[v243])};for v277=1575 -(1281 + 293) ,v242 do v82[v243 + v277 ]=v244[v277];end local v245=v244[1027 -(834 + 192) ];if v245 then v82[v243]=v245;v76=v84[269 -((861 -(171 + 662)) + 238) ];else v76=v76 + (2 -1) ;end elseif ((v85==(1622 -(1381 + 178))) or (393>=4242)) then v82[v84[(95 -(4 + 89)) + 0 ]]=v62[v84[3 + (0 -0) ]];else local v296=v84[1 + 1 ];v82[v296]=v82[v296](v13(v82,v296 + ((1 + 0) -0) ,v77));end v76=v76 + (3 -2) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
