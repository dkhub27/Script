local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v82=0;while true do if (v82==0) then v19=v0(v3(v30,1,1));return "";end end else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v111=v5(v84,v19);v19=nil;return v111;else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=0 -0 ;local v86;while true do if (v85==((1637 -(1523 + 114)) -0)) then v86=(v31/(2^(v32-((1 + 0) -0))))%(((5 -1) -2)^(((v33-(1066 -(68 + 997))) -(v32-(620 -(555 + 64)))) + (932 -(857 + 74)))) ;return v86-(v86%1) ;end end else local v87=568 -(367 + 201) ;local v88;while true do if (v87==(927 -(214 + 713))) then v88=2^(v32-1) ;return (((v31%(v88 + v88))>=v88) and (1 + 0)) or ((877 -(282 + 595)) + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1272 -(226 + 1044)) );v18=v18 + (8 -6) ;return (v36 * (373 -(32 + 85))) + v35 ;end local function v23() local v37=0 + 0 ;local v38;local v39;local v40;local v41;while true do if (v37==(0 + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + (960 -(892 + 65)) );v18=v18 + (9 -5) ;v37=1 -0 ;end if (1==v37) then return (v41 * 16777216) + (v40 * (120312 -(54956 -(67 + 113)))) + (v39 * (606 -(87 + 263))) + v38 ;end end end local function v24() local v42=0 + 0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if ((432 -(44 + 386))==v42) then v47=v20(v44,51 -(1516 -(998 + 488)) ,8 + 15 + 8 );v48=((v20(v44,127 -95 )==(953 -(802 + 150))) and  -(2 -1)) or (1 -0) ;v42=3 + 0 + 0 ;end if (3==v42) then if (v47==((1769 -(201 + 571)) -(915 + 82))) then if (v46==((1138 -(116 + 1022)) -0)) then return v48 * (0 + 0) ;else local v112=0 -0 ;while true do if (v112==(1187 -(1069 + (491 -373)))) then v47=2 -1 ;v45=(0 + 0) -0 ;break;end end end elseif (v47==(356 + 1691)) then return ((v46==(0 -0)) and (v48 * (1/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-(1814 -(368 + 423)) ) * (v45 + (v46/((6 -4)^52))) ;end if (v42==(19 -(10 + 8))) then v45=3 -2 ;v46=(v20(v44,443 -((1518 -1102) + 26) ,63 -43 ) * ((1 + 1)^((198 -142) -24))) + v43 ;v42=2;end if (v42==(438 -(145 + 293))) then v43=v23();v44=v23();v42=1;end end end local function v25(v49) local v50;if  not v49 then local v89=859 -(814 + (1125 -(1020 + 60))) ;while true do if (v89==(0 -0)) then v49=v23();if (v49==(0 + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(886 -((1684 -(630 + 793)) + 624)) );v18=v18 + v49 ;local v51={};for v66=1 + 0 , #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do if (2~=v52) then else local v93=(function() return 0;end)();local v94=(function() return;end)();while true do if (0==v93) then v94=(function() return 0;end)();while true do if (v94==(0 + 0)) then v59=(function() return {};end)();for v116= #"}",v58 do local v117=(function() return 836 -(660 + 176) ;end)();local v118=(function() return;end)();local v119=(function() return;end)();local v120=(function() return;end)();while true do if (v117==(0 + 0)) then v118=(function() return 202 -(14 + 188) ;end)();v119=(function() return nil;end)();v117=(function() return 676 -(534 + 141) ;end)();end if (v117==1) then v120=(function() return nil;end)();while true do if (0==v118) then v119=(function() return v21();end)();v120=(function() return nil;end)();v118=(function() return 1 + 0 ;end)();end if ((1 + 0)~=v118) then else if (v119== #"}") then v120=(function() return v21()~=(0 + 0) ;end)();elseif (v119==(3 -1)) then v120=(function() return v24();end)();elseif (v119== #"19(") then v120=(function() return v25();end)();end v59[v116]=(function() return v120;end)();break;end end break;end end end v94=(function() return 1 -0 ;end)();end if (v94~=1) then else v57[ #"-19"]=(function() return v21();end)();v52=(function() return 3;end)();break;end end break;end end end if ((0 -0)~=v52) then else v53=(function() return function(v102,v103,v104) local v105=(function() return 0 + 0 ;end)();local v106=(function() return;end)();while true do if (0~=v105) then else v106=(function() return 0 + 0 ;end)();while true do if (v106==(396 -(115 + 281))) then local v121=(function() return 0;end)();while true do if (v121==(0 -0)) then v102[v103-#"[" ]=(function() return v104();end)();return v102,v103,v104;end end end end break;end end end;end)();v54=(function() return {};end)();v55=(function() return {};end)();v52=(function() return 1;end)();end if (v52~=1) then else v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v52=(function() return 2 + 0 ;end)();end if (v52==(7 -4)) then for v95= #",",v23() do local v96=(function() return v21();end)();if (v20(v96, #"\\", #"{")==(0 -0)) then local v107=(function() return 867 -(550 + 317) ;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v107==(1 -0)) then local v114=(function() return 0;end)();while true do if (v114==1) then v107=(function() return 2;end)();break;end if (v114==(0 -0)) then v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==0) then local v126=(function() return 0;end)();local v127=(function() return;end)();while true do if (v126==(0 -0)) then v127=(function() return 285 -(134 + 151) ;end)();while true do if (0~=v127) then else v110[ #"xxx"]=(function() return v22();end)();v110[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v108== #"|") then v110[ #"-19"]=(function() return v23();end)();elseif (v108==(1667 -(970 + 695))) then v110[ #"gha"]=(function() return v23() -((3 -1)^(2006 -(582 + 1408))) ;end)();elseif (v108~= #"xxx") then else local v343=(function() return 0;end)();local v344=(function() return;end)();while true do if (v343==0) then v344=(function() return 0 -0 ;end)();while true do if (v344==(0 -0)) then v110[ #"-19"]=(function() return v23() -((7 -5)^16) ;end)();v110[ #"?id="]=(function() return v22();end)();break;end end break;end end end v114=(function() return 1;end)();end end end if (v107==(1824 -(1195 + 629))) then v108=(function() return v20(v96,2 -0 , #"19(");end)();v109=(function() return v20(v96, #"?id=",247 -(187 + 54) );end)();v107=(function() return 1;end)();end if (v107==3) then if (v20(v109, #"-19", #"nil")~= #"[") then else v110[ #"xnxx"]=(function() return v59[v110[ #"0313"]];end)();end v54[v95]=(function() return v110;end)();break;end if (v107==2) then if (v20(v109, #"\\", #"|")== #"]") then v110[782 -(162 + 618) ]=(function() return v59[v110[2 + 0 ]];end)();end if (v20(v109,2,2 + 0 )== #"<") then v110[ #"xxx"]=(function() return v59[v110[ #"91("]];end)();end v107=(function() return 6 -3 ;end)();end end end end for v97= #" ",v23() do v55,v97,v28=(function() return v53(v55,v97,v28);end)();end return v57;end end end local function v29(v60,v61,v62) local v63=v60[1 + 0 ];local v64=v60[1063 -(810 + 251) ];local v65=v60[4 -1 ];return function(...) local v68=v63;local v69=v64;local v70=v65;local v71=v27;local v72=1 + 0 + 0 ;local v73= -(1 + 0);local v74={};local v75={...};local v76=v12("#",...) -(1001 -((1215 -764) + 549)) ;local v77={};local v78={};for v90=(1800 -(884 + 916)) + (0 -0) ,v76 do if (v90>=v70) then v74[v90-v70 ]=v75[v90 + (1 -0) ];else v78[v90]=v75[v90 + 1 ];end end local v79=(v76-v70) + (1 -0) ;local v80;local v81;while true do v80=v68[v72];v81=v80[1385 -(746 + 638) ];if (v81<=(8 + 14 + 9)) then if (v81<=(6 + 9)) then if (v81<=(9 -(655 -(232 + 421)))) then if ((v81<=(344 -(218 + 123))) or (2861<458)) then if (v81<=(1745 -(1344 + (2289 -(1569 + 320))))) then if (v81==(1581 -(1535 + 46))) then v78[v80[1 + 1 + 0 ]]=v78[v80[1 + 0 + 2 ]][v78[v80[16 -(40 -28) ]]];elseif ((1717<=4525) and (v80[562 -(306 + 254) ]==v78[v80[1 + 3 ]])) then v72=v72 + (1 -0) ;else v72=v80[1470 -(899 + (1173 -(316 + 289))) ];end elseif (v81>(2 + 0)) then local v130=v80[4 -2 ];local v131,v132=v71(v78[v130](v13(v78,v130 + (604 -(268 + 335)) ,v80[293 -(60 + (602 -372)) ])));v73=(v132 + v130) -(573 -(20 + 406 + 146)) ;local v133=(1453 -(666 + 787)) + 0 ;for v241=v130,v73 do v133=v133 + (1457 -(282 + 1174)) ;v78[v241]=v131[v133];end else local v134=0 + 0 ;local v135;while true do if (v134==(811 -(569 + (667 -(360 + 65))))) then v135=v80[(5 + 0) -3 ];v78[v135](v13(v78,v135 + 1 + 0 ,v80[1 + 2 ]));break;end end end elseif ((v81<=(2 + 3)) or (3178<=1524)) then if (v81>(453 -(108 + 341))) then v78[v80[1026 -(706 + 318) ]]=v61[v80[(1508 -(79 + 175)) -((1136 -415) + 530) ]];else local v138=v80[1273 -(945 + 326) ];local v139=v80[9 -(4 + 1) ];local v140=v138 + 2 + 0 ;local v141={v78[v138](v78[v138 + 1 + 0 ],v78[v140])};for v244=701 -((1170 -(503 + 396)) + 429) ,v139 do v78[v140 + v244 ]=v141[v244];end local v142=v141[1 + (181 -(92 + 89)) ];if v142 then v78[v140]=v142;v72=v80[1503 -(1408 + 92) ];else v72=v72 + (1087 -((894 -433) + 625)) ;end end elseif (v81>(1294 -(993 + 295))) then local v143=v80[1 + 1 ];local v144={v78[v143](v78[v143 + 1 + 0 ])};local v145=0 + 0 ;for v247=v143,v80[(7 -5) + 1 + 1 ] do v145=v145 + 1 + 0 ;v78[v247]=v144[v145];end elseif (v78[v80[1792 -(1010 + 780) ]]==v78[v80[4 + 0 ]]) then v72=v72 + (4 -3) ;else v72=v80[532 -((925 -519) + 108 + 15) ];end elseif (v81<=(1780 -(1749 + 20))) then if (v81<=(2 + 1 + 6)) then if (v81>(1330 -(1249 + 73))) then local v146=v80[1 + 1 ];local v147=v80[12 -8 ];local v148=v146 + (1147 -(466 + 679)) ;local v149={v78[v146](v78[v146 + (2 -1) ],v78[v148])};for v250=1901 -(106 + 1794) ,v147 do v78[v148 + v250 ]=v149[v250];end local v150=v149[1 + 0 ];if ((4254>370) and v150) then v78[v148]=v150;v72=v80[269 -(28 + 238) ];else v72=v72 + 1 + 0 ;end else local v151=1559 -(1381 + 178) ;local v152;while true do if ((v151==(0 -0)) or (1635==1777)) then v152=v80[2];v78[v152](v78[v152 + (2 -1) ]);break;end end end elseif (v81==((16 + 108) -(4 + 110))) then v78[v80[586 -(57 + 527) ]][v80[1430 -(41 + 1386) ]]=v80[107 -(17 + 86) ];else local v155=v80[2 + 0 ];local v156={};for v253=1 -0 , #v77 do local v254=v77[v253];for v296=(0 -0) -0 , #v254 do local v297=v254[v296];local v298=v297[1 + 0 ];local v299=v297[168 -((1366 -(485 + 759)) + 44) ];if ((v298==v78) and (v299>=v155)) then v156[v299]=v298[v299];v297[1 -0 ]=v156;end end end end elseif ((v81<=(1169 -(1074 + 82))) or (3338>=3993)) then if ((1154<=1475) and (v81>12)) then local v157=v80[2 -(0 -0) ];local v158,v159=v71(v78[v157](v13(v78,v157 + (3 -2) ,v80[1458 -(990 + 465) ])));v73=(v159 + v157) -(1 + 0) ;local v160=0 + 0 ;for v255=v157,v73 do v160=v160 + 1 + 0 ;v78[v255]=v158[v160];end else for v258=v80[3 -(1190 -(442 + 747)) ],v80[(1203 -(832 + 303)) -(30 + 35) ] do v78[v258]=nil;end end elseif (v81>(10 + (950 -(88 + 858)))) then local v161=v69[v80[1260 -(1043 + 214) ]];local v162;local v163={};v162=v10({},{__index=function(v260,v261) local v262=626 -(512 + 114) ;local v263;while true do if (v262==(0 -0)) then v263=v163[v261];return v263[3 -2 ][v263[1214 -(323 + 889) ]];end end end,__newindex=function(v264,v265,v266) local v267=v163[v265];v267[1 + 0 ][v267[2]]=v266;end});for v269=(2 + 0) -1 ,v80[584 -(361 + 219) ] do local v270=320 -(53 + 267) ;local v271;while true do if (v270==(1 + 0)) then if (v271[3 -2 ]==(459 -(15 + 398))) then v163[v269-(983 -(18 + 964)) ]={v78,v271[2 + 1 ]};else v163[v269-(827 -(802 + 24)) ]={v61,v271[3 + 0 ]};end v77[ #v77 + 1 + 0 ]=v163;break;end if ((126 -(116 + 10))==v270) then v72=v72 + 1 + 0 ;v271=v68[v72];v270=1;end end end v78[v80[740 -(542 + 196) ]]=v29(v161,v162,v62);else v78[v80[(794 -(766 + 23)) -3 ]]=v78[v80[3]][v78[v80[8 -4 ]]];end elseif (v81<=((34 -27) + 16)) then if (v81<=(10 + 9)) then if (v81<=(7 + (13 -3))) then if ((v81==((107 -66) -25)) or (2610<1230)) then local v167=0;local v168;while true do if (v167==(0 -(0 -0))) then v168=v80[1553 -((2199 -(1036 + 37)) + 425) ];v78[v168](v13(v78,v168 + ((288 + 118) -((229 -111) + 287)) ,v80[11 -8 ]));break;end end else v78[v80[1621 -(1427 + 192) ]]=v62[v80[1124 -(118 + 1003) ]];end elseif (v81>(52 -(27 + 7))) then local v171=377 -(142 + 235) ;local v172;local v173;local v174;while true do if ((v171==(4 -3)) or (1448==3083)) then v174=0 + 0 ;for v332=v172,v80[330 -(192 + (1614 -(641 + 839))) ] do v174=v174 + (978 -(553 + 424)) ;v78[v332]=v173[v174];end break;end if ((3139>916) and (v171==(0 -(913 -(910 + 3))))) then v172=v80[2 + 0 ];v173={v78[v172](v78[v172 + 1 + 0 ])};v171=1 + 0 + 0 ;end end else local v175=v80[2 + 0 ];local v176={v78[v175](v13(v78,v175 + (2 -1) ,v80[6 -3 ]))};local v177=0 + 0 + 0 ;for v272=v175,v80[19 -(823 -(329 + 479)) ] do v177=v177 + (754 -(239 + 514)) ;v78[v272]=v176[v177];end end elseif (v81<=(8 + 13)) then if ((2954==2954) and (v81>(55 -(889 -(174 + 680))))) then do return;end else local v178=v80[1331 -(797 + 532) ];local v179=v78[v80[3 + 0 ]];v78[v178 + 1 + 0 ]=v179;v78[v178]=v179[v80[2 + 2 ]];end elseif (v81==(13 + 9)) then local v183=0 + 0 ;local v184;local v185;local v186;while true do if (v183==(0 + 0)) then v184=v80[4 -2 ];v185={v78[v184](v13(v78,v184 + (732 -(476 + 255)) ,v80[1133 -(369 + 761) ]))};v183=1 + 0 ;end if (v183==(1 -0)) then v186=0 -0 ;for v335=v184,v80[4] do local v336=0;while true do if (v336==(238 -(64 + 174))) then v186=v186 + 1 + 0 ;v78[v335]=v185[v186];break;end end end break;end end else local v187=v80[2 -(0 -0) ];v78[v187](v78[v187 + (337 -(144 + 192)) ]);end elseif ((117<=2892) and (v81<=(243 -(30 + 12 + 174)))) then if ((v81<=(19 + 6)) or (453>4662)) then if (v81>(260 -(46 + 190))) then v61[v80[3 + 0 ]]=v78[v80[1 + 1 ]];else v78[v80[1506 -(363 + 1141) ]][v80[1583 -(1183 + 397) ]]=v80[(1469 -(396 + 343)) -(228 + 498) ];end elseif (v81>(79 -53)) then do return;end else local v192=v80[1 + 1 + 0 ];v78[v192]=v78[v192](v13(v78,v192 + 1 + 0 ,v80[1978 -(1913 + 62) ]));end elseif (v81<=(19 + 10)) then if ((1320>595) and (v81>(552 -(303 + 221)))) then local v194=v80[5 -3 ];v78[v194]=v78[v194](v13(v78,v194 + (1934 -(565 + 1368)) ,v73));else v78[v80[2 + 0 ]]();end elseif ((v81>((1589 -(29 + 1448)) -82)) or (3199<590)) then v78[v80[1663 -(1477 + 184) ]]=v80[(1392 -(135 + 1254)) -0 ];else v78[v80[2 + 0 ]]=v80[859 -(564 + 292) ];end elseif (v81<=(81 -(127 -93))) then if ((v81<=(136 -97)) or (4793<30)) then if (v81<=(105 -70)) then if ((v81<=(53 -20)) or (1696<=1059)) then if ((2343==2343) and (v81>(98 -66))) then v78[v80[306 -(244 + 60) ]]={};else v78[v80[160 -(91 + 67) ]]();end elseif (v81>((125 -98) + 7)) then do return v78[v80[(319 + 159) -(41 + 435) ]];end else local v201=523 -(423 + 100) ;local v202;while true do if (v201==(1001 -(938 + 63))) then v202=v80[2 + 0 ];do return v13(v78,v202,v202 + v80[7 -4 ] );end break;end end end elseif ((v81<=(1162 -(936 + 189))) or (1043>3591)) then if ((v81==(12 + 24)) or (2890>=4079)) then if ((4474<=4770) and (v78[v80[2]]==v78[v80[1617 -(1565 + 48) ]])) then v72=v72 + (1528 -(389 + 1138)) + 0 ;else v72=v80[1141 -(782 + 356) ];end else local v203=v80[(843 -(102 + 472)) -(176 + 91) ];local v204={};for v275=2 -1 , #v77 do local v276=v77[v275];for v301=(31 + 1) -(19 + 8 + 5) , #v276 do local v302=v276[v301];local v303=v302[1 -0 ];local v304=v302[1094 -(910 + 65 + 117) ];if ((v303==v78) and (v304>=v203)) then v204[v304]=v303[v304];v302[1876 -(157 + 1718) ]=v204;end end end end elseif (v81>(31 + 7)) then local v205=v80[1 + 1 ];v78[v205]=v78[v205](v13(v78,v205 + (3 -2) ,v80[10 -7 ]));else local v207=v69[v80[1021 -(697 + 321) ]];local v208;local v209={};v208=v10({},{__index=function(v277,v278) local v279=v209[v278];return v279[2 -1 ][v279[3 -1 ]];end,__newindex=function(v280,v281,v282) local v283=v209[v281];v283[2 -1 ][v283[1 + 1 ]]=v282;end});for v285=(1546 -(320 + 1225)) -0 ,v80[10 -6 ] do v72=v72 + (1228 -((572 -250) + 905)) ;local v286=v68[v72];if ((v286[612 -(369 + 233 + 9) ]==(119 -73)) or (4942==3903)) then v209[v285-(1 -0) ]={v78,v286[875 -(826 + 46) ]};else v209[v285-(948 -(245 + 702)) ]={v61,v286[1901 -(260 + 1638) ]};end v77[ #v77 + (441 -((1846 -(157 + 1307)) + 58)) ]=v209;end v78[v80[6 -4 ]]=v29(v207,v208,v62);end elseif (v81<=(36 + 7)) then if (v81<=(1137 -(709 + 387))) then if ((v81==(82 -42)) or (248>4845)) then if ((1569==1569) and v78[v80[(3719 -(821 + 1038)) -(673 + 1185) ]]) then v72=v72 + (2 -1) ;else v72=v80[9 -6 ];end else v78[v80[1207 -(902 + 303) ]]=v78[v80[3 + 0 ]][v80[8 -4 ]];end elseif ((v81>(56 -(34 -20))) or (4927<=3221)) then v78[v80[4 -2 ]]={};else local v214=0 + 0 ;local v215;while true do if (v214==(1690 -(1121 + 569))) then v215=v80[(24 + 192) -(22 + 192) ];v78[v215]=v78[v215](v13(v78,v215 + (1881 -(446 + 1434)) ,v73));break;end end end elseif ((v81<=(728 -(483 + 200))) or (1780>2787)) then if (v81==((2676 -1169) -(1404 + 59))) then if  not v78[v80[5 -3 ]] then v72=v72 + 1 ;else v72=v80[3 -0 ];end else v78[v80[456 -(13 + 441) ]]=v80[768 -(468 + 297) ]~=(562 -(334 + 228)) ;end elseif (v81==46) then v78[v80[9 -7 ]]=v78[v80[10 -7 ]];else v78[v80[4 -2 ]]=v78[v80[5 -(1 + 1) ]];end elseif (v81<=(16 + 39)) then if ((v81<=(287 -(141 + (235 -140)))) or (3937<=1230)) then if (v81<=(49 + 0)) then if (v81==(27 + 21)) then v78[v80[4 -2 ]]=v78[v80[6 -(1029 -(834 + 192)) ]][v80[1 + 3 ]];else v61[v80[8 -5 ]]=v78[v80[2 + 0 ]];end elseif (v81==50) then if (v80[1 + 1 + 0 ]==v78[v80[2 + 2 + 0 ]]) then v72=v72 + 1 + 0 ;else v72=v80[4 -1 ];end else v72=v80[1 + 2 + (0 -0) ];end elseif ((v81<=(32 + (325 -(300 + 4)))) or (2637<1706)) then if ((v81>(215 -(25 + 67 + 71))) or (2669<=2409)) then local v226=0;local v227;while true do if ((0 + 0)==v226) then v227=v80[2 + 0 ];v78[v227]=v78[v227]();break;end end elseif (v78[v80[2 + (0 -0) ]] or (1401>4696)) then v72=v72 + (1 -0) ;else v72=v80[768 -(574 + 191) ];end elseif (v81==(45 + 9)) then local v228=v80[4 -(364 -(112 + 250)) ];local v229=v78[v80[2 + 1 ]];v78[v228 + 1 ]=v229;v78[v228]=v229[v80[853 -(254 + 595) ]];else v72=v80[129 -(55 + 71) ];end elseif ((v81<=(77 -18)) or (3280<1321)) then if ((4927>=2303) and (v81<=(1847 -(573 + 486 + 731)))) then if (v81>(155 -(247 -148))) then v78[v80[1 + 1 + 0 ]]=v61[v80[4 -(1 + 0) ]];elseif (v78[v80[941 -(714 + 225) ]]==v80[11 -7 ]) then v72=v72 + (1 -(0 + 0)) ;else v72=v80[1 + 2 ];end elseif ((3462>=1032) and (v81==(900 -(497 + 345)))) then v78[v80[2 -0 ]]=v62[v80[2 + 1 ]];else do return v78[v80[808 -(118 + 688) ]];end end elseif (v81<=((1036 + 358) -(605 + 728))) then if (v81==(108 -(25 + 23))) then v78[v80[3 -1 ]]=v80[(1415 -(1001 + 413)) + 2 ]~=(0 + 0) ;elseif (v78[v80[1888 -(927 + 959) ]]==v80[13 -9 ]) then v72=v72 + (733 -(16 + 716)) ;else v72=v80[5 -2 ];end elseif (v81<=(159 -(11 + 86))) then local v239=v80[4 -2 ];v78[v239]=v78[v239]();elseif (v81==(348 -(175 + 110))) then for v323=v80[4 -2 ],v80[14 -11 ] do v78[v323]=nil;end elseif  not v78[v80[1798 -(503 + 1293) ]] then v72=v72 + (2 -1) ;else v72=v80[1 + 2 ];end v72=v72 + (3 -2) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
