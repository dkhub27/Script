local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v99=v5(v82,v19);v19=nil;return v99;else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((570 -(367 + 201))^(v32-(2 -1))))%((929 -(214 + 713))^(((v33-(2 -1)) -(v32-(1 + 0))) + (878 -((399 -(32 + 85)) + 595)))) ;return v83-(v83%(1 -0)) ;else local v84=0 + 0 ;local v85;while true do if (v84==(0 -(0 + 0))) then v85=(1067 -(68 + 222 + 775))^(v32-(620 -(555 + (1021 -(892 + 65))))) ;return (((v31%(v85 + v85))>=v85) and (4 -3)) or (931 -(857 + 74)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (4 -2) );v18=v18 + (3 -1) ;return (v36 * (469 -213)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (353 -(87 + 194 + 69)) );v18=v18 + 4 ;return (v40 * (16777396 -(67 + 113))) + (v39 * (48056 + 17480)) + (v38 * (628 -372)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=3 -2 ;local v44=(v20(v42,953 -(802 + 150) ,53 -33 ) * (2^32)) + v41 ;local v45=v20(v42,37 -16 ,23 + 8 );local v46=((v20(v42,(3958 -2929) -(915 + 82) )==((444 -(416 + 26)) -1)) and  -(1 + 0)) or 1 ;if (v45==(0 -0)) then if (v44==((3789 -2602) -(459 + 610 + 118))) then return v46 * 0 ;else v45=2 -1 ;v43=0 -0 ;end elseif (v45==(356 + 1691)) then return ((v44==(0 -0)) and (v46 * (((1 -0) + 0)/(791 -(368 + (861 -(145 + 293))))))) or (v46 * NaN) ;end return v8(v46,v45-(3214 -2191) ) * (v43 + (v44/((20 -(10 + 8))^52))) ;end local function v25(v47) local v48=430 -(44 + 386) ;local v49;local v50;while true do if (v48==(1487 -(998 + 488))) then v49=v3(v16,v18,(v18 + v47) -1 );v18=v18 + v47 ;v48=1 + 1 ;end if ((2 + 0)==v48) then v50={};for v89=773 -(201 + 571) , #v49 do v50[v89]=v2(v1(v3(v49,v89,v89)));end v48=1141 -(116 + 1022) ;end if (v48==(0 -0)) then v49=nil;if  not v47 then v47=v23();if (v47==((859 -(814 + 45)) + 0)) then return "";end end v48=(7 -4) -2 ;end if (v48==(10 -7)) then return v6(v50);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 1707 -(856 + 851) ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v65=(function() return 1763 -(454 + 1309) ;end)();while true do if (v65==(0 + 0)) then if ((2 -0)~=v51) then else v56[ #"-19"]=(function() return v21();end)();for v100= #"~",v23() do local v101=(function() return v21();end)();if (v20(v101, #".", #"~")~=(0 -0)) then else local v103=(function() return 0 -0 ;end)();local v104=(function() return;end)();local v105=(function() return;end)();local v106=(function() return;end)();local v107=(function() return;end)();while true do if (v103==1) then local v112=(function() return 285 -(134 + 151) ;end)();while true do if (v112==(1289 -(993 + 295))) then v103=(function() return 2;end)();break;end if (v112==(1665 -(970 + 695))) then v106=(function() return nil;end)();v107=(function() return nil;end)();v112=(function() return 1 -0 ;end)();end end end if (v103~=2) then else while true do if (v104==2) then local v232=(function() return 0;end)();local v233=(function() return;end)();while true do if (v232==(1990 -(582 + 1408))) then v233=(function() return 0 + 0 ;end)();while true do if (v233==(0 -0)) then if (v20(v106, #"!", #">")== #"|") then v107[2]=(function() return v58[v107[2]];end)();end if (v20(v106,2,2 -0 )~= #"~") then else v107[ #"91("]=(function() return v58[v107[ #"xxx"]];end)();end v233=(function() return 1;end)();end if (v233~=(3 -2)) then else v104=(function() return  #"91(";end)();break;end end break;end end end if (v104~=(1824 -(1195 + 629))) then else local v234=(function() return 0 -0 ;end)();local v235=(function() return;end)();while true do if (v234==(1769 -(1749 + 20))) then v235=(function() return 0 + 0 ;end)();while true do if (v235==(1322 -(1249 + 73))) then v105=(function() return v20(v101,243 -(187 + 54) , #"19(");end)();v106=(function() return v20(v101, #"?id=",786 -(162 + 618) );end)();v235=(function() return 1;end)();end if (v235==1) then v104=(function() return  #">";end)();break;end end break;end end end if (v104~= #"-19") then else if (v20(v106, #"19(", #"19(")== #"}") then v107[ #"?id="]=(function() return v58[v107[ #"xnxx"]];end)();end v53[v100]=(function() return v107;end)();break;end if (v104== #"{") then local v237=(function() return 0 + 0 ;end)();local v238=(function() return;end)();while true do if (v237==(0 + 0)) then v238=(function() return 0;end)();while true do if (v238~=(1 + 0)) then else v104=(function() return 3 -1 ;end)();break;end if (v238~=(0 -0)) then else v107=(function() return {v22(),v22(),nil,nil};end)();if (v105==(1636 -(1373 + 263))) then local v354=(function() return 1000 -(451 + 549) ;end)();local v355=(function() return;end)();while true do if (v354~=(0 + 0)) then else v355=(function() return 0 -0 ;end)();while true do if (v355~=(0 -0)) then else v107[ #"nil"]=(function() return v22();end)();v107[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v105== #",") then v107[ #"gha"]=(function() return v23();end)();elseif (v105==(1902 -(106 + 1794))) then v107[ #"-19"]=(function() return v23() -((1386 -(746 + 638))^(7 + 9)) ;end)();elseif (v105== #"-19") then local v364=(function() return 0 -0 ;end)();local v365=(function() return;end)();while true do if (v364~=(341 -(218 + 123))) then else v365=(function() return 0;end)();while true do if (v365==(0 + 0)) then v107[ #"gha"]=(function() return v23() -((1583 -(1535 + 46))^(16 + 0)) ;end)();v107[ #"?id="]=(function() return v22();end)();break;end end break;end end end v238=(function() return 1 + 0 ;end)();end end break;end end end end break;end if (v103~=0) then else local v113=(function() return 560 -(306 + 254) ;end)();while true do if (v113==(0 + 0)) then v104=(function() return 1427 -(41 + 1386) ;end)();v105=(function() return nil;end)();v113=(function() return 104 -(17 + 86) ;end)();end if ((1 + 0)==v113) then v103=(function() return 1 -0 ;end)();break;end end end end end end for v102= #"|",v23() do v54,v102,v28=(function() return v52(v54,v102,v28);end)();end return v56;end if (v51~=(1468 -(899 + 568))) then else local v96=(function() return 166 -(122 + 44) ;end)();local v97=(function() return;end)();while true do if (v96==0) then v97=(function() return 0;end)();while true do if ((0 + 0)~=v97) then else v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v97=(function() return 1;end)();end if (v97==1) then v58=(function() return {};end)();for v114= #"!",v57 do local v115=(function() return 0;end)();local v116=(function() return;end)();local v117=(function() return;end)();local v118=(function() return;end)();while true do if (v115==(604 -(268 + 335))) then v118=(function() return nil;end)();while true do if (v116~=0) then else local v332=(function() return 0 + 0 ;end)();while true do if (v332~=(0 + 0)) then else v117=(function() return v21();end)();v118=(function() return nil;end)();v332=(function() return 1;end)();end if (v332~=(291 -(60 + 230))) then else v116=(function() return 1;end)();break;end end end if ((1 -0)~=v116) then else if (v117== #",") then v118=(function() return v21()~=(572 -(426 + 146)) ;end)();elseif (v117==(1 + 1)) then v118=(function() return v24();end)();elseif (v117~= #"asd") then else v118=(function() return v25();end)();end v58[v114]=(function() return v118;end)();break;end end break;end if (v115~=0) then else v116=(function() return 1456 -(282 + 1174) ;end)();v117=(function() return nil;end)();v115=(function() return 1258 -(1043 + 214) ;end)();end end end v97=(function() return 813 -(569 + 242) ;end)();end if (v97==(5 -3)) then v51=(function() return 1 + 1 ;end)();break;end end break;end end end v65=(function() return 1025 -(706 + 318) ;end)();end if ((1252 -(721 + 530))~=v65) then else if (v51~=0) then else local v98=(function() return 0;end)();while true do if (v98==0) then v52=(function() return function(v108,v109,v110) local v111=(function() return 0 -0 ;end)();while true do if (v111==(580 -(361 + 219))) then v108[v109-#"," ]=(function() return v110();end)();return v108,v109,v110;end end end;end)();v53=(function() return {};end)();v98=(function() return 1272 -(945 + 326) ;end)();end if (v98==(1 + 0)) then v54=(function() return {};end)();v55=(function() return {};end)();v98=(function() return 415 -(15 + 398) ;end)();end if (v98~=(4 -2)) then else v51=(function() return 1;end)();break;end end end break;end end end end local function v29(v59,v60,v61) local v62=v59[2 -1 ];local v63=v59[2];local v64=v59[11 -8 ];return function(...) local v66=v62;local v67=v63;local v68=v64;local v69=v27;local v70=1 + 0 ;local v71= -(1 + 0 + 0);local v72={};local v73={...};local v74=v12("#",...) -(1 + 0) ;local v75={};local v76={};for v86=126 -(116 + 10) ,v74 do if (v86>=v68) then v72[v86-v68 ]=v73[v86 + 1 + 0 ];else v76[v86]=v73[v86 + ((2822 -2083) -((839 -(36 + 261)) + 196)) ];end end local v77=(v74-v68) + (1 -0) ;local v78;local v79;while true do v78=v66[v70];v79=v78[1 + 0 ];if (v79<=(29 + 2)) then if ((v79<=(5 + 10)) or (2339<2003)) then if ((432==432) and (v79<=(4 + 3))) then if ((v79<=(1809 -(1202 + 604))) or (1145>=1253)) then if (v79<=(1 + 0)) then if (v79>((0 -0) -0)) then local v120=0 -0 ;local v121;local v122;local v123;while true do if ((3418>2118) and (v120==(326 -(45 + 280)))) then v123=1551 -(1126 + 425) ;for v314=v121,v78[4 + (1368 -(34 + 1334)) ] do v123=v123 + (406 -(118 + 287)) ;v76[v314]=v122[v123];end break;end if (v120==(0 + 0)) then v121=v78[7 -5 ];v122={v76[v121](v13(v76,v121 + (2 -1) ,v78[380 -(142 + 235) ]))};v120=4 -3 ;end end else v76[v78[(1379 + 395) -(1733 + 39) ]]=v60[v78[(1284 -(1035 + 248)) + 2 ]];end elseif (v79==(979 -(553 + (445 -(20 + 1))))) then local v126=v78[3 -1 ];local v127={};for v239=1035 -(125 + 474 + 435) , #v75 do local v240=0 + 0 ;local v241;while true do if ((3066<=3890) and ((0 + 0)==v240)) then v241=v75[v239];for v334=0 + 0 , #v241 do local v335=v241[v334];local v336=v335[1 -(319 -(134 + 185)) ];local v337=v335[2 + 0 ];if (((v336==v76) and (v337>=v126)) or (2998>=3281)) then v127[v337]=v336[v337];v335[1 + 0 ]=v127;end end break;end end end else v60[v78[2 + 1 ]]=v76[v78[4 -2 ]];end elseif ((v79<=(13 -8)) or (4649<=2632)) then if ((v79==(8 -4)) or (3860>4872)) then local v130=1133 -(549 + 584) ;local v131;while true do if (v130==(0 + 0)) then v131=v78[9 -7 ];v76[v131]=v76[v131](v13(v76,v131 + (754 -(239 + 514)) ,v71));break;end end else local v132=v78[1 + 1 ];local v133=v76[v78[2 + 1 ]];v76[v132 + (1330 -((1482 -(314 + 371)) + 532)) ]=v133;v76[v132]=v133[v78[3 + 1 ]];end elseif (v79>(3 + 3)) then v76[v78[4 -(6 -4) ]]=v76[v78[1205 -((1341 -(478 + 490)) + 829) ]][v78[735 -(476 + 255) ]];else local v139=v78[1132 -(196 + 173 + 761) ];v76[v139](v76[v139 + 1 + 0 ]);end elseif (v79<=(19 -8)) then if ((v79<=(36 -27)) or (3998==2298)) then if ((v79>(21 -13)) or (8>=2739)) then if (v78[3 -1 ]==v76[v78[242 -(64 + (1346 -(786 + 386))) ]]) then v70=v70 + 1 + 0 ;else v70=v78[3 -0 ];end else local v140=v78[338 -(144 + 192) ];v76[v140]=v76[v140](v13(v76,v140 + 1 ,v78[(709 -490) -(42 + 174) ]));end elseif ((2590==2590) and (v79==(8 + 2))) then v76[v78[2 + 0 ]]=v76[v78[2 + 1 ]][v76[v78[12 -8 ]]];else for v242=v78[1506 -((1742 -(1055 + 324)) + 1141) ],v78[1583 -(1183 + 397) ] do v76[v242]=nil;end end elseif ((v79<=(39 -26)) or (82>=1870)) then if (v79>(9 + 3)) then v76[v78[2]]=v76[v78[3 + 0 ]];elseif  not v76[v78[525 -(423 + 100) ]] then v70=v70 + ((3316 -(1093 + 247)) -(1913 + 62)) ;else v70=v78[2 + 1 ];end elseif ((2624<4557) and (v79>(36 -22))) then local v146=v78[773 -(326 + 445) ];local v147={v76[v146](v13(v76,v146 + (3 -2) ,v78[1664 -(1477 + 184) ]))};local v148=0 -0 ;for v244=v146,v78[9 -5 ] do v148=v148 + (712 -(530 + 181)) ;v76[v244]=v147[v148];end elseif (v76[v78[(785 + 98) -(614 + 267) ]]==v78[4 + 0 ]) then v70=v70 + (857 -(564 + 292)) ;else v70=v78[6 -3 ];end elseif (v79<=(38 -15)) then if (v79<=(56 -(4 + 33))) then if (v79<=(321 -(244 + 60))) then if (v79==(13 + 3)) then local v149=1812 -(1293 + 519) ;local v150;while true do if (v149==(0 -0)) then v150=v78[478 -(41 + 435) ];v76[v150]=v76[v150]();break;end end else v76[v78[1003 -(938 + 63) ]]={};end elseif (v79==(14 + (15 -11))) then local v152=1125 -(936 + 189) ;local v153;local v154;local v155;while true do if (v152==(0 + 0)) then v153=v78[2];v154={v76[v153](v76[v153 + 1 + 0 ])};v152=1139 -(782 + 356) ;end if (v152==(268 -(176 + 91))) then v155=(0 -0) -0 ;for v318=v153,v78[5 -1 ] do v155=v155 + (1093 -(975 + 117)) ;v76[v318]=v154[v155];end break;end end else local v156=v67[v78[(5343 -3465) -(157 + 1718) ]];local v157;local v158={};v157=v10({},{__index=function(v247,v248) local v249=v158[v248];return v249[1859 -(673 + 1185) ][v249[2 + 0 ]];end,__newindex=function(v250,v251,v252) local v253=v158[v251];v253[3 -2 ][v253[6 -4 ]]=v252;end});for v255=1019 -(248 + 449 + 321) ,v78[3 + 1 ] do v70=v70 + (2 -(3 -2)) ;local v256=v66[v70];if (v256[1 -0 ]==13) then v158[v255-(2 -1) ]={v76,v256[7 -4 ]};else v158[v255-(1228 -(322 + 905)) ]={v60,v256[8 -5 ]};end v75[ #v75 + (873 -(826 + 46)) ]=v158;end v76[v78[949 -(245 + (1924 -1222)) ]]=v29(v156,v157,v61);end elseif (v79<=(66 -45)) then if (v79>(474 -(13 + 441))) then v76[v78[2]]=v61[v78[(2 -1) + 2 ]];else do return;end end elseif (v79==(1920 -(260 + 543 + 1095))) then for v258=v78[442 -(382 + (242 -184)) ],v78[9 -6 ] do v76[v258]=nil;end else v76[v78[2 + 0 ]][v78[5 -2 ]]=v78[11 -7 ];end elseif (v79<=(1232 -(902 + 303))) then if (v79<=(54 -29)) then if (v79==24) then local v164=v78[1 + 1 ];local v165=v78[9 -5 ];local v166=v164 + 1 + 1 ;local v167={v76[v164](v76[v164 + (1691 -(1121 + 569)) ],v76[v166])};for v260=1,v165 do v76[v166 + v260 ]=v167[v260];end local v168=v167[2 -(1 -0) ];if v168 then v76[v166]=v168;v70=v78[2 + 1 ];else v70=v70 + (215 -(22 + (582 -390))) ;end else v76[v78[685 -(483 + 200) ]]=v78[1466 -((2672 -(1249 + 19)) + 59) ];end elseif ((v79==((65 + 6) -45)) or (3131>3542)) then local v171=0 -(0 -0) ;local v172;local v173;local v174;local v175;while true do if (v171==(2 + 0)) then for v321=v172,v71 do local v322=765 -(468 + 297) ;while true do if (v322==(0 + (1086 -(686 + 400)))) then v175=v175 + (563 -(263 + 71 + 228)) ;v76[v321]=v173[v175];break;end end end break;end if (v171==(0 -0)) then v172=v78[2 + 0 ];v173,v174=v69(v76[v172](v13(v76,v172 + (3 -2) ,v78[6 -3 ])));v171=1 -0 ;end if ((2577>=1578) and (v171==(1 + 0))) then v71=(v174 + v172) -(1 + 0) ;v175=236 -(141 + 95) ;v171=2;end end else local v176=0;local v177;while true do if ((4103<=4571) and (v176==(0 + 0))) then v177=v78[4 -2 ];v76[v177]=v76[v177](v13(v76,v177 + (2 -1) ,v71));break;end end end elseif (v79<=(7 + 22)) then if (v79>((305 -(73 + 156)) -48)) then local v178=v78[2 + 0 ];v76[v178](v76[v178 + (1050 -(572 + 477)) ]);elseif  not v76[v78[1 + 1 + 0 ]] then v70=v70 + (1 -0) ;else v70=v78[1 + 2 ];end elseif ((v79>(18 + 12)) or (1495==4787)) then v76[v78[2 -(811 -(721 + 90)) ]]();elseif v76[v78[165 -(2 + 90 + 71) ]] then v70=v70 + 1 + 0 ;else v70=v78[4 -(3 -2) ];end elseif ((v79<=(812 -(574 + 191))) or (310>4434)) then if (v79<=(33 + 6)) then if ((2168<=4360) and (v79<=(6 + 29))) then if ((994==994) and (v79<=(82 -49))) then if (v79>((493 -(224 + 246)) + 9)) then v76[v78[2 + 0 ]][v78[852 -((410 -156) + 595) ]]=v78[130 -(55 + 71) ];else local v181=0 -0 ;local v182;local v183;local v184;local v185;while true do if ((1655>401) and (v181==(1790 -((1054 -481) + 1217)))) then v182=v78[(1 + 4) -3 ];v183,v184=v69(v76[v182](v13(v76,v182 + 1 + 0 ,v78[4 -1 ])));v181=940 -(714 + 225) ;end if (v181==((1 + 4) -3)) then for v323=v182,v71 do local v324=0 -0 ;while true do if (v324==(0 + 0)) then v185=v185 + (1 -0) ;v76[v323]=v183[v185];break;end end end break;end if (v181==((593 + 214) -((234 -116) + 688))) then v71=(v184 + v182) -(3 -2) ;v185=48 -(25 + 23) ;v181=1 + 1 ;end end end elseif ((3063<=3426) and (v79>(1920 -(927 + 959)))) then if ((1459>764) and (v76[v78[6 -4 ]]==v78[2 + 2 ])) then v70=v70 + ((1246 -(203 + 310)) -(16 + 716)) ;else v70=v78[8 -5 ];end else local v186=0 -0 ;local v187;local v188;while true do if (((2091 -(1238 + 755)) -(11 + 86))==v186) then for v325=2 -1 , #v75 do local v326=285 -(175 + 110) ;local v327;while true do if ((v326==(0 + 0)) or (641>4334)) then v327=v75[v325];for v348=0 -0 , #v327 do local v349=v327[v348];local v350=v349[4 -3 ];local v351=v349[1798 -(503 + 91 + 1202) ];if ((v350==v76) and (v351>=v187)) then local v356=(1534 -(709 + 825)) -0 ;while true do if ((3399>=2260) and ((0 + 0)==v356)) then v188[v351]=v350[v351];v349[3 -2 ]=v188;break;end end end end break;end end end break;end if ((v186==(605 -(316 + 289))) or (393>=4242)) then v187=v78[(1958 -895) -(810 + 251) ];v188={};v186=(1 -0) + 0 ;end end end elseif (v79<=(12 + 25)) then if (v79>(1489 -(666 + 787))) then v70=v78[3 + 0 ];else v60[v78[536 -(43 + 490) ]]=v76[v78[735 -(711 + 22) ]];end elseif (v79==38) then v76[v78[7 -5 ]]={};else local v193=859 -(240 + 619) ;local v194;while true do if ((0 + 0)==v193) then v194=v78[2 -0 ];v76[v194]=v76[v194](v13(v76,v194 + (865 -(196 + 668)) + 0 ,v78[1747 -(1344 + 400) ]));break;end end end elseif ((989<4859) and (v79<=(82 -(153 -114)))) then if ((v79<=(446 -(255 + (310 -160)))) or (4795<949)) then if (v79>(32 + 8)) then local v195=v78[2 + 0 ];local v196=v78[16 -12 ];local v197=v195 + ((839 -(171 + 662)) -4) ;local v198={v76[v195](v76[v195 + (1740 -(404 + 1335)) ],v76[v197])};for v263=2 -1 ,v196 do v76[v197 + v263 ]=v198[v263];end local v199=v198[1 + 0 ];if ((3842==3842) and v199) then v76[v197]=v199;v70=v78[4 -1 ];else v70=v70 + (407 -(183 + 223)) ;end else v76[v78[2 -0 ]]=v78[2 + 1 ]~=(0 + 0) ;end elseif (v79==(379 -(10 + 327))) then do return v76[v78[2 + 0 ]];end else v76[v78[948 -(88 + 858) ]]=v76[v78[341 -(118 + 220) ]];end elseif (v79<=(15 + 30)) then if ((1747<=3601) and (v79>(493 -(108 + 341)))) then do return v76[v78[(3 -2) + 1 ]];end else v70=v78[12 -9 ];end elseif (v79==(62 -16)) then local v204=v67[v78[1496 -(711 + 285 + 497) ]];local v205;local v206={};v205=v10({},{__index=function(v266,v267) local v268=0 -0 ;local v269;while true do if (v268==0) then v269=v206[v267];return v269[470 -(270 + 199) ][v269[1 + 1 ]];end end end,__newindex=function(v270,v271,v272) local v273=v206[v271];v273[1820 -(580 + 1239) ][v273[2 + 0 ]]=v272;end});for v275=2 -1 ,v78[4 + 0 ] do local v276=0;local v277;while true do if ((v276==(1 + 0)) or (804>4359)) then if (v277[1 + 0 ]==(33 -20)) then v206[v275-(1 + 0) ]={v76,v277[3 + 0 ]};else v206[v275-(4 -3) ]={v60,v277[1839 -(1045 + 791) ]};end v75[ #v75 + (3 -2) ]=v206;break;end if (v276==(0 -0)) then v70=v70 + 1 + 0 ;v277=v66[v70];v276=1 -0 ;end end end v76[v78[507 -(351 + 154) ]]=v29(v204,v205,v61);else local v208=1574 -((2734 -(28 + 1425)) + 293) ;local v209;while true do if (v208==(266 -(28 + 238))) then v209=v78[2];v76[v209]=v76[v209]();break;end end end elseif (v79<=(122 -67)) then if ((4670>=3623) and (v79<=(1610 -(1381 + 178)))) then if (v79<=(46 + 3)) then if (v79>(39 + 9)) then if (v76[v78[1 + 1 ]]==v76[v78[13 -9 ]]) then v70=v70 + 1 + 0 ;else v70=v78[3 + (1993 -(941 + 1052)) ];end else v76[v78[472 -(381 + 89) ]]=v76[v78[3 + 0 + 0 ]][v76[v78[3 + 1 ]]];end elseif (v79==50) then local v212=v78[2 -0 ];local v213=v76[v78[1159 -(1074 + 82) ]];v76[v212 + (1465 -(157 + 1307)) ]=v213;v76[v212]=v213[v78[8 -4 ]];else v76[v78[1786 -(214 + 1570) ]]=v78[1458 -(990 + 465) ];end elseif ((2065<2544) and (v79<=(22 + 31))) then if (v79==(20 + 32)) then v76[v78[1 + (1515 -(822 + 692)) ]]=v61[v78[(1468 -439) -(834 + 192) ]];elseif ((1311<=3359) and (v76[v78[1 + 1 + 0 ]]==v76[v78[4 + 0 ]])) then v70=v70 + (3 -2) ;else v70=v78[3];end elseif (v79>((2077 -(45 + 252)) -(1668 + 58))) then v76[v78[628 -(512 + 114) ]]=v76[v78[(7 + 0) -4 ]][v78[8 -4 ]];else v76[v78[6 -(2 + 2) ]]=v60[v78[2 + 1 ]];end elseif (v79<=59) then if (v79<=((26 -15) + 46)) then if (v79==(49 + 7)) then do return;end else v76[v78[2 + 0 ]]();end elseif (v79==(44 + 14)) then v76[v78[6 -4 ]]=v78[1997 -(109 + 1885) ]~=(1469 -(1269 + 200)) ;else local v226=0 -0 ;local v227;while true do if ((2717<=3156) and (v226==(0 -0))) then v227=v78[817 -(98 + 717) ];v76[v227](v13(v76,v227 + (827 -(802 + 24)) ,v78[5 -2 ]));break;end end end elseif (v79<=(76 -15)) then if ((1081<4524) and (v79>(9 + 51))) then if v76[v78[2 + 0 ]] then v70=v70 + 1 ;else v70=v78[1 + 2 ];end else local v228=v78[1 + 1 ];local v229={v76[v228](v76[v228 + (3 -2) ])};local v230=1099 -(35 + 1064) ;for v278=v228,v78[2 + 2 ] do v230=v230 + 1 + 0 ;v76[v278]=v229[v230];end end elseif (v79<=(52 + 10)) then local v231=v78[1 + 1 ];v76[v231](v13(v76,v231 + 1 + 0 ,v78[2 + 1 ]));elseif (v79>(1496 -(797 + 636))) then local v294=v78[2 + 0 ];do return v13(v76,v294,v294 + v78[3 + 0 ] );end elseif ((440>=71) and (v78[9 -7 ]==v76[v78[1 + 3 ]])) then v70=v70 + (1620 -((1860 -(114 + 319)) + 192)) ;else v70=v78[2 + 1 ];end v70=v70 + 1 + (0 -0) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
