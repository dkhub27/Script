--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v79=0;while true do if (v79==0) then v19=v0(v3(v30,1,1));return "";end end else local v80=v2(v0(v30,16));if v19 then local v91=0;local v92;while true do if (v91==1) then return v92;end if (v91==0) then v92=v5(v80,v19);v19=nil;v91=1;end end else return v80;end end end);local function v20(v31,v32,v33) if v33 then local v81=0 -0 ;local v82;while true do if (v81==(0 -0)) then v82=(v31/(((3 -0) -(1066 -(68 + 997)))^(v32-(2 -1))))%((621 -(555 + 64))^(((v33-(932 -(857 + 74))) -(v32-(569 -(367 + 201)))) + 1)) ;return v82-(v82%(928 -(214 + (1983 -(226 + 1044))))) ;end end else local v83=0 + 0 ;local v84;while true do if (v83==0) then v84=(1 + 1)^(v32-(878 -(282 + 595))) ;return (((v31%(v84 + v84))>=v84) and (1638 -(1523 + 114))) or (0 + 0) ;end end end end local function v21() local v34=(0 -0) + 0 ;local v35;while true do if (v34==(0 -0)) then v35=v1(v16,v18,v18);v18=v18 + (958 -(892 + 65)) ;v34=2 -1 ;end if (v34==(118 -(32 + 85))) then return v35;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + (352 -(87 + 263)) ;return (v37 * (436 -(67 + 113))) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (9 -5) ;return (v41 * (12338840 + 4438376)) + (v40 * 65536) + (v39 * (1017 -761)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=953 -(802 + 150) ;local v45=(v20(v43,1,53 -33 ) * ((3 -(3 -2))^(24 + 8))) + v42 ;local v46=v20(v43,80 -59 ,1028 -(915 + 82) );local v47=((v20(v43,90 -58 )==1) and  -(1 + 0)) or (1 + 0 + 0) ;if (v46==(0 -(859 -(814 + 45)))) then if (v45==((0 -0) -0)) then return v47 * ((420 + 767) -(1069 + 118)) ;else v46=(1316 -(261 + 624)) -(44 + 386) ;v44=0 -0 ;end elseif (v46==(651 + (2480 -1084))) then return ((v45==(0 -0)) and (v47 * ((1 + (1080 -(1020 + 60)))/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-((2438 -(630 + 793)) + 8) ) * (v44 + (v45/((793 -(368 + 423))^(163 -111)))) ;end local function v25(v48) local v49=0 -0 ;local v50;local v51;while true do if (v49==(14 -11)) then return v6(v51);end if (v49==(2 -1)) then v50=v3(v16,v18,(v18 + v48) -(3 -2) );v18=v18 + v48 ;v49=1 + 1 ;end if (v49==(1 + 1)) then v51={};for v93=1, #v50 do v51[v93]=v2(v1(v3(v50,v93,v93)));end v49=9 -6 ;end if (v49==(0 + 0)) then v50=nil;if  not v48 then v48=v23();if (v48==(1747 -(760 + (2230 -1243)))) then return "";end end v49=1914 -(1789 + 124) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0 + 0 ;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if ((2 -0)~=v52) then else for v95= #":",v23() do local v96=(function() return 0;end)();local v97=(function() return;end)();local v98=(function() return;end)();while true do if (v96==1) then while true do if (v97==(0 -0)) then v98=(function() return v21();end)();if (v20(v98, #"[", #"~")==0) then local v115=(function() return 1384 -(746 + 638) ;end)();local v116=(function() return;end)();local v117=(function() return;end)();local v118=(function() return;end)();while true do if ((1 + 0)==v115) then local v120=(function() return 0 -0 ;end)();local v121=(function() return;end)();while true do if (v120==0) then v121=(function() return 341 -(218 + 123) ;end)();while true do if (v121~=(1581 -(1535 + 46))) then else v118=(function() return {v22(),v22(),nil,nil};end)();if (v116==(0 + 0)) then local v330=(function() return 0;end)();local v331=(function() return;end)();while true do if (v330==(0 + 0)) then v331=(function() return 0;end)();while true do if (v331==0) then v118[ #"-19"]=(function() return v22();end)();v118[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v116== #":") then v118[ #"asd"]=(function() return v23();end)();elseif (v116==2) then v118[ #"xnx"]=(function() return v23() -((562 -(306 + 254))^(1 + 15)) ;end)();elseif (v116== #"91(") then local v353=(function() return 0;end)();while true do if (v353~=0) then else v118[ #"91("]=(function() return v23() -(2^(30 -14)) ;end)();v118[ #"0836"]=(function() return v22();end)();break;end end end v121=(function() return 1468 -(899 + 568) ;end)();end if (v121==(1 + 0)) then v115=(function() return 2;end)();break;end end break;end end end if ((7 -4)==v115) then if (v20(v117, #"91(", #"-19")~= #".") then else v118[ #"?id="]=(function() return v58[v118[ #"xnxx"]];end)();end v53[v95]=(function() return v118;end)();break;end if ((603 -(268 + 335))==v115) then local v123=(function() return 290 -(60 + 230) ;end)();while true do if (0==v123) then v116=(function() return v20(v98,574 -(426 + 146) , #"19(");end)();v117=(function() return v20(v98, #".dev",6);end)();v123=(function() return 1 + 0 ;end)();end if (v123~=(1457 -(282 + 1174))) then else v115=(function() return 1;end)();break;end end end if (v115==2) then if (v20(v117, #"/", #"}")~= #">") then else v118[2]=(function() return v58[v118[813 -(569 + 242) ]];end)();end if (v20(v117,2,2)== #"\\") then v118[ #"91("]=(function() return v58[v118[ #"asd"]];end)();end v115=(function() return 3;end)();end end end break;end end break;end if (v96==0) then local v107=(function() return 0;end)();local v108=(function() return;end)();while true do if (v107~=(0 -0)) then else v108=(function() return 0 + 0 ;end)();while true do if (v108~=(1024 -(706 + 318))) then else v97=(function() return 1251 -(721 + 530) ;end)();v98=(function() return nil;end)();v108=(function() return 1;end)();end if (v108==1) then v96=(function() return 1272 -(945 + 326) ;end)();break;end end break;end end end end end for v99= #".",v23() do v54[v99-#"/" ]=(function() return v28();end)();end return v56;end if ( #">"~=v52) then else local v87=(function() return 0;end)();local v88=(function() return;end)();while true do if (v87==(0 -0)) then v88=(function() return 0 + 0 ;end)();while true do if (v88==(702 -(271 + 429))) then v52=(function() return 2;end)();break;end if (v88==1) then for v110= #":",v57 do local v111=(function() return 0 + 0 ;end)();local v112=(function() return;end)();local v113=(function() return;end)();local v114=(function() return;end)();while true do if (v111==1) then v114=(function() return nil;end)();while true do if ( #"."~=v112) then else if (v113== #"!") then v114=(function() return v21()~=(1500 -(1408 + 92)) ;end)();elseif (v113==(1088 -(461 + 625))) then v114=(function() return v24();end)();elseif (v113== #"nil") then v114=(function() return v25();end)();end v58[v110]=(function() return v114;end)();break;end if (v112==0) then local v125=(function() return 0;end)();while true do if (v125==(1288 -(993 + 295))) then v113=(function() return v21();end)();v114=(function() return nil;end)();v125=(function() return 1 + 0 ;end)();end if (v125~=1) then else v112=(function() return  #"\\";end)();break;end end end end break;end if (v111~=0) then else local v119=(function() return 0;end)();while true do if (v119~=0) then else v112=(function() return 1171 -(418 + 753) ;end)();v113=(function() return nil;end)();v119=(function() return 1 + 0 ;end)();end if (v119~=(1 + 0)) then else v111=(function() return 1;end)();break;end end end end end v56[ #"gha"]=(function() return v21();end)();v88=(function() return 1 + 1 ;end)();end if (v88~=(0 + 0)) then else v57=(function() return v23();end)();v58=(function() return {};end)();v88=(function() return 1;end)();end end break;end end end if (v52==0) then local v89=(function() return 0;end)();local v90=(function() return;end)();while true do if (v89==(529 -(406 + 123))) then v90=(function() return 1769 -(1749 + 20) ;end)();while true do if (1==v90) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v90=(function() return 2;end)();end if (v90==(0 + 0)) then v53=(function() return {};end)();v54=(function() return {};end)();v90=(function() return 1323 -(1249 + 73) ;end)();end if ((1 + 1)==v90) then v52=(function() return  #"[";end)();break;end end break;end end end end end local function v29(v59,v60,v61) local v62=v59[1146 -(466 + 679) ];local v63=v59[2];local v64=v59[6 -3 ];return function(...) local v65=v62;local v66=v63;local v67=v64;local v68=v27;local v69=2 -1 ;local v70= -(1901 -(93 + 13 + 1794));local v71={};local v72={...};local v73=v12("#",...) -(1 + 0) ;local v74={};local v75={};for v85=0 -0 ,v73 do if ((v85>=v67) or (4048==4116)) then v71[v85-v67 ]=v72[v85 + (2 -1) ];else v75[v85]=v72[v85 + (115 -(4 + 110)) ];end end local v76=(v73-v67) + (585 -(57 + 527)) ;local v77;local v78;while true do local v86=1427 -(41 + 1386) ;while true do if ((v86==(103 -(17 + 86))) or (1254>=1750)) then v77=v65[v69];v78=v77[1 + 0 ];v86=1;end if (v86==(1 -0)) then if (v78<=(89 -(195 -137))) then if (v78<=15) then if ((v78<=((2167 -(109 + 1885)) -(122 + 44))) or (1398>=3166)) then if (v78<=(5 -2)) then if ((3724>754) and (v78<=(3 -(1471 -(1269 + 200))))) then if ((217>=57) and (v78>(0 + 0))) then v75[v77[1 + 1 ]]=v61[v77[5 -2 ]];elseif (v75[v77[67 -(30 + 35) ]]==v77[3 + (1 -0) ]) then v69=v69 + (1258 -(1043 + 214)) ;else v69=v77[3];end elseif (v78==2) then v75[v77[2]]={};else local v132=v77[7 -5 ];local v133=v75[v77[1215 -(323 + 889) ]];v75[v132 + (2 -1) ]=v133;v75[v132]=v133[v77[584 -(361 + (1034 -(98 + 717))) ]];end elseif (v78<=(325 -(53 + 267))) then if (v78>(1 + 3)) then local v137=v77[(1241 -(802 + 24)) -(15 + 398) ];local v138=v77[986 -(18 + 964) ];local v139=v137 + (7 -5) ;local v140={v75[v137](v75[v137 + 1 + 0 ],v75[v139])};for v239=1,v138 do v75[v139 + v239 ]=v140[v239];end local v141=v140[1];if v141 then v75[v139]=v141;v69=v77[853 -(20 + 830) ];else v69=v69 + 1 ;end else v75[v77[2]]();end elseif ((v78>((6 -1) + 1)) or (2070>=4037)) then local v142=v77[128 -(116 + 10) ];v75[v142]=v75[v142]();else local v144=v77[2];v75[v144](v75[v144 + 1 + 0 ]);end elseif (v78<=(749 -(542 + 196))) then if (v78<=9) then if (v78==(17 -9)) then local v145=v77[1 + 1 ];do return v13(v75,v145,v145 + v77[3] );end else local v146=0 + 0 ;local v147;while true do if (v146==(0 + 0)) then v147=v77[4 -2 ];v75[v147]=v75[v147](v13(v75,v147 + (2 -1) ,v77[3]));break;end end end elseif (v78>(1561 -(167 + 959 + 425))) then v60[v77[408 -(118 + 287) ]]=v75[v77[2]];else v60[v77[3]]=v75[v77[7 -5 ]];end elseif (v78<=(1134 -(118 + 1003))) then if (v78==12) then local v152=v77[5 -3 ];v75[v152]=v75[v152]();else do return v75[v77[379 -(142 + 235) ]];end end elseif (v78>(63 -(38 + 11))) then local v154=v77[1 + 1 + 0 ];local v155,v156=v68(v75[v154](v13(v75,v154 + (978 -(553 + 92 + 332)) ,v77[5 -2 ])));v70=(v156 + v154) -(1 + 0) ;local v157=0 + (0 -0) ;for v242=v154,v70 do v157=v157 + (3 -2) + 0 ;v75[v242]=v155[v157];end else local v158=v77[1 + 1 ];v75[v158]=v75[v158](v13(v75,v158 + 1 ,v70));end elseif (v78<=(6 + 8 + 9)) then if (v78<=(40 -21)) then if ((2705==2705) and (v78<=(47 -30))) then if (v78>(35 -19)) then v75[v77[1 + 0 + 1 ]]=v77[(12 + 2) -11 ]~=0 ;elseif v75[v77[2]] then v69=v69 + (754 -(239 + 514)) ;else v69=v77[3];end elseif (v78==(7 + 11)) then v75[v77[1331 -(797 + 532) ]][v77[3 + 0 ]]=v77[2 + 2 + 0 ];else v75[v77[4 -2 ]]=v75[v77[1205 -(373 + 829) ]];end elseif (v78<=(752 -(476 + 255))) then if ((61==61) and (v78>(1150 -(369 + 761)))) then local v165=v77[2];local v166={v75[v165](v13(v75,v165 + (1 -0) ,v77[5 -2 ]))};local v167=(112 + 126) -(64 + 174) ;for v245=v165,v77[1 + (1436 -(797 + 636)) ] do v167=v167 + (1 -0) ;v75[v245]=v166[v167];end elseif v75[v77[338 -(144 + 192) ]] then v69=v69 + (217 -(42 + 174)) ;else v69=v77[3 + 0 ];end elseif (v78==(19 + 3)) then local v168=v77[1 + 1 ];local v169=v75[v77[1507 -(363 + 1141) ]];v75[v168 + (1581 -((5743 -4560) + 397)) ]=v169;v75[v168]=v169[v77[4]];else v75[v77[1621 -(1427 + 192) ]]=v77[(3 + 5) -5 ];end elseif ((v78<=(20 + 7)) or (699>=1296)) then if ((v78<=(19 + 6)) or (1783>=3616)) then if ((v78>((4640 -2641) -(1913 + 62))) or (3913>4527)) then local v175=v77[2 + 0 ];local v176={v75[v175](v75[v175 + (2 -1) ])};local v177=0;for v248=v175,v77[1937 -(565 + 1368) ] do local v249=0 -0 ;while true do if ((4376>817) and (v249==(1661 -(1477 + 184)))) then v177=v177 + 1 + 0 ;v75[v248]=v176[v177];break;end end end else local v178=v66[v77[(2 + 1) -0 ]];local v179;local v180={};v179=v10({},{__index=function(v250,v251) local v252=v180[v251];return v252[1 + 0 ][v252[858 -(564 + 292) ]];end,__newindex=function(v253,v254,v255) local v256=0 -0 ;local v257;while true do if (v256==(0 -0)) then v257=v180[v254];v257[305 -(244 + 60) ][v257[2 + 0 ]]=v255;break;end end end});for v258=477 -(41 + 435) ,v77[1005 -(938 + 63) ] do local v259=0 + 0 ;local v260;while true do if ((4861>824) and (v259==(1125 -(866 + 70 + 189)))) then v69=v69 + 1 ;v260=v65[v69];v259=1 + 0 ;end if ((v259==1) or (1383>=2131)) then if ((v260[1614 -(1565 + 48) ]==(12 + (26 -19))) or (1876>=2541)) then v180[v258-(1139 -(782 + 356)) ]={v75,v260[4 -1 ]};else v180[v258-(1093 -(975 + 117)) ]={v60,v260[10 -7 ]};end v74[ #v74 + (3 -2) ]=v180;break;end end end v75[v77[1020 -(697 + 321) ]]=v29(v178,v179,v61);end elseif (v78==(70 -44)) then local v182=v77[3 -1 ];local v183={v75[v182](v75[v182 + 1 ])};local v184=0 + 0 ;for v261=v182,v77[4] do local v262=(551 -(83 + 468)) -0 ;while true do if (v262==0) then v184=v184 + (2 -(1807 -(1202 + 604))) ;v75[v261]=v183[v184];break;end end end else v75[v77[1229 -(322 + 905) ]]=v75[v77[614 -(602 + 9) ]][v75[v77[1193 -(449 + 740) ]]];end elseif (v78<=(901 -((3855 -3029) + 46))) then if (v78==(975 -(245 + 702))) then v75[v77[6 -4 ]]=v60[v77[3]];else local v189=0 + (0 -0) ;local v190;local v191;while true do if (v189==((5255 -3357) -(260 + 1638))) then v190=v77[2];v191={};v189=441 -(382 + 58) ;end if (v189==((328 -(45 + 280)) -2)) then for v308=1 + 0 , #v74 do local v309=0 -0 ;local v310;while true do if (v309==(0 -(0 + 0))) then v310=v74[v308];for v343=1205 -(902 + 303) , #v310 do local v344=v310[v343];local v345=v344[1 -0 ];local v346=v344[4 -2 ];if ((v345==v75) and (v346>=v190)) then v191[v346]=v345[v346];v344[1 + 0 ]=v191;end end break;end end end break;end end end elseif (v78>30) then local v192=v77[1692 -(980 + 141 + 569) ];local v193={v75[v192](v13(v75,v192 + (684 -(483 + 200)) ,v77[1466 -(1404 + 59) ]))};local v194=0 -0 ;for v263=v192,v77[4 -0 ] do v194=v194 + 1 ;v75[v263]=v193[v194];end else v75[v77[2]]=v75[v77[768 -(468 + (549 -252)) ]][v77[566 -(334 + 228) ]];end elseif (v78<=(158 -111)) then if (v78<=(89 -50)) then if (v78<=35) then if (v78<=(59 -(1937 -(340 + 1571)))) then if (v78>(10 + 22)) then v75[v77[238 -(141 + 38 + 57) ]]=v75[v77[3]];else local v199=(1772 -(1733 + 39)) + (0 -0) ;local v200;while true do if ((1782<=3772) and (v199==(0 -0))) then v200=v77[(1038 -(125 + 909)) -2 ];v75[v200](v13(v75,v200 + 1 + (1948 -(1096 + 852)) ,v77[(4 + 4) -5 ]));break;end end end elseif (v78==34) then v75[v77[2 + 0 ]]=v77[2 + 1 ];else do return;end end elseif (v78<=(51 -14)) then if (v78==((30 -8) + 14)) then if  not v75[v77[165 -(92 + 71) ]] then v69=v69 + 1 + 0 + 0 ;else v69=v77[4 -(513 -(409 + 103)) ];end else local v203=(1001 -(46 + 190)) -((669 -(51 + 44)) + 191) ;local v204;while true do if (v203==(0 + 0 + 0)) then v204=v77[4 -2 ];v75[v204]=v75[v204](v13(v75,v204 + 1 + 0 ,v77[852 -(254 + 595) ]));break;end end end elseif (v78>(164 -(55 + 71))) then local v205=v77[(1319 -(1114 + 203)) -0 ];local v206={};for v266=1791 -(573 + 1217) , #v74 do local v267=v74[v266];for v281=0 -0 , #v267 do local v282=v267[v281];local v283=v282[1];local v284=v282[1 + 1 ];if ((v283==v75) and (v284>=v205)) then v206[v284]=v283[v284];v282[1 -0 ]=v206;end end end elseif (v77[(1667 -(228 + 498)) -(714 + 225) ]==v75[v77[11 -7 ]]) then v69=v69 + (1 -0) ;else v69=v77[1 + 1 + 1 ];end elseif (v78<=(61 -18)) then if ((v78<=(847 -(118 + 688))) or (4700<813)) then if (v78>(88 -(14 + 11 + 23))) then v75[v77[1 + 1 ]]=v77[1889 -(927 + 959) ]~=(0 -0) ;else local v208=v77[734 -(16 + 716) ];v75[v208]=v75[v208](v13(v75,v208 + (1 -0) ,v70));end elseif (v78>(139 -(11 + 86))) then v75[v77[4 -(665 -(174 + 489)) ]]=v61[v77[288 -(175 + 110) ]];else v75[v77[4 -2 ]]();end elseif ((3199<4050) and (v78<=(117 -72))) then if (v78>(217 -173)) then local v212=v77[1798 -(503 + 1293) ];v75[v212](v13(v75,v212 + (2 -1) ,v77[3]));else for v268=v77[2],v77[3 + 0 ] do v75[v268]=nil;end end elseif (v78==46) then v75[v77[1063 -(810 + 251) ]]=v75[v77[1908 -(830 + 1075) ]][v75[v77[4]]];else local v215=v77[2 + 0 ];local v216=v77[4];local v217=v215 + (525 -(303 + 221)) + 1 ;local v218={v75[v215](v75[v215 + (534 -(43 + 490)) ],v75[v217])};for v270=734 -(711 + (1184 -(171 + 991))) ,v216 do v75[v217 + v270 ]=v218[v270];end local v219=v218[1];if v219 then v75[v217]=v219;v69=v77[11 -8 ];else v69=v69 + (860 -(240 + 619)) ;end end elseif (v78<=(14 + 41)) then if (v78<=51) then if (v78<=(77 -28)) then if (v78==(4 + 44)) then for v273=v77[1746 -(1344 + 400) ],v77[408 -(255 + 150) ] do v75[v273]=nil;end elseif (v75[v77[2 + 0 ]]==v75[v77[3 + 1 ]]) then v69=v69 + (4 -3) ;else v69=v77[9 -6 ];end elseif (v78>(1789 -(404 + 1335))) then v69=v77[409 -(183 + 223) ];else local v221=(0 -0) -0 ;local v222;local v223;local v224;while true do if (((0 + 0)==v221) or (4951<4430)) then v222=v66[v77[2 + 1 ]];v223=nil;v221=338 -(10 + 327) ;end if (v221==(1 + 0)) then v224={};v223=v10({},{__index=function(v314,v315) local v316=0;local v317;while true do if ((96==96) and (0==v316)) then v317=v224[v315];return v317[1][v317[2]];end end end,__newindex=function(v318,v319,v320) local v321=0 -0 ;local v322;while true do if ((v321==(338 -(118 + 220))) or (2739>4008)) then v322=v224[v319];v322[2 -1 ][v322[1 + 1 ]]=v320;break;end end end});v221=2;end if ((v221==((1580 -1129) -(108 + 341))) or (23==1134)) then for v323=1 + 0 ,v77[4] do v69=v69 + ((11 -7) -3) ;local v324=v65[v69];if ((v324[1494 -(711 + 782) ]==(36 -17)) or (2693>=4111)) then v224[v323-((757 -287) -(270 + (614 -415))) ]={v75,v324[3]};else v224[v323-(1 + 0) ]={v60,v324[8 -5 ]};end v74[ #v74 + 1 + 0 ]=v224;end v75[v77[1 + 1 ]]=v29(v222,v223,v61);break;end end end elseif (v78<=53) then if ((v78>52) or (4316<=2146)) then v75[v77[2]]={};else v69=v77[3];end elseif (v78>(24 + 30)) then local v227=(158 -(91 + 67)) -0 ;local v228;local v229;local v230;local v231;while true do if ((v227==(1 + 0)) or (3546<=2809)) then v70=(v230 + v228) -(1168 -((1919 -1274) + 522)) ;v231=(447 + 1343) -(1010 + 780) ;v227=2 + 0 ;end if ((4904>2166) and (v227==(0 -0))) then v228=v77[5 -3 ];v229,v230=v68(v75[v228](v13(v75,v228 + (1837 -(1045 + 791)) ,v77[7 -4 ])));v227=1;end if (v227==((525 -(423 + 100)) -0)) then for v326=v228,v70 do local v327=0;while true do if (((4 + 501) -(351 + 154))==v327) then v231=v231 + (1575 -(1281 + 293)) ;v75[v326]=v229[v231];break;end end end break;end end else local v232=v77[268 -(28 + 238) ];v75[v232](v75[v232 + (2 -1) ]);end elseif (v78<=59) then if (v78<=57) then if ((109>=90) and (v78==(1615 -(1381 + 178)))) then v75[v77[2]][v77[3]]=v77[4 + 0 ];else do return v75[v77[2 + 0 ]];end end elseif ((4978>2905) and (v78>(25 + 33))) then v75[v77[2]]=v60[v77[10 -7 ]];elseif (v77[2 + 0 ]==v75[v77[474 -(381 + 89) ]]) then v69=v69 + 1 ;else v69=v77[3 + 0 ];end elseif ((v78<=(42 + 19)) or (3026<=2280)) then if (v78==(102 -42)) then do return;end elseif ((v75[v77[1158 -((2973 -1899) + 82) ]]==v75[v77[8 -(3 + 1) ]]) or (1653<=1108)) then v69=v69 + 1 ;else v69=v77[1787 -(214 + 1570) ];end elseif (v78<=(1517 -(990 + 465))) then v75[v77[2]]=v75[v77[2 + 1 ]][v77[2 + 2 ]];elseif (v78>(62 + 1)) then if  not v75[v77[7 -5 ]] then v69=v69 + (1727 -(1668 + 58)) ;else v69=v77[629 -(512 + 114) ];end elseif (v75[v77[5 -3 ]]==v77[8 -4 ]) then v69=v69 + (3 -2) ;else v69=v77[(773 -(326 + 445)) + 1 ];end v69=v69 + 1 + 0 ;break;end end end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
