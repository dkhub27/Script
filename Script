--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v86=v2(v0(v30,16));if v19 then local v111=v5(v86,v19);v19=nil;return v111;else return v86;end end end);local function v20(v31,v32,v33) if v33 then local v87=0 -0 ;local v88;while true do if (v87==0) then v88=(v31/(((1070 -(68 + 997)) -3)^(v32-(1 -0))))%((4 -2)^(((v33-((1890 -(226 + 1044)) -(555 + 64))) -(v32-(932 -(857 + 74)))) + (569 -(367 + (875 -674))))) ;return v88-(v88%1) ;end end else local v89=927 -(214 + 713) ;local v90;while true do if (v89==(0 + 0)) then v90=(1 + 1)^(v32-(878 -(282 + 595))) ;return (((v31%(v90 + v90))>=v90) and (1638 -(1523 + 114))) or (0 + (0 -0)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=957 -(892 + 65) ;local v36;local v37;while true do if (v35==(118 -(32 + 85))) then return (v37 * ((960 -(87 + 263)) -354)) + v36 ;end if (v35==(0 + 0)) then v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + 1 + 1 ;v35=1 -0 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (183 -((1019 -(802 + 150)) + 113)) );v18=v18 + 3 + 1 ;return (v41 * (41190819 -24413603)) + (v40 * (48199 + 17337)) + (v39 * (1017 -761)) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=2 -1 ;local v45=(v20(v43,19 -(10 + 8) ,36 -16 ) * ((2 + (0 -0))^(1029 -(915 + 82)))) + v42 ;local v46=v20(v43,59 -38 ,19 + (871 -(814 + 45)) );local v47=((v20(v43,41 -9 )==(1188 -(1069 + 118))) and  -(439 -((357 -212) + 16 + 277))) or (2 -1) ;if (v46==(0 -0)) then if (v45==(0 + 0)) then return v47 * (0 + 0) ;else v46=1 + 0 ;v44=0;end elseif (v46==(3636 -(562 + 1027))) then return ((v45==(0 + 0)) and (v47 * ((4 -3)/(791 -(368 + (1308 -(261 + 624))))))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/(2^(163 -111)))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -1 );v18=v18 + v48 ;local v50={};for v66=1081 -(1020 + 60) , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v91== #"~") then if (v92== #"[") then v93=(function() return v94()~=0 ;end)();elseif (v92==2) then v93=(function() return v95();end)();elseif (v92~= #"xxx") then else v93=(function() return v96();end)();end v97[v98]=(function() return v93;end)();break;end if (v91~=(285 -(134 + 151))) then else local v117=(function() return 1665 -(970 + 695) ;end)();local v118=(function() return;end)();while true do if (0==v117) then v118=(function() return 0 -0 ;end)();while true do if (1==v118) then v91=(function() return  #"[";end)();break;end if (v118~=(1990 -(582 + 1408))) then else v92=(function() return v94();end)();v93=(function() return nil;end)();v118=(function() return 1;end)();end end break;end end end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v52=(function() return function(v99,v100,v101) local v102=(function() return 0;end)();local v103=(function() return;end)();while true do if ((0 -0)~=v102) then else v103=(function() return 0;end)();while true do if (v103==(0 -0)) then local v123=(function() return 0 -0 ;end)();while true do if (v123~=0) then else v99[v100-#"{" ]=(function() return v101();end)();return v99,v100,v101;end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #"}",v57 do FlatIdent_7126A,Type,Cons,v21,v24,v25,v58,v68=(function() return v51(FlatIdent_7126A,Type,Cons,v21,v24,v25,v58,v68);end)();end v56[ #"19("]=(function() return v21();end)();for v69= #"}",v23() do local v70=(function() return v21();end)();if (v20(v70, #",", #"\\")~=(0 -0)) then else local v106=(function() return 241 -(187 + 54) ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v106==(780 -(162 + 618))) then local v121=(function() return 0 + 0 ;end)();while true do if ((0 + 0)==v121) then v107=(function() return 0;end)();v108=(function() return nil;end)();v121=(function() return 1 -0 ;end)();end if (1==v121) then v106=(function() return 1 -0 ;end)();break;end end end if (v106==(1 + 0)) then local v122=(function() return 0;end)();while true do if ((1637 -(1373 + 263))~=v122) then else v106=(function() return 1002 -(451 + 549) ;end)();break;end if (0==v122) then local v124=(function() return 0 + 0 ;end)();while true do if (v124==1) then v122=(function() return 1;end)();break;end if (v124~=(0 -0)) then else v109=(function() return nil;end)();v110=(function() return nil;end)();v124=(function() return 1;end)();end end end end end if (v106==2) then while true do if (v107== #"{") then local v125=(function() return 0 -0 ;end)();local v126=(function() return;end)();while true do if (v125~=0) then else v126=(function() return 1384 -(746 + 638) ;end)();while true do if ((1 + 0)~=v126) then else v107=(function() return 2;end)();break;end if (0==v126) then v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==0) then local v134=(function() return 0 -0 ;end)();local v135=(function() return;end)();while true do if (v134==(341 -(218 + 123))) then v135=(function() return 0;end)();while true do if (v135==0) then v110[ #"nil"]=(function() return v22();end)();v110[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v108== #",") then v110[ #"gha"]=(function() return v23();end)();elseif (v108==2) then v110[ #"-19"]=(function() return v23() -(2^16) ;end)();elseif (v108~= #"-19") then else local v378=(function() return 1581 -(1535 + 46) ;end)();local v379=(function() return;end)();while true do if (v378==(0 + 0)) then v379=(function() return 0;end)();while true do if (v379~=0) then else v110[ #"gha"]=(function() return v23() -(2^(3 + 13)) ;end)();v110[ #"?id="]=(function() return v22();end)();break;end end break;end end end v126=(function() return 561 -(306 + 254) ;end)();end end break;end end end if (v107~=2) then else local v127=(function() return 0 + 0 ;end)();local v128=(function() return;end)();while true do if (v127==0) then v128=(function() return 0 -0 ;end)();while true do if (v128~=1) then else v107=(function() return  #"xxx";end)();break;end if (v128==0) then if (v20(v109, #"|", #",")== #"\\") then v110[1469 -(899 + 568) ]=(function() return v58[v110[2]];end)();end if (v20(v109,2 + 0 ,2)== #"|") then v110[ #"91("]=(function() return v58[v110[ #"xnx"]];end)();end v128=(function() return 1;end)();end end break;end end end if (v107==(0 -0)) then local v129=(function() return 0;end)();local v130=(function() return;end)();while true do if (v129==0) then v130=(function() return 0;end)();while true do if (v130~=0) then else v108=(function() return v20(v70,2, #"91(");end)();v109=(function() return v20(v70, #"0313",609 -(268 + 335) );end)();v130=(function() return 1;end)();end if (v130==1) then v107=(function() return  #"/";end)();break;end end break;end end end if (v107== #"91(") then if (v20(v109, #"xnx", #"-19")== #" ") then v110[ #".com"]=(function() return v58[v110[ #"http"]];end)();end v53[v69]=(function() return v110;end)();break;end end break;end end end end for v71= #"<",v23() do v54,v71,v28=(function() return v52(v54,v71,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1727 -(1668 + 58) ];local v64=v60[292 -(60 + 230) ];local v65=v60[629 -(512 + 114) ];return function(...) local v72=v63;local v73=v64;local v74=v65;local v75=v27;local v76=573 -(426 + 146) ;local v77= -(1 + 0);local v78={};local v79={...};local v80=v12("#",...) -((6 + 1451) -(282 + 1174)) ;local v81={};local v82={};for v104=811 -(569 + 242) ,v80 do if (v104>=v74) then v78[v104-v74 ]=v79[v104 + (2 -1) ];else v82[v104]=v79[v104 + (1237 -(298 + 938)) + 0 ];end end local v83=(v80-v74) + (1995 -(109 + 1885)) ;local v84;local v85;while true do local v105=1024 -(706 + 318) ;while true do if ((1252 -(721 + 530))==v105) then if (v85<=(1305 -(945 + 326))) then if (v85<=(39 -(1282 -(233 + 1026)))) then if (v85<=7) then if (v85<=(3 + 0)) then if ((924>477) and (v85<=(701 -(271 + 429)))) then if ((1813<=3778) and (v85==(0 + 0))) then local v138=0 -0 ;local v139;local v140;while true do if (v138==(1500 -(1408 + 92))) then v139=v84[1088 -(461 + 625) ];v140=v82[v84[3 + 0 ]];v138=1289 -(993 + 295) ;end if (v138==(1 + 0)) then v82[v139 + 1 + 0 ]=v140;v82[v139]=v140[v84[1175 -(418 + 753) ]];break;end end elseif (v84[6 -(1670 -(636 + 1030)) ]==v82[v84[4]]) then v76=v76 + 1 + 0 ;else v76=v84[2 + 1 ];end elseif ((4150==4150) and (v85==(1 + 1))) then local v141=v84[1 + 1 ];local v142=v82[v84[1 + 2 ]];v82[v141 + (530 -(406 + 123)) ]=v142;v82[v141]=v142[v84[1773 -(1749 + 20) ]];else v82[v84[1 + 1 ]]=v82[v84[(678 + 647) -(1249 + 73) ]][v84[4]];end elseif (v85<=(2 + 3)) then if (v85==(1623 -(1427 + 188 + 4))) then v82[v84[1147 -(466 + 679) ]]={};else v82[v84[4 -2 ]]=v84[8 -5 ]~=(0 + 0) ;end elseif ((432<=3007) and (v85>(1906 -(106 + 1794)))) then if ((v84[1 + 1 ]==v82[v84[1 + 1 + 2 ]]) or (408>2721)) then v76=v76 + (2 -1) ;else v76=v84[7 -(1 + 3) ];end else local v150=v84[116 -((225 -(55 + 166)) + 110) ];local v151={v82[v150](v13(v82,v150 + (3 -2) ,v77))};local v152=584 -(12 + 45 + 53 + 474) ;for v249=v150,v84[1431 -((156 -115) + 1386) ] do v152=v152 + (104 -(17 + 86)) ;v82[v249]=v151[v152];end end elseif ((v85<=(51 -40)) or (3418<2497)) then if (v85<=(7 + (299 -(36 + 261)))) then if (v85==(13 -(8 -3))) then v82[v84[5 -3 ]]=v82[v84[6 -3 ]];elseif ((1735<2169) and (v82[v84[(1373 -(34 + 1334)) -3 ]]==v84[4 + 0 ])) then v76=v76 + (167 -(122 + 44)) ;else v76=v84[1 + 1 + 1 + 0 ];end elseif (v85>10) then v82[v84[2 -0 ]]=v82[v84[9 -6 ]][v82[v84[4 + 0 ]]];else do return;end end elseif (v85<=(2 + 11)) then if ((3890>=3262) and (v85>12)) then local v157=0 -0 ;local v158;while true do if ((65 -(30 + (1318 -(1035 + 248))))==v157) then v158=v84[23 -(20 + 1) ];v82[v158]=v82[v158]();break;end end else local v159=v84[1774 -(903 + 830 + 39) ];local v160=v84[3 + 1 ];local v161=v159 + (1259 -(1043 + 214)) ;local v162={v82[v159](v82[v159 + (1213 -(323 + 889)) ],v82[v161])};for v252=2 -1 ,v160 do v82[v161 + v252 ]=v162[v252];end local v163=v162[581 -(361 + 219) ];if v163 then local v289=320 -(53 + 267) ;while true do if (v289==(0 + 0)) then v82[v161]=v163;v76=v84[515 -(409 + 103) ];break;end end else v76=v76 + (414 -(15 + 398)) ;end end elseif ((v85<=(996 -(18 + 964))) or (4356>=4649)) then do return v82[v84[1 + 1 ]];end elseif ((3904==3904) and (v85==(56 -(360 -(134 + 185))))) then if ( not v82[v84[2 + 0 ]] or (2860>=3789)) then v76=v76 + 1 + 0 ;else v76=v84[853 -(20 + 830) ];end elseif (v82[v84[2 + 0 ]]==v82[v84[4 + 0 ]]) then v76=v76 + ((1260 -(549 + 584)) -(116 + 10)) ;else v76=v84[1 + 2 ];end elseif ((v85<=(763 -((1227 -(314 + 371)) + 196))) or (1086>4449)) then if ((4981>546) and (v85<=(42 -22))) then if ((v85<=(6 + 12)) or (2366<=8)) then if (v85>(1922 -(830 + 1075))) then local v164=v84[526 -(303 + 221) ];v82[v164]=v82[v164](v13(v82,v164 + 1 + 0 ,v84[(6 -4) + 1 ]));else local v166=v84[4 -2 ];v82[v166](v13(v82,v166 + (2 -1) ,v84[1554 -(1126 + 425) ]));end elseif (v85>(424 -(118 + 287))) then local v167=0 -0 ;local v168;while true do if (v167==(1121 -(118 + 1003))) then v168=v84[(973 -(478 + 490)) -3 ];v82[v168]=v82[v168](v82[v168 + (378 -(142 + 235)) ]);break;end end else local v169=v84[9 -7 ];local v170,v171=v75(v82[v169](v13(v82,v169 + 1 + 0 ,v84[980 -(293 + 260 + 424) ])));v77=(v171 + v169) -(2 -(1173 -(786 + 386))) ;local v172=0 -0 ;for v255=v169,v77 do v172=v172 + 1 + 0 ;v82[v255]=v170[v172];end end elseif ((v85<=22) or (2590==2864)) then if (v85==(21 + 0)) then v76=v84[2 + 1 ];else for v258=v84[1 + 1 ],v84[2 + 1 ] do v82[v258]=nil;end end elseif (v85<=(49 -26)) then v82[v84[2]]=v62[v84[7 -4 ]];elseif ((v85>(182 -((294 -203) + 67))) or (2624>4149)) then v82[v84[4 -2 ]]=v84[1 + 2 ]~=(523 -(423 + 100)) ;else local v291=v84[9 -7 ];local v292={v82[v291](v82[v291 + 1 + 0 ])};local v293=1329 -(797 + 532) ;for v322=v291,v84[3 + 1 ] do local v323=0 -0 ;while true do if ((v323==0) or (2618>=4495)) then v293=v293 + 1 + 0 ;v82[v322]=v292[v293];break;end end end end elseif (v85<=(67 -38)) then if ((v85<=(1229 -(373 + 829))) or (2485>=3131)) then if ((v85>(58 -(19 + 13))) or (2804<=2785)) then if ((v82[v84[733 -(476 + 255) ]]==v82[v84[9 -5 ]]) or (4571==3415)) then v76=v76 + (2 -1) ;else v76=v84[1133 -((1748 -(1055 + 324)) + 761) ];end else local v176=0 + 0 ;local v177;local v178;local v179;while true do if (v176==(1 -0)) then v179=0 -0 ;for v345=v177,v84[7 -3 ] do v179=v179 + (239 -(64 + 174)) ;v82[v345]=v178[v179];end break;end if (v176==(0 -0)) then v177=v84[8 -6 ];v178={v82[v177](v13(v82,v177 + (1 -0) ,v84[6 -3 ]))};v176=337 -(144 + (1532 -(1093 + 247))) ;end end end elseif ((v85>((217 + 27) -(42 + 174))) or (4441>4787)) then v82[v84[2 + 0 ]]=v82[v84[3 + 0 ]][v82[v84[2 + 2 ]]];else local v182=1504 -(363 + 1141) ;local v183;local v184;while true do if (v182==(1 + 0)) then for v348=1, #v81 do local v349=v81[v348];for v371=1580 -(1183 + 42 + 355) , #v349 do local v372=v349[v371];local v373=v372[2 -1 ];local v374=v372[2 + 0 ];if ((1920==1920) and (v373==v82) and (v374>=v183)) then local v386=0 + (0 -0) ;while true do if ((v386==(1096 -(709 + 387))) or (647==4477)) then v184[v374]=v373[v374];v372[1976 -(1913 + 62) ]=v184;break;end end end end end break;end if ((3819==3819) and (v182==(0 + 0))) then v183=v84[5 -3 ];v184={};v182=1934 -(565 + 1368) ;end end end elseif (v85<=((393 -277) -85)) then if (v85==(1691 -(1477 + 184))) then v82[v84[2 -(0 -0) ]]={};elseif (v82[v84[2 + 0 ]]==v84[5 -(2 -1) ]) then v76=v76 + 1 ;else v76=v84[3 + 0 ];end elseif (v85<=32) then local v186=v84[858 -(564 + 104 + 188) ];local v187=v84[6 -2 ];local v188=v186 + (5 -3) ;local v189={v82[v186](v82[v186 + 1 + 0 ],v82[v188])};for v260=(7 -5) -(3 -2) ,v187 do v82[v188 + v260 ]=v189[v260];end local v190=v189[477 -(41 + 435) ];if (v190 or (1466>4360)) then v82[v188]=v190;v76=v84[1004 -(938 + 63) ];else v76=v76 + (455 -(13 + 441)) ;end elseif (v85==(26 + 7)) then v82[v84[1127 -(706 + 230 + 189) ]]=v84[1 + 2 ];else local v300=v84[1615 -((4002 -2437) + 48) ];local v301,v302=v75(v82[v300](v82[v300 + 1 + 0 ]));v77=(v302 + v300) -(1 + 0) ;local v303=1138 -(782 + 356) ;for v326=v300,v77 do local v327=267 -(176 + 91) ;while true do if (v327==(0 -0)) then v303=v303 + 1 + 0 ;v82[v326]=v301[v303];break;end end end end elseif (v85<=(95 -43)) then if (v85<=(63 -20)) then if ((v85<=(1130 -(975 + 117))) or (14>994)) then if (v85<=(1911 -(157 + 1718))) then if ((401<=734) and (v85==(30 + 5))) then local v191=v84[2 + 0 ];v82[v191]=v82[v191]();else v76=v84[10 -7 ];end elseif (v85>(126 -89)) then v82[v84[1020 -(697 + 321) ]]();else local v194=v73[v84[7 -4 ]];local v195;local v196={};v195=v10({},{__index=function(v263,v264) local v265=v196[v264];return v265[1 -0 ][v265[4 -2 ]];end,__newindex=function(v266,v267,v268) local v269=v196[v267];v269[1 + 0 ][v269[2 + 0 ]]=v268;end});for v271=1 -0 ,v84[5 -1 ] do v76=v76 + 1 ;local v272=v72[v76];if (v272[2 -1 ]==((3547 -2253) -(322 + 905))) then v196[v271-1 ]={v82,v272[1192 -(449 + 740) ]};else v196[v271-(873 -(826 + 46)) ]={v61,v272[1 + 2 ]};end v81[ #v81 + ((12 -9) -2) ]=v196;end v82[v84[1 + 1 ]]=v29(v194,v195,v62);end elseif (v85<=(1938 -(260 + 1638))) then if ((v85==(479 -(382 + 58))) or (2167>=3426)) then v82[v84[1 + 1 ]]=v62[v84[9 -(9 -3) ]];else local v200=(0 -0) + 0 ;local v201;while true do if ((764<3285) and (v200==(0 + 0))) then v201=v84[3 -(1269 -(1249 + 19)) ];do return v13(v82,v201,v201 + v84[3] );end break;end end end elseif ((2499==2499) and (v85<=(121 -80))) then local v202=v84[1207 -(902 + 274 + 29) ];local v203={v82[v202](v82[v202 + (2 -1) ])};local v204=0 + (1086 -(686 + 400)) ;for v274=v202,v84[1694 -(1121 + 569) ] do v204=v204 + 1 + 0 ;v82[v274]=v203[v204];end elseif ((v85>(256 -(22 + 192))) or (692>=4933)) then do return v82[v84[685 -(379 + 104 + 200) ]];end elseif  not v82[v84[491 -(457 + 32) ]] then v76=v76 + (1464 -(1404 + 59)) ;else v76=v84[8 -5 ];end elseif ((v85<=(62 -15)) or (3154<=2260)) then if (v85<=((272 -(73 + 156)) + 2)) then if (v85>(809 -(468 + 297))) then local v205=0 -0 ;local v206;local v207;local v208;while true do if (v205==(562 -(334 + 228))) then v206=v84[6 -4 ];v207={v82[v206](v13(v82,v206 + (1 -0) ,v84[3]))};v205=1 + 0 ;end if (v205==(237 -(141 + 95))) then v208=0 + 0 ;for v351=v206,v84[4] do v208=v208 + (2 -1) ;v82[v351]=v207[v208];end break;end end else v82[v84[1891 -(1569 + 320) ]][v84[6 -3 ]]=v84[815 -(721 + 90) ];end elseif (v85>(11 + 35)) then local v211=v84[5 -3 ];local v212,v213=v75(v82[v211](v82[v211 + 1 + 0 ]));v77=(v213 + v211) -(606 -(316 + 289)) ;local v214=0 + 0 ;for v277=v211,v77 do v214=v214 + 1 + 0 ;v82[v277]=v212[v214];end else local v215=v84[2 -0 ];local v216={v82[v215](v13(v82,v215 + (426 -(360 + 65)) ,v77))};local v217=0 + 0 ;for v280=v215,v84[167 -(92 + 71) ] do v217=v217 + 1 + 0 ;v82[v280]=v216[v217];end end elseif (v85<=(81 -32)) then if (v85==(813 -(574 + 191))) then v82[v84[2 -0 ]]();else local v218=v84[2 + 0 ];v82[v218](v13(v82,v218 + (2 -1) ,v84[2 + 1 ]));end elseif (v85<=(899 -(254 + 595))) then local v219=126 -(55 + 71) ;local v220;while true do if (v219==(0 -0)) then v220=v84[1792 -(573 + 1217) ];v82[v220]=v82[v220](v82[v220 + (2 -(1 + 0)) ]);break;end end elseif (v85==51) then if v82[v84[1 + 1 ]] then v76=v76 + (1 -0) ;else v76=v84[942 -(714 + 225) ];end else v82[v84[5 -3 ]]=v84[3 -0 ];end elseif (v85<=(7 + 54)) then if (v85<=(80 -24)) then if (v85<=(860 -(118 + 688))) then if (v85==(101 -(25 + 23))) then v82[v84[1 + 1 ]]=v61[v84[2 + 1 ]];else local v223=0 -0 ;local v224;while true do if ((v223==(1886 -(927 + 959))) or (2637>3149)) then v224=v84[6 -4 ];v82[v224](v82[v224 + (733 -(16 + 716)) ]);break;end end end elseif ((v85==(106 -51)) or (3992<2407)) then for v283=v84[(321 -222) -((481 -(224 + 246)) + 86) ],v84[6 -(4 -1) ] do v82[v283]=nil;end else local v225=1135 -((1531 -699) + 303) ;local v226;while true do if ((v225==((52 + 233) -(175 + 110))) or (2902>4859)) then v226=v84[1 + 1 ];v82[v226]=v82[v226](v13(v82,v226 + 1 ,v77));break;end end end elseif (v85<=(14 + 4 + 40)) then if (v85==(143 -(170 -84))) then local v227=v84[9 -7 ];v82[v227](v82[v227 + (1797 -(503 + 1293)) ]);else v82[v84[5 -3 ]]=v61[v84[792 -(766 + 23) ]];end elseif (v85<=(43 + 16)) then do return;end elseif (v85>(1121 -(810 + (835 -584)))) then if ((1679<4359) and v82[v84[2 + 0 ]]) then v76=v76 + (514 -(203 + 310)) + 0 ;else v76=v84[(1996 -(1238 + 755)) + 0 + 0 ];end else local v306=v84[(2069 -(709 + 825)) -(43 + 490) ];v82[v306]=v82[v306](v13(v82,v306 + (734 -(711 + 22)) ,v77));end elseif (v85<=(52 + 13)) then if (v85<=(243 -(331 -151))) then if (v85==((1341 -420) -(240 + 619))) then v82[v84[1 + 1 ]]=v82[v84[4 -1 ]][v84[2 + (866 -(196 + 668)) ]];else local v232=0 + 0 ;local v233;local v234;local v235;local v236;while true do if (v232==(0 + (0 -0))) then v233=v84[1746 -(1344 + 400) ];v234,v235=v75(v82[v233](v13(v82,v233 + (406 -(255 + 150)) ,v84[10 -7 ])));v232=1 + 0 ;end if ((2 + 0)==v232) then for v356=v233,v77 do local v357=0 + 0 ;while true do if (v357==(0 -0)) then v236=v236 + (1 -0) + 0 ;v82[v356]=v234[v236];break;end end end break;end if ((3 -2)==v232) then v77=(v235 + v233) -(1740 -(404 + 1335)) ;v236=406 -(183 + 223) ;v232=2 -0 ;end end end elseif (v85>(43 + 21)) then v61[v84[1392 -((968 -(171 + 662)) + 1254) ]]=v82[v84[1 + 1 ]];else v61[v84[340 -((103 -(4 + 89)) + 327) ]]=v82[v84[2 + 0 ]];end elseif (v85<=(405 -(118 + 220))) then if ((1913<4670) and (v85==(22 + 44))) then local v241=449 -((378 -270) + 341) ;local v242;while true do if (v241==0) then v242=v84[1 + 1 ];v82[v242]=v82[v242](v13(v82,v242 + ((210 + 365) -(102 + 472)) ,v84[3 + 0 ]));break;end end else v82[v84[2 + 0 ]]=v82[v84[12 -(39 -30) ]];end elseif (v85<=(1561 -(711 + 782))) then local v245=0 -0 ;local v246;local v247;local v248;while true do if (v245==(470 -(270 + 199))) then v248={};v247=v10({},{__index=function(v358,v359) local v360=v248[v359];return v360[1 + 0 ][v360[1821 -(580 + 1239) ]];end,__newindex=function(v361,v362,v363) local v364=v248[v362];v364[1][v364[5 -3 ]]=v363;end});v245=2 + 0 ;end if ((1 + 0 + (1487 -(35 + 1451)))==v245) then for v366=1 + 0 ,v84[9 -5 ] do local v367=(1453 -(28 + 1425)) -0 ;local v368;while true do if (v367==(1 + 0)) then if (v368[1168 -((2638 -(941 + 1052)) + 522) ]==((159 + 6) -98)) then v248[v366-(1791 -(1010 + 780)) ]={v82,v368[8 -5 ]};else v248[v366-(1837 -(1045 + 791)) ]={v61,v368[4 -1 ]};end v81[ #v81 + (506 -(351 + 154)) ]=v248;break;end if (v367==(1574 -(1281 + (1807 -(822 + 692))))) then v76=v76 + (267 -(28 + (339 -101))) ;v368=v72[v76];v367=2 -1 ;end end end v82[v84[4 -2 ]]=v29(v246,v247,v62);break;end if ((v245==0) or (2846<879)) then v246=v73[v84[1562 -(1381 + 178) ]];v247=nil;v245=1 + 0 ;end end elseif ((4588==4588) and (v85==((362 -(45 + 252)) + 4))) then local v308=0 + 0 ;local v309;local v310;while true do if (v308==(1 + 0)) then for v384=(3 + 0) -2 , #v81 do local v385=v81[v384];for v391=0 + 0 , #v385 do local v392=470 -(381 + 89) ;local v393;local v394;local v395;while true do if ((v392==(0 + 0)) or (347==2065)) then v393=v385[v391];v394=v393[1 + 0 ];v392=(1 + 0) -0 ;end if (v392==(603 -(512 + 90))) then v395=v393[(2818 -1660) -(1074 + 82) ];if ((v394==v82) and (v395>=v309)) then v310[v395]=v394[v395];v393[1907 -(1665 + 241) ]=v310;end break;end end end end break;end if (v308==(0 -0)) then v309=v84[1786 -(214 + 1570) ];v310={};v308=1456 -(990 + 465) ;end end else v82[v84[1 + 1 ]][v84[2 + 1 ]]=v84[4 + 0 ];end v76=v76 + 1 ;break;end if (v105==(1099 -(35 + 1064))) then v84=v72[v76];v85=v84[1];v105=3 -2 ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
