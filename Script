local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v107=0;local v108;while true do if (v107==1) then return v108;end if (v107==0) then v108=v5(v82,v19);v19=nil;v107=1;end end else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=0;local v84;while true do if (v83==(0 -0)) then v84=(v31/((5 -3)^(v32-(1 -0))))%((4 -2)^(((v33-((2257 -(1523 + 114)) -(555 + 64))) -(v32-(932 -(857 + 74)))) + 1 + 0)) ;return v84-(v84%1) ;end end else local v85=(809 -241) -(367 + 201) ;local v86;while true do if (v85==(927 -((1279 -(68 + 997)) + 713))) then v86=(1 + 1)^(v32-1) ;return (((v31%(v86 + v86))>=v86) and (1 + 0)) or (877 -(282 + 595)) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=1270 -(226 + 1044) ;local v36;local v37;while true do if (v35==0) then v36,v37=v1(v16,v18,v18 + (8 -6) );v18=v18 + (119 -(32 + 85)) ;v35=1;end if (v35==(1 + (957 -(892 + 65)))) then return (v37 * (57 + 199)) + v36 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + (7 -(3 + 1)) );v18=v18 + (6 -2) ;return (v41 * (30800116 -(34428522 -20405622))) + (v40 * (65886 -(87 + 263))) + (v39 * (436 -(67 + 113))) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=792 -(368 + 423) ;local v45=(v20(v43,3 -(7 -5) ,15 + 5 ) * (((24 -17) -5)^(984 -(802 + 150)))) + v42 ;local v46=v20(v43,56 -35 ,55 -24 );local v47=((v20(v43,24 + 8 )==(998 -(915 + 82))) and  -1) or 1 ;if (v46==(0 -0)) then if (v45==(0 + (859 -(814 + 45)))) then return v47 * (1486 -(998 + 488)) ;else v46=1 -(0 -0) ;v44=1187 -(1069 + 118) ;end elseif (v46==(4643 -(140 + 2456))) then return ((v45==(0 -0)) and (v47 * ((1 + 0 + 0)/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-((5143 -(261 + 624)) -3235) ) * (v44 + (v45/((2 + 0)^52))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1081 -(1020 + 60)) );v18=v18 + v48 ;local v50={};for v65=1424 -(630 + 793) , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do if ((204 -(14 + 188))==v51) then local v89=(function() return 0;end)();while true do if (v89~=(676 -(534 + 141))) then else v56[ #"-19"]=(function() return v21();end)();v51=(function() return 2 + 1 ;end)();break;end if (0==v89) then v58=(function() return {};end)();for v109= #"}",v57 do local v110=(function() return 0 + 0 ;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v110~=1) then else v113=(function() return nil;end)();while true do if (0~=v111) then else v112=(function() return v21();end)();v113=(function() return nil;end)();v111=(function() return 1;end)();end if ((1 + 0)==v111) then if (v112== #"}") then v113=(function() return v21()~=0 ;end)();elseif (v112==(3 -1)) then v113=(function() return v24();end)();elseif (v112== #"19(") then v113=(function() return v25();end)();end v58[v109]=(function() return v113;end)();break;end end break;end if (0==v110) then v111=(function() return 0;end)();v112=(function() return nil;end)();v110=(function() return 1 -0 ;end)();end end end v89=(function() return 1;end)();end end end if ((0 -0)==v51) then v52=(function() return function(v99,v100,v101) local v102=(function() return 0;end)();local v103=(function() return;end)();while true do if (v102==0) then v103=(function() return 0 + 0 ;end)();while true do if (v103==(0 + 0)) then local v118=(function() return 396 -(115 + 281) ;end)();local v119=(function() return;end)();while true do if (v118==(0 -0)) then v119=(function() return 0;end)();while true do if (v119~=(0 + 0)) then else v99[v100-#"[" ]=(function() return v101();end)();return v99,v100,v101;end end break;end end end end break;end end end;end)();v53=(function() return {};end)();v54=(function() return {};end)();v51=(function() return 2 -1 ;end)();end if (v51==(3 -2)) then local v90=(function() return 0;end)();while true do if (v90==(867 -(550 + 317))) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v90=(function() return 1;end)();end if (v90~=1) then else v57=(function() return v23();end)();v51=(function() return 2;end)();break;end end end if (v51~=(3 -0)) then else for v91= #",",v23() do local v92=(function() return 0;end)();local v93=(function() return;end)();while true do if (v92==(0 -0)) then v93=(function() return v21();end)();if (v20(v93, #"\\", #"{")==0) then local v114=(function() return 0;end)();local v115=(function() return;end)();local v116=(function() return;end)();local v117=(function() return;end)();while true do if (3~=v114) then else if (v20(v116, #"-19", #"nil")== #"[") then v117[ #"xnxx"]=(function() return v58[v117[ #"0313"]];end)();end v53[v91]=(function() return v117;end)();break;end if (v114~=2) then else if (v20(v116, #"\\", #"|")== #"]") then v117[2]=(function() return v58[v117[2]];end)();end if (v20(v116,2,2)== #"<") then v117[ #"xxx"]=(function() return v58[v117[ #"91("]];end)();end v114=(function() return 288 -(134 + 151) ;end)();end if (v114==(1666 -(970 + 695))) then local v121=(function() return 0;end)();while true do if (v121~=(1 -0)) then else v114=(function() return 2;end)();break;end if (v121==(1990 -(582 + 1408))) then local v127=(function() return 0 -0 ;end)();while true do if (v127~=(1 -0)) then else v121=(function() return 3 -2 ;end)();break;end if (v127==0) then v117=(function() return {v22(),v22(),nil,nil};end)();if (v115==0) then local v460=(function() return 0 -0 ;end)();local v461=(function() return;end)();while true do if (0==v460) then v461=(function() return 241 -(187 + 54) ;end)();while true do if ((780 -(162 + 618))==v461) then v117[ #"xxx"]=(function() return v22();end)();v117[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v115== #"|") then v117[ #"-19"]=(function() return v23();end)();elseif (v115==2) then v117[ #"gha"]=(function() return v23() -((2 + 0)^16) ;end)();elseif (v115== #"xxx") then local v482=(function() return 0 + 0 ;end)();local v483=(function() return;end)();while true do if (v482~=0) then else v483=(function() return 0 -0 ;end)();while true do if (v483~=(0 -0)) then else v117[ #"-19"]=(function() return v23() -((1 + 1)^16) ;end)();v117[ #"?id="]=(function() return v22();end)();break;end end break;end end end v127=(function() return 1;end)();end end end end end if (v114~=(1636 -(1373 + 263))) then else local v122=(function() return 0;end)();while true do if (v122~=0) then else v115=(function() return v20(v93,1002 -(451 + 549) , #"19(");end)();v116=(function() return v20(v93, #"?id=",6);end)();v122=(function() return 1;end)();end if (v122~=(1 + 0)) then else v114=(function() return 1 -0 ;end)();break;end end end end end break;end end end for v94= #" ",v23() do v54,v94,v28=(function() return v52(v54,v94,v28);end)();end return v56;end end end local function v29(v59,v60,v61) local v62=v59[1 -0 ];local v63=v59[1386 -(746 + 638) ];local v64=v59[3];return function(...) local v67=v62;local v68=v63;local v69=v64;local v70=v27;local v71=1 + 0 ;local v72= -(1 -0);local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v87=341 -(218 + 123) ,v75 do if (v87>=v69) then v73[v87-v69 ]=v74[v87 + (1582 -(1535 + 46)) ];else v77[v87]=v74[v87 + 1 + 0 ];end end local v78=(v75-v69) + 1 + 0 ;local v79;local v80;while true do local v88=0;while true do if (v88==1) then if (v80<=(1 + 2 + (1350 -(605 + 728)))) then if (v80<=9) then if ((v80<=4) or (3514<=2892)) then if ((533==533) and (v80<=(1 + 0))) then if ((595<=3413) and (v80==(560 -(306 + 254)))) then if  not v77[v79[1 + 1 ]] then v71=v71 + (1 -(0 -0)) ;else v71=v79[1470 -(899 + 568) ];end else local v128=v79[1 + 1 + 0 ];do return v13(v77,v128,v128 + v79[3] );end end elseif (v80<=2) then v77[v79[4 -2 ]]=v61[v79[606 -(268 + 335) ]];elseif (v80>(293 -(60 + 230))) then v77[v79[574 -(426 + 146) ]]={};else do return;end end elseif ((3078>=2591) and (v80<=((3 -2) + 5))) then if (v80==(1461 -(282 + 1059 + 115))) then local v131=v79[813 -(569 + 242) ];local v132={};for v222=2 -1 , #v76 do local v223=v76[v222];for v236=0 + 0 , #v223 do local v237=1024 -(706 + 318) ;local v238;local v239;local v240;while true do if ((3199<4030) and (v237==0)) then v238=v223[v236];v239=v238[1252 -(721 + 530) ];v237=1;end if ((777<2078) and (v237==(1272 -(945 + 326)))) then v240=v238[4 -2 ];if ((v239==v77) and (v240>=v131)) then local v473=(0 -0) + 0 ;while true do if ((700 -(271 + 429))==v473) then v132[v240]=v239[v240];v238[1 + 0 + 0 ]=v132;break;end end end break;end end end end else local v133=v79[1502 -(1408 + 92) ];v77[v133](v77[v133 + ((1576 -(457 + 32)) -(196 + 265 + 625)) ]);end elseif (v80<=(1295 -((2395 -(832 + 570)) + 295))) then for v224=v79[2],v79[3] do v77[v224]=nil;end elseif ((1696<=2282) and (v80==(1 + 7))) then v77[v79[1173 -(418 + 753) ]]=v79[2 + 1 ]~=(0 + 0 + 0) ;else local v242=v68[v79[3]];local v243;local v244={};v243=v10({},{__index=function(v432,v433) local v434=0 + 0 ;local v435;while true do if ((v434==(0 + 0)) or (1761>=2462)) then v435=v244[v433];return v435[530 -(406 + 123) ][v435[1771 -(1749 + 20) ]];end end end,__newindex=function(v436,v437,v438) local v439=v244[v437];v439[1][v439[1 + 1 ]]=v438;end});for v441=1323 -(1249 + 73) ,v79[2 + 2 ] do v71=v71 + 1 ;local v442=v67[v71];if (v442[1146 -((1648 -1182) + 679) ]==(62 -36)) then v244[v441-(2 -(1 + 0)) ]={v77,v442[8 -5 ]};else v244[v441-1 ]={v60,v442[3]};end v76[ #v76 + (2 -1) ]=v244;end v77[v79[2]]=v29(v242,v243,v61);end elseif (v80<=(28 -14)) then if (v80<=(29 -18)) then if (v80==10) then if (v79[2]==v77[v79[(69 + 49) -(4 + 110) ]]) then v71=v71 + (585 -(57 + 527)) ;else v71=v79[3];end elseif ((4551>2328) and (v77[v79[1429 -(41 + 1386) ]]==v77[v79[107 -(17 + 86) ]])) then v71=v71 + 1 + 0 ;else v71=v79[3];end elseif (v80<=(26 -14)) then v77[v79[2]][v79[3]]=v79[657 -(232 + 421) ];elseif (v80==(37 -24)) then local v248=v79[168 -(122 + 44) ];local v249=v77[v79[(1894 -(1569 + 320)) -2 ]];v77[v248 + (3 -2) ]=v249;v77[v248]=v249[v79[4 + 0 ]];else local v253=v79[1 + 1 ];local v254={v77[v253](v13(v77,v253 + 1 ,v79[68 -(30 + 35) ]))};local v255=0 + 0 + 0 + 0 ;for v444=v253,v79[4] do v255=v255 + 1 ;v77[v444]=v254[v255];end end elseif (v80<=(1274 -(1043 + 214))) then if ((3825>=467) and (v80<=(56 -41))) then local v136=1212 -(323 + 889) ;local v137;while true do if (0==v136) then v137=v79[5 -3 ];v77[v137](v13(v77,v137 + (581 -(361 + 219)) ,v79[323 -(53 + 267) ]));break;end end elseif ((v80>(4 + 12)) or (2890==557)) then if v77[v79[415 -(15 + 398) ]] then v71=v71 + (983 -(18 + 964)) ;else v71=v79[11 -(26 -18) ];end else v60[v79[3]]=v77[v79[2]];end elseif (v80<=(11 + 7)) then local v138=v79[2 + 0 ];v77[v138]=v77[v138](v13(v77,v138 + (851 -(20 + 830)) ,v72));elseif (v80>(15 + 4)) then local v258=126 -(116 + 10) ;local v259;local v260;local v261;local v262;while true do if (((0 + 0)==v258) or (4770==2904)) then v259=v79[(1345 -(316 + 289)) -(542 + 196) ];v260,v261=v70(v77[v259](v13(v77,v259 + (1 -0) ,v79[1 + 2 ])));v258=(2 -1) + 0 ;end if (v258==(1 + 0 + 0)) then v72=(v261 + v259) -(2 -1) ;v262=0 -0 ;v258=(3006 -(666 + 787)) -(1126 + 425) ;end if ((v258==2) or (3903==4536)) then for v469=v259,v72 do v262=v262 + (406 -(118 + 287)) ;v77[v469]=v260[v262];end break;end end else local v263=v79[2];v77[v263]=v77[v263]();end elseif (v80<=30) then if ((4093<=4845) and (v80<=25)) then if ((1569<=3647) and (v80<=(86 -64))) then if ((v80>(1142 -(118 + 1003))) or (4046>=4927)) then local v140;v77[v79[5 -3 ]]=v79[380 -(142 + 235) ];v71=v71 + (4 -3) ;v79=v67[v71];v140=v79[2];v77[v140](v77[v140 + (426 -(360 + 65)) + 0 ]);v71=v71 + (978 -(517 + 36 + 424)) ;v79=v67[v71];v77[v79[2]]=v77[v79[3]];v71=v71 + 1 ;v79=v67[v71];v77[v79[2]]();v71=v71 + (1 -0) ;v79=v67[v71];v71=v79[3 + 0 ];else local v148;v77[v79[2 + 0 ]]=v77[v79[(256 -(79 + 175)) + 1 ]][v79[4]];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2 + 0 ]]=v77[v79[6 -3 ]];v71=v71 + ((2 -0) -(1 + 0)) ;v79=v67[v71];v77[v79[4 -2 ]]=v77[v79[8 -5 ]];v71=v71 + 1 ;v79=v67[v71];v148=v79[2];v77[v148](v13(v77,v148 + (1 -0) + 0 ,v79[14 -11 ]));v71=v71 + (754 -(239 + 514)) ;v79=v67[v71];v71=v79[3];end elseif (v80<=(9 + 14)) then local v157;local v158;local v159;local v160;v77[v79[1331 -(797 + 532) ]]=v77[v79[3]];v71=v71 + 1 + 0 ;v79=v67[v71];v160=v79[2];v159=v77[v79[2 + 1 ]];v77[v160 + 1 ]=v159;v77[v160]=v159[v79[9 -5 ]];v71=v71 + (1203 -(373 + 829)) ;v79=v67[v71];v77[v79[733 -(476 + 255) ]]=v79[1133 -(369 + 761) ];v71=v71 + (900 -(503 + 396)) + (181 -(92 + 89)) ;v79=v67[v71];v160=v79[2 -(0 -0) ];v158={v77[v160](v13(v77,v160 + 1 ,v79[5 -2 ]))};v157=238 -(64 + 174) ;for v226=v160,v79[1 + 3 ] do local v227=0;while true do if ((4623>=2787) and (v227==(0 -0))) then v157=v157 + (337 -(144 + 192)) ;v77[v226]=v158[v157];break;end end end v71=v71 + ((129 + 88) -(42 + (681 -507))) ;v79=v67[v71];v71=v79[3 + 0 ];elseif ((2234>=1230) and (v80>(3 + 17 + 4))) then v77[v79[1 + 1 ]]=v77[v79[1507 -(363 + 1141) ]][v79[1584 -(1183 + 397) ]];else local v267;local v268;v77[v79[5 -3 ]]=v79[3 + 0 ];v71=v71 + 1 + 0 ;v79=v67[v71];v268=v79[1977 -(1913 + 62) ];v77[v268](v77[v268 + 1 + 0 ]);v71=v71 + (2 -1) ;v79=v67[v71];v77[v79[1935 -((1288 -723) + 1368) ]]=v61[v79[11 -8 ]];v71=v71 + (1662 -(1477 + 184)) ;v79=v67[v71];v77[v79[2 -0 ]]=v77[v79[3]][v79[4]];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2 + 0 ]]=v77[v79[3]][v79[860 -(564 + 292) ]];v71=v71 + (1 -0) ;v79=v67[v71];v268=v79[5 -3 ];v267=v77[v79[3]];v77[v268 + (305 -(244 + 60)) ]=v267;v77[v268]=v267[v79[2 + 2 + (0 -0) ]];v71=v71 + 1 ;v79=v67[v71];v77[v79[2]]=v79[479 -(41 + 435) ];v71=v71 + (1002 -(938 + 63)) ;v79=v67[v71];v268=v79[2 + 0 ];v77[v268](v13(v77,v268 + (1126 -(936 + 24 + 165)) ,v79[3]));v71=v71 + 1 + 0 ;v79=v67[v71];v71=v79[3];end elseif (v80<=(1640 -(1565 + 48))) then if (v80==26) then v77[v79[2 + 0 ]]=v77[v79[1141 -(782 + 356) ]];else local v175;local v176,v177;local v178;local v179;v77[v79[(409 -140) -(176 + 91) ]]=v61[v79[7 -4 ]];v71=v71 + (1 -0) ;v79=v67[v71];v179=v79[1094 -(975 + 117) ];v178=v77[v79[1878 -((1401 -(485 + 759)) + 1718) ]];v77[v179 + 1 ]=v178;v77[v179]=v178[v79[4 + 0 ]];v71=v71 + (3 -2) ;v79=v67[v71];v77[v79[6 -4 ]]=v77[v79[1021 -(697 + 321) ]];v71=v71 + (2 -1) ;v79=v67[v71];v179=v79[3 -1 ];v176,v177=v70(v77[v179](v13(v77,v179 + (2 -(2 -1)) ,v79[2 + 1 ])));v72=(v177 + v179) -(1 -0) ;v175=0 -0 ;for v228=v179,v72 do v175=v175 + ((2417 -(442 + 747)) -(322 + 905)) ;v77[v228]=v176[v175];end v71=v71 + 1 ;v79=v67[v71];v179=v79[613 -(602 + (1144 -(832 + 303))) ];v77[v179]=v77[v179](v13(v77,v179 + 1 ,v72));v71=v71 + 1 ;v79=v67[v71];v77[v79[1191 -(449 + 740) ]]();v71=v71 + (873 -(826 + 46)) ;v79=v67[v71];v77[v79[949 -(245 + 702) ]]=v79[9 -6 ]~=(0 + 0) ;v71=v71 + (1899 -(260 + 1638)) ;v79=v67[v71];v60[v79[443 -(382 + 58) ]]=v77[v79[2]];v71=v71 + (3 -2) ;v79=v67[v71];v71=v79[3 + 0 ];end elseif (v80<=28) then if ((v77[v79[2]]==v79[8 -4 ]) or (343==1786)) then v71=v71 + (2 -1) ;else v71=v79[1208 -(902 + 303) ];end elseif (v80>(63 -34)) then local v289;local v290;v77[v79[2]]=v79[(952 -(88 + 858)) -3 ];v71=v71 + 1 + 0 ;v79=v67[v71];v290=v79[1692 -(1121 + 569) ];v77[v290](v77[v290 + 1 ]);v71=v71 + 1 ;v79=v67[v71];v77[v79[216 -(22 + 192) ]]=v61[v79[(210 + 476) -(483 + 200) ]];v71=v71 + (1464 -(1404 + 59)) ;v79=v67[v71];v77[v79[5 -3 ]]=v77[v79[3 -0 ]][v79[769 -(468 + 297) ]];v71=v71 + ((466 + 97) -(334 + 228)) ;v79=v67[v71];v77[v79[6 -4 ]]=v77[v79[6 -3 ]][v79[6 -(1 + 1) ]];v71=v71 + 1 + 0 ;v79=v67[v71];v290=v79[238 -(141 + 95) ];v289=v77[v79[3 + 0 ]];v77[v290 + (2 -1) ]=v289;v77[v290]=v289[v79[9 -(794 -(766 + 23)) ]];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[5 -3 ]]=v79[3 + 0 ];v71=v71 + 1 + 0 ;v79=v67[v71];v290=v79[2 -0 ];v77[v290](v13(v77,v290 + 1 ,v79[2 + 1 ]));v71=v71 + (164 -(92 + 71)) ;v79=v67[v71];v77[v79[1 + 1 ]]=v79[3];v71=v71 + (1 -0) ;v79=v67[v71];v71=v79[768 -(574 + (942 -751)) ];else local v311=v79[2 + 0 ];local v312={v77[v311](v77[v311 + 1 + 0 ])};local v313=849 -(254 + 595) ;for v448=v311,v79[4] do v313=v313 + (127 -((74 -19) + 71)) ;v77[v448]=v312[v313];end end elseif (v80<=(45 -(26 -16))) then if ((2570>2409) and (v80<=32)) then if (v80==31) then v77[v79[1792 -(573 + 1217) ]]=v77[v79[3]][v77[v79[10 -(20 -14) ]]];else v77[v79[1 + (1074 -(1036 + 37)) ]]=v60[v79[(3 + 1) -1 ]];end elseif ((v80<=((1892 -920) -(714 + 177 + 48))) or (2609>=3234)) then local v200;local v201,v202;local v203;local v204;v77[v79[5 -(1483 -(641 + 839)) ]]=v61[v79[3 -0 ]];v71=v71 + 1 + 0 ;v79=v67[v71];v204=v79[2 -0 ];v203=v77[v79[3]];v77[v204 + (807 -(118 + 688)) ]=v203;v77[v204]=v203[v79[4]];v71=v71 + (49 -(25 + 23)) ;v79=v67[v71];v77[v79[1 + 1 ]]=v79[(2802 -(910 + 3)) -(927 + 959) ];v71=v71 + (3 -2) ;v79=v67[v71];v77[v79[4 -2 ]]=v79[1687 -(1466 + 218) ]~=(732 -(16 + 716)) ;v71=v71 + ((1 + 0) -0) ;v79=v67[v71];v204=v79[99 -(11 + 86) ];v201,v202=v70(v77[v204](v13(v77,v204 + (2 -1) ,v79[288 -(175 + 110) ])));v72=(v202 + v204) -1 ;v200=(1148 -(556 + 592)) -0 ;for v231=v204,v72 do local v232=0 -0 ;while true do if ((v232==(1796 -(179 + 324 + 1293))) or (3033>=4031)) then v200=v200 + (2 -(809 -(329 + 479))) ;v77[v231]=v201[v200];break;end end end v71=v71 + 1 + 0 ;v79=v67[v71];v204=v79[1063 -(810 + 251) ];v77[v204]=v77[v204](v13(v77,v204 + 1 + 0 ,v72));v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2]]();v71=v71 + (855 -(174 + 680)) + 0 ;v79=v67[v71];v77[v79[2]]=v61[v79[(1841 -1305) -(43 + 490) ]];v71=v71 + (734 -(711 + 22)) ;v79=v67[v71];if (v77[v79[7 -5 ]] or (1401==4668)) then v71=v71 + (1 -0) ;else v71=v79[(616 + 246) -(240 + 619) ];end elseif (v80>34) then local v315;local v316;v316=v79[2];v315=v77[v79[1 + 2 ]];v77[v316 + (1 -0) ]=v315;v77[v316]=v315[v79[743 -(396 + 343) ]];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2]]=v60[v79[3]];v71=v71 + (1745 -(1344 + 400)) ;v79=v67[v71];v316=v79[407 -(255 + 150) ];v77[v316]=v77[v316](v13(v77,v316 + 1 + 0 + 0 ,v79[2 + 1 ]));v71=v71 + (4 -3) ;v79=v67[v71];v77[v79[6 -4 ]]=v77[v79[1742 -(404 + (2812 -(29 + 1448))) ]];v71=v71 + 1 ;v79=v67[v71];v77[v79[(1797 -(135 + 1254)) -(183 + 223) ]]=v61[v79[3 -0 ]];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[1 + 1 ]]=v77[v79[340 -((37 -27) + 327) ]][v79[3 + 1 ]];v71=v71 + (339 -(118 + (1027 -807))) ;v79=v67[v71];v77[v79[1 + 0 + 1 ]]=v77[v79[452 -(108 + 341) ]][v79[2 + 2 ]];v71=v71 + (4 -3) ;v79=v67[v71];v77[v79[2]]=v77[v79[1530 -(389 + 1138) ]][v79[1497 -(711 + 782) ]];v71=v71 + (1 -(574 -(102 + 472))) ;v79=v67[v71];v77[v79[471 -(255 + 15 + 199) ]]=v79[1 + 2 ];v71=v71 + (1820 -(322 + 258 + 1156 + 83)) ;v79=v67[v71];v71=v79[3];else v77[v79[5 -3 ]]();end elseif (v80<=(37 + 1)) then if (v80<=(2 + 34)) then local v220=v79[1 + 1 ];v77[v220]=v77[v220](v13(v77,v220 + 1 ,v79[7 -4 ]));elseif (v80>(23 + 14)) then v71=v79[1170 -((2190 -(320 + 1225)) + 522) ];else v77[v79[1792 -(1010 + 780) ]]=v79[3 + (0 -0) ];end elseif (v80<=(185 -146)) then do return v77[v79[2]];end elseif (v80==(117 -77)) then local v341=v79[1838 -(640 + 405 + 791) ];local v342=v79[9 -5 ];local v343=v341 + ((1466 -(157 + 1307)) -0) ;local v344={v77[v341](v77[v341 + (1575 -(1281 + 293)) ],v77[v343])};for v451=267 -(28 + 238) ,v342 do v77[v343 + v451 ]=v344[v451];end local v345=v344[2 -1 ];if v345 then local v459=0;while true do if (v459==(1559 -(1381 + 178))) then v77[v343]=v345;v71=v79[1 + 2 + 0 ];break;end end else v71=v71 + 1 + 0 ;end else v77[v79[1 + 1 ]][v79[10 -7 ]]=v79[3 + 1 ];v71=v71 + (471 -(381 + (157 -68))) ;v79=v67[v71];v77[v79[1 + 1 + 0 ]][v79[3 + 0 ]]=v79[6 -2 ];v71=v71 + (1157 -(1074 + 82)) ;v79=v67[v71];v77[v79[2]][v79[6 -3 ]]=v79[4];v71=v71 + (1785 -(214 + 1570)) ;v79=v67[v71];v77[v79[(3611 -2154) -(990 + 465) ]][v79[3]]=v79[2 + 2 ];v71=v71 + 1 ;v79=v67[v71];v77[v79[1 + (1027 -(834 + 192)) ]][v79[1 + 2 + 0 ]]=v79[15 -11 ];v71=v71 + (1727 -(1668 + 58)) ;v79=v67[v71];v77[v79[2]][v79[629 -(132 + 380 + 114) ]]=v79[10 -6 ];v71=v71 + (1 -0) ;v79=v67[v71];v77[v79[2]][v79[3]]=v79[13 -9 ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2]][v79[1 + 2 ]]=v79[1 + 3 + 0 ];v71=v71 + (3 -2) ;v79=v67[v71];v77[v79[2]][v79[3]]=v79[1998 -(109 + 1885) ];v71=v71 + (1470 -(1269 + 200)) ;v79=v67[v71];v77[v79[(4 -1) -1 ]][v79[818 -(98 + 717) ]]=v79[830 -(802 + 24) ];v71=v71 + (1 -0) ;v79=v67[v71];v77[v79[2 -0 ]][v79[(305 -(300 + 4)) + 2 ]]=v79[4 + 0 ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[1 + 1 ]][v79[8 -5 ]]=v79[13 -9 ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2]][v79[2 + 1 ]]=v79[4 + 0 ];v71=v71 + 1 + 0 + 0 ;v79=v67[v71];v77[v79[1 + 1 ]][v79[3]]=v79[4];v71=v71 + (1434 -(797 + 636)) ;v79=v67[v71];v77[v79[2]][v79[(36 -22) -11 ]]=v79[1623 -(1427 + 192) ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[4 -2 ]][v79[3 + 0 ]]=v79[4];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2]][v79[3]]=v79[4];v71=v71 + (327 -(192 + 134)) ;v79=v67[v71];v77[v79[1278 -(316 + 960) ]][v79[2 + 1 ]]=v79[4 + 0 ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[7 -5 ]][v79[554 -(83 + 468) ]]=v79[1810 -(1202 + 604) ];v71=v71 + 1 ;v79=v67[v71];v77[v79[2]][v79[13 -(372 -(112 + 250)) ]]=v79[6 -2 ];v71=v71 + (2 -1) ;v79=v67[v71];v77[v79[327 -(18 + 27 + 280) ]][v79[3 + 0 ]]=v79[4 + 0 ];v71=v71 + 1 ;v79=v67[v71];v77[v79[1 + 1 ]][v79[2 + 1 ]]=v79[1 + 3 ];v71=v71 + (1 -0) ;v79=v67[v71];v77[v79[2]][v79[3]]=v79[1915 -(340 + (3935 -2364)) ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[1774 -(1733 + 39) ]][v79[8 -5 ]]=v79[1038 -(125 + 909) ];v71=v71 + 1 ;v79=v67[v71];v77[v79[1950 -(1096 + 852) ]][v79[2 + 1 ]]=v79[4];v71=v71 + (1 -0) ;v79=v67[v71];v77[v79[2 + 0 ]][v79[515 -(409 + 103) ]]=v79[240 -(46 + 190) ];v71=v71 + (96 -(51 + 26 + 18)) ;v79=v67[v71];v77[v79[2]][v79[1 + 2 ]]=v79[1321 -(1114 + 203) ];v71=v71 + 1 ;v79=v67[v71];v77[v79[728 -(228 + 498) ]][v79[3]]=v79[4];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2 + 0 ]][v79[2 + 1 ]]=v79[667 -(174 + 489) ];v71=v71 + 1 ;v79=v67[v71];v77[v79[5 -3 ]][v79[3]]=v79[(1428 + 481) -(830 + 1075) ];v71=v71 + (525 -(303 + 221)) ;v79=v67[v71];v77[v79[1271 -(231 + 1038) ]][v79[3]]=v79[4];v71=v71 + 1 ;v79=v67[v71];v77[v79[2 + 0 ]][v79[1165 -(171 + 991) ]]=v79[16 -12 ];v71=v71 + ((1 + 1) -1) ;v79=v67[v71];v77[v79[4 -2 ]][v79[3 + 0 + 0 ]]=v79[13 -9 ];v71=v71 + (2 -1) ;v79=v67[v71];v77[v79[2]][v79[4 -1 ]]=v79[12 -8 ];v71=v71 + (1249 -(111 + 1137)) ;v79=v67[v71];v77[v79[160 -(91 + 67) ]][v79[8 -5 ]]=v79[1 + 3 ];v71=v71 + (524 -(423 + 100)) ;v79=v67[v71];v77[v79[1 + 1 ]][v79[7 -4 ]]=v79[3 + 1 ];v71=v71 + (1415 -(1001 + 413)) ;v79=v67[v71];v77[v79[(1723 -950) -(326 + (1327 -(244 + 638))) ]][v79[13 -10 ]]=v79[8 -4 ];v71=v71 + (2 -1) ;v79=v67[v71];v77[v79[713 -(530 + 181) ]][v79[884 -((1307 -(627 + 66)) + (795 -528)) ]]=v79[4];v71=v71 + (33 -(19 + 13)) ;v79=v67[v71];v77[v79[2]][v79[3]]=v79[4];v71=v71 + (1 -0) ;v79=v67[v71];v77[v79[4 -2 ]][v79[8 -5 ]]=v79[2 + 2 ];v71=v71 + (1 -0) ;v79=v67[v71];v77[v79[2]][v79[6 -3 ]]=v79[1816 -(1293 + 519) ];v71=v71 + ((603 -(512 + 90)) -0) ;v79=v67[v71];v77[v79[4 -2 ]][v79[5 -2 ]]=v79[17 -13 ];v71=v71 + (2 -1) ;v79=v67[v71];v77[v79[2]][v79[2 + 1 ]]=v79[1910 -(1665 + 241) ];v71=v71 + 1 ;v79=v67[v71];v77[v79[2]][v79[(718 -(373 + 344)) + 2 ]]=v79[9 -5 ];v71=v71 + 1 ;v79=v67[v71];v77[v79[2]][v79[1 + 0 + 2 ]]=v79[1 + 1 + (5 -3) ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[1098 -(709 + 387) ]][v79[1861 -(673 + 1185) ]]=v79[11 -7 ];v71=v71 + (3 -2) ;v79=v67[v71];v77[v79[2 -0 ]][v79[3]]=v79[4];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2 + 0 ]][v79[3]]=v79[5 -1 ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[3 -1 ]][v79[(8 -3) -2 ]]=v79[1884 -(446 + 1434) ];v71=v71 + (1284 -(1040 + 243)) ;v79=v67[v71];v77[v79[2]][v79[8 -5 ]]=v79[4];v71=v71 + (1848 -(559 + 1288)) ;v79=v67[v71];v77[v79[1933 -(609 + 1322) ]][v79[457 -(13 + 441) ]]=v79[14 -10 ];v71=v71 + (2 -1) ;v79=v67[v71];v77[v79[9 -7 ]][v79[1 + 2 ]]=v79[14 -10 ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[1 + 1 ]][v79[3]]=v79[11 -7 ];v71=v71 + (1100 -(35 + 1064)) + 0 ;v79=v67[v71];v77[v79[2]][v79[4 -1 ]]=v79[3 + 1 ];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[2 + 0 + 0 ]][v79[3 + 0 ]]=v79[4 + 0 ];v71=v71 + ((928 -494) -(153 + 2 + 278)) ;v79=v67[v71];v77[v79[5 -3 ]][v79[3]]=v79[4 + 0 ];v71=v71 + 1 ;v79=v67[v71];v77[v79[1238 -(298 + 938) ]][v79[3]]=v79[2 + 2 ];v71=v71 + 1 ;v79=v67[v71];v77[v79[2 + 0 ]][v79[3 + 0 ]]=v79[3 + 1 ];v71=v71 + (1 -0) ;v79=v67[v71];v77[v79[2 + 0 ]]=v77[v79[670 -(89 + 578) ]];v71=v71 + 1 + 0 ;v79=v67[v71];v77[v79[3 -1 ]]=v79[1052 -(572 + 477) ];v71=v71 + (1260 -(233 + 1026)) + 0 ;v79=v67[v71];v77[v79[2 + 0 ]]=v79[1 + 2 ];end v71=v71 + (87 -(84 + 2)) ;break;end if (v88==(0 -0)) then v79=v67[v71];v80=v79[1 + 0 ];v88=843 -((2163 -(636 + 1030)) + 345) ;end end end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
