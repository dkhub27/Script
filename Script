local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v87=v5(v82,v19);v19=nil;return v87;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/(((882 -(282 + 595)) -3)^(v32-1)))%((5 -3)^(((v33-(1 -0)) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v83-(v83%(932 -(857 + 74))) ;else local v84=(570 -(367 + 201))^(v32-(928 -((1851 -(1523 + 114)) + 641 + 72))) ;return (((v31%(v84 + v84))>=v84) and (1 + 0)) or (0 + (0 -0)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * (1114 -858)) + v35 ;end local function v23() local v37=117 -((382 -(87 + 263)) + 85) ;local v38;local v39;local v40;local v41;while true do if (v37==((180 -(67 + 113)) + 0)) then v38,v39,v40,v41=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (961 -(892 + 65)) ;v37=2 -1 ;end if (v37==(1 -0)) then return (v41 * 16777216) + (v40 * 65536) + (v39 * (469 -213)) + v38 ;end end end local function v24() local v42=v23();local v43=v23();local v44=1;local v45=(v20(v43,1 + 0 + (791 -(368 + 423)) ,49 -29 ) * ((2 + 0)^32)) + v42 ;local v46=v20(v43,83 -62 ,97 -66 );local v47=((v20(v43,984 -((820 -(10 + 8)) + 150) )==(2 -1)) and  -1) or (1 -0) ;if (v46==(0 + 0)) then if (v45==(997 -(915 + 82))) then return v47 * 0 ;else v46=2 -1 ;v44=0;end elseif (v46==(1193 + 854)) then return ((v45==(0 -0)) and (v47 * ((1188 -(1069 + 118))/(0 -0)))) or (v47 * NaN) ;end return v8(v47,v46-(2237 -1214) ) * (v44 + (v45/((1 + 1)^(92 -40)))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(0 -0)) then return "";end end v49=v3(v16,v18,(v18 + v48) -(443 -(416 + 26)) );v18=v18 + v48 ;local v50={};for v65=3 -2 , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 258 -(190 + 68) ;end)();while true do if (v67==(0 -0)) then if (v51~=(1850 -(1409 + 441))) then else local v94=(function() return 0;end)();local v95=(function() return;end)();while true do if (v94~=(718 -(15 + 703))) then else v95=(function() return 0 + 0 ;end)();while true do if ((438 -(262 + 176))~=v95) then else v52=(function() return function(v112,v113,v114) local v115=(function() return 1721 -(345 + 1376) ;end)();local v116=(function() return;end)();while true do if (v115==(688 -(198 + 490))) then v116=(function() return 0;end)();while true do if (v116==(0 -0)) then local v300=(function() return 0;end)();while true do if (v300==0) then v112[v113-#" " ]=(function() return v114();end)();return v112,v113,v114;end end end end break;end end end;end)();v53=(function() return {};end)();v95=(function() return 2 -1 ;end)();end if (v95==1) then v54=(function() return {};end)();v51=(function() return 1;end)();break;end end break;end end end if (v51~=(1209 -(696 + 510))) then else for v97= #"~",v23() do local v98=(function() return v21();end)();if (v20(v98, #"!", #"!")==(0 -0)) then local v100=(function() return 1262 -(1091 + 171) ;end)();local v101=(function() return;end)();local v102=(function() return;end)();local v103=(function() return;end)();while true do if (v100~=0) then else local v110=(function() return 0 + 0 ;end)();while true do if (v110==(3 -2)) then v100=(function() return 1;end)();break;end if (v110~=0) then else v101=(function() return v20(v98,2, #"nil");end)();v102=(function() return v20(v98, #".com",6);end)();v110=(function() return 3 -2 ;end)();end end end if (1~=v100) then else v103=(function() return {v22(),v22(),nil,nil};end)();if (v101==0) then local v117=(function() return 374 -(123 + 251) ;end)();local v118=(function() return;end)();while true do if ((0 -0)~=v117) then else v118=(function() return 698 -(208 + 490) ;end)();while true do if ((0 + 0)==v118) then v103[ #"91("]=(function() return v22();end)();v103[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v101== #".") then v103[ #"gha"]=(function() return v23();end)();elseif (v101==(1 + 1)) then v103[ #"xxx"]=(function() return v23() -((838 -(660 + 176))^16) ;end)();elseif (v101~= #"asd") then else local v303=(function() return 0 + 0 ;end)();while true do if (v303==(202 -(14 + 188))) then v103[ #"asd"]=(function() return v23() -(2^(691 -(534 + 141))) ;end)();v103[ #"xnxx"]=(function() return v22();end)();break;end end end v100=(function() return 2;end)();end if (v100~=(2 + 1)) then else if (v20(v102, #"xxx", #"91(")~= #"<") then else v103[ #".dev"]=(function() return v58[v103[ #"0313"]];end)();end v53[v97]=(function() return v103;end)();break;end if (2~=v100) then else if (v20(v102, #":", #"[")== #"}") then v103[2 + 0 ]=(function() return v58[v103[2 + 0 ]];end)();end if (v20(v102,2,2)~= #">") then else v103[ #"19("]=(function() return v58[v103[ #"91("]];end)();end v100=(function() return 3;end)();end end end end for v99= #"{",v23() do v54,v99,v28=(function() return v52(v54,v99,v28);end)();end return v56;end v67=(function() return 1;end)();end if (v67~=(1 -0)) then else if (v51~=2) then else local v96=(function() return 0 -0 ;end)();while true do if (v96~=(2 -1)) then else v56[ #"gha"]=(function() return v21();end)();v51=(function() return 2 + 1 ;end)();break;end if (v96~=(0 + 0)) then else v58=(function() return {};end)();for v105= #"\\",v57 do local v106=(function() return 396 -(115 + 281) ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (0~=v106) then else v107=(function() return 0 -0 ;end)();v108=(function() return nil;end)();v106=(function() return 1;end)();end if (1~=v106) then else v109=(function() return nil;end)();while true do if (v107~=0) then else local v123=(function() return 0 + 0 ;end)();while true do if (v123==(2 -1)) then v107=(function() return 3 -2 ;end)();break;end if (v123==0) then v108=(function() return v21();end)();v109=(function() return nil;end)();v123=(function() return 868 -(550 + 317) ;end)();end end end if (v107~=1) then else if (v108== #".") then v109=(function() return v21()~=(0 -0) ;end)();elseif (v108==(2 -0)) then v109=(function() return v24();end)();elseif (v108== #"asd") then v109=(function() return v25();end)();end v58[v105]=(function() return v109;end)();break;end end break;end end end v96=(function() return 2 -1 ;end)();end end end if (v51==(286 -(134 + 151))) then v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v51=(function() return 3 -1 ;end)();end break;end end end end local function v29(v59,v60,v61) local v62=v59[1 -0 ];local v63=v59[1992 -(582 + 1408) ];local v64=v59[10 -7 ];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=1 -(0 + 0) ;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -(1825 -((1532 -(10 + 327)) + 439 + 190)) ;local v77={};local v78={};for v85=0 -0 ,v76 do if (v85>=v70) then v74[v85-v70 ]=v75[v85 + (242 -(187 + 54)) ];else v78[v85]=v75[v85 + (781 -(162 + 618)) ];end end local v79=(v76-v70) + 1 + (338 -(118 + 220)) ;local v80;local v81;while true do local v86=0 + 0 + 0 ;while true do if (v86==(0 -0)) then v80=v68[v72];v81=v80[(450 -(108 + 341)) -0 ];v86=1;end if (v86==(1 + 0)) then if ((4228==4228) and (v81<=31)) then if (v81<=(1651 -(1373 + 263))) then if ((v81<=(1007 -(451 + 549))) or (1313>4277)) then if ((2587<3174) and (v81<=(1 + 0 + 2))) then if ((v81<=1) or (4120<=2198)) then if ((v81>(0 -0)) or (1596==858)) then local v125=v80[2];local v126={v78[v125](v13(v78,v125 + (1385 -(746 + 638)) ,v80[2 + 1 ]))};local v127=0 -0 ;for v232=v125,v80[345 -((921 -703) + 123) ] do v127=v127 + (1582 -((3028 -(711 + 782)) + 46)) ;v78[v232]=v126[v127];end else v78[v80[2 + 0 ]]=v78[v80[5 -2 ]][v80[1 + 3 ]];end elseif (v81>2) then local v130=v69[v80[563 -(306 + 254) ]];local v131;local v132={};v131=v10({},{__index=function(v235,v236) local v237=0 + 0 ;local v238;while true do if ((0 -0)==v237) then v238=v132[v236];return v238[1468 -(899 + 568) ][v238[2]];end end end,__newindex=function(v239,v240,v241) local v242=v132[v240];v242[1 + 0 ][v242[4 -2 ]]=v241;end});for v244=604 -(268 + 335) ,v80[294 -(60 + 75 + 155) ] do v72=v72 + (573 -(426 + 146)) ;local v245=v68[v72];if (v245[1 + 0 ]==(1466 -(282 + 1174))) then v132[v244-(812 -(569 + 242)) ]={v78,v245[1027 -(706 + 318) ]};else v132[v244-(1252 -(721 + 530)) ]={v60,v245[3 + 0 ]};end v77[ #v77 + ((26 + 675) -(271 + 429)) ]=v132;end v78[v80[1 + 1 + (0 -0) ]]=v29(v130,v131,v61);else v78[v80[1502 -(1408 + 92) ]]=v60[v80[1089 -(461 + 625) ]];end elseif ((3220==3220) and (v81<=5)) then if (v81>(1292 -(993 + 295))) then local v136=v80[2];local v137={};for v247=1 + 0 , #v77 do local v248=0 + 0 ;local v249;while true do if (v248==(1171 -((1585 -(645 + 522)) + 753))) then v249=v77[v247];for v335=0 + 0 , #v249 do local v336=v249[v335];local v337=v336[1 + 0 ];local v338=v336[1 + 1 ];if ((v337==v78) and (v338>=v136)) then local v353=(1790 -(1010 + 780)) + 0 ;while true do if ((529 -(406 + 0 + 123))==v353) then v137[v338]=v337[v338];v336[1770 -(1749 + (95 -75)) ]=v137;break;end end end end break;end end end elseif (v78[v80[1 + 1 ]]==v80[1326 -(1249 + 73) ]) then v72=v72 + 1 + 0 ;else v72=v80[1148 -(466 + 679) ];end elseif ((v81>(14 -8)) or (1402>3620)) then v60[v80[8 -5 ]]=v78[v80[1902 -(106 + 1794) ]];elseif v78[v80[1 + 1 ]] then v72=v72 + 1 + 0 ;else v72=v80[8 -5 ];end elseif (v81<=(29 -(52 -34))) then if ((2574==2574) and (v81<=(123 -(4 + 110)))) then if (v81>((2428 -(1045 + 791)) -(57 + 527))) then if  not v78[v80[1429 -(41 + 1386) ]] then v72=v72 + 1 ;else v72=v80[106 -(17 + 86) ];end elseif ((1798<2757) and (v78[v80[2 + 0 ]]==v78[v80[4]])) then v72=v72 + 1 ;else v72=v80[6 -3 ];end elseif (v81>(28 -18)) then do return v78[v80[168 -(122 + 44) ]];end else v78[v80[2]]=v78[v80[3]];end elseif (v81<=(22 -9)) then if (v81==(39 -27)) then v78[v80[2 + 0 ]]=v60[v80[1 + 2 ]];else local v144=v80[3 -1 ];local v145=v78[v80[68 -(30 + (88 -53)) ]];v78[v144 + (1 -0) + 0 ]=v145;v78[v144]=v145[v80[1261 -((1548 -(351 + 154)) + (1788 -(1281 + 293))) ]];end elseif ((v81>(52 -38)) or (377>2604)) then local v149=v80[1214 -(323 + 889) ];v78[v149]=v78[v149](v13(v78,v149 + 1 ,v80[3]));else local v151=v80[5 -3 ];local v152=v80[584 -(361 + 219) ];local v153=v151 + (322 -(53 + 267)) ;local v154={v78[v151](v78[v151 + (414 -(15 + 398)) ],v78[v153])};for v250=1,v152 do v78[v153 + v250 ]=v154[v250];end local v155=v154[(1249 -(28 + 238)) -(18 + (2153 -1189)) ];if v155 then v78[v153]=v155;v72=v80[11 -8 ];else v72=v72 + 1 + 0 ;end end elseif ((568<911) and (v81<=23)) then if (v81<=19) then if ((3285<4228) and (v81<=17)) then if (v81>(11 + 5)) then local v156=v80[852 -(20 + (2389 -(1381 + 178))) ];v78[v156](v13(v78,v156 + 1 ,v80[3 + 0 + 0 + 0 ]));else local v157=126 -(116 + 10) ;local v158;while true do if (v157==0) then v158=v80[1 + 1 ];v78[v158]=v78[v158]();break;end end end elseif (v81>(2 + (55 -39))) then local v159=(383 + 355) -(542 + 196) ;local v160;while true do if (v159==(0 -0)) then v160=v80[(471 -(381 + 89)) + 1 ];v78[v160]=v78[v160]();break;end end else local v161=v80[2];v78[v161](v13(v78,v161 + 1 ,v80[3 + 0 ]));end elseif ((3916>3328) and (v81<=(11 + 10))) then if (v81>(8 + 12)) then local v162=0 -0 ;local v163;while true do if (v162==(0 -0)) then v163=v80[2 + 0 ];v78[v163]=v78[v163](v13(v78,v163 + ((2657 -1105) -(1126 + 425)) ,v73));break;end end else local v164=v80[2];local v165=v78[v80[408 -(118 + 287) ]];v78[v164 + (3 -2) ]=v165;v78[v164]=v165[v80[(2281 -(1074 + 82)) -(118 + 1003) ]];end elseif (v81==(64 -42)) then v78[v80[379 -(142 + 235) ]]=v80[13 -10 ]~=(0 + 0) ;else local v170=977 -(553 + 424) ;local v171;local v172;local v173;while true do if (v170==(1 -0)) then v173=0 + 0 ;for v322=v171,v80[4 + 0 ] do v173=v173 + 1 ;v78[v322]=v172[v173];end break;end if ((2500<3839) and (v170==(0 + 0))) then v171=v80[1 + 1 ];v172={v78[v171](v78[v171 + 1 ])};v170=2 -(1 -0) ;end end end elseif (v81<=(75 -48)) then if ((507==507) and (v81<=25)) then if (v81>(53 -29)) then if (v80[1 + 1 ]==v78[v80[4]]) then v72=v72 + (4 -3) ;else v72=v80[756 -(239 + 514) ];end else v78[v80[1 + 1 ]]=v80[(3116 -(214 + 1570)) -(797 + 532) ];end elseif (v81==26) then v78[v80[2 + 0 ]]();elseif ((240<=3165) and (v78[v80[1 + 1 ]]==v80[9 -5 ])) then v72=v72 + (1203 -(373 + 829)) ;else v72=v80[734 -(476 + (1710 -(990 + 465))) ];end elseif (v81<=(1159 -(153 + 216 + 761))) then if (v81>28) then do return;end else v78[v80[2 + 0 ]]=v78[v80[5 -2 ]][v78[v80[7 -3 ]]];end elseif ((834>=805) and (v81>((117 + 151) -(64 + 174)))) then v78[v80[1 + 1 ]]={};else v78[v80[2 -0 ]]=v80[3]~=0 ;end elseif (v81<=(383 -(144 + 192))) then if (v81<=(255 -(42 + 170 + 4))) then if (v81<=(27 + 8)) then if (v81<=(28 + 5)) then if (v81==(14 + (70 -52))) then v72=v80[3];else v72=v80[1507 -(363 + 1141) ];end elseif (v81==(1614 -(1183 + 397))) then local v182=0;local v183;while true do if ((v182==(0 -0)) or (3812<2316)) then v183=v80[2 + 0 ];do return v13(v78,v183,v183 + v80[(1729 -(1668 + 58)) + 0 ] );end break;end end else local v184=v80[1977 -(1913 + 62) ];local v185=v80[3 + 1 ];local v186=v184 + (5 -3) ;local v187={v78[v184](v78[v184 + (3 -2) ],v78[v186])};for v253=1662 -(1477 + 184) ,v185 do v78[v186 + v253 ]=v187[v253];end local v188=v187[1 -0 ];if v188 then local v284=0;while true do if (v284==((626 -(512 + 114)) + 0)) then v78[v186]=v188;v72=v80[859 -(564 + 292) ];break;end end else v72=v72 + (1 -0) ;end end elseif (v81<=(111 -74)) then if ((v81>36) or (2652<=1533)) then local v189=v80[2];local v190,v191=v71(v78[v189](v13(v78,v189 + (305 -(244 + 60)) ,v80[3 + 0 ])));v73=(v191 + v189) -(477 -(41 + 435)) ;local v192=1001 -(938 + 63) ;for v256=v189,v73 do v192=v192 + 1 ;v78[v256]=v190[v192];end else do return v78[v80[2 + 0 ]];end end elseif ((v81>(1163 -(936 + 189))) or (3598<1460)) then local v193=0 + 0 ;local v194;local v195;local v196;while true do if (v193==(1614 -(1565 + 48))) then v196=0;for v325=v194,v80[(7 -4) + 1 ] do v196=v196 + (1 -0) ;v78[v325]=v195[v196];end break;end if ((1138 -(782 + 356))==v193) then v194=v80[2];v195={v78[v194](v13(v78,v194 + 1 ,v80[3]))};v193=2 -(3 -2) ;end end else local v197=v80[2 -0 ];local v198={};for v259=1093 -(975 + 117) , #v77 do local v260=v77[v259];for v285=1875 -(157 + 1718) , #v260 do local v286=0 + 0 ;local v287;local v288;local v289;while true do if (v286==(3 -2)) then v289=v287[2];if ((v288==v78) and (v289>=v197)) then local v354=0 -0 ;while true do if (v354==0) then v198[v289]=v288[v289];v287[1]=v198;break;end end end break;end if (v286==0) then v287=v260[v285];v288=v287[1019 -(697 + 321) ];v286=1;end end end end end elseif (v81<=(21 + 22)) then if ((v81<=(111 -70)) or (4116<1192)) then if ((v81==(84 -44)) or (3377<=903)) then v78[v80[4 -2 ]]=v78[v80[2 + 1 ]][v78[v80[(2 + 4) -2 ]]];else local v201=v80[2];v78[v201](v78[v201 + 1 ]);end elseif ((3976>=439) and (v81>42)) then local v202=0 -0 ;local v203;local v204;local v205;while true do if ((3752==3752) and (v202==(1227 -(322 + 905)))) then v203=v80[613 -(602 + 8 + 1) ];v204={v78[v203](v78[v203 + (873 -(826 + 46)) ])};v202=948 -((2239 -(109 + 1885)) + 702) ;end if (v202==((1472 -(1269 + 200)) -2)) then v205=(0 -0) + 0 ;for v328=v203,v80[1902 -(260 + 1638) ] do v205=v205 + (441 -(382 + 58)) ;v78[v328]=v204[v205];end break;end end elseif (v80[6 -4 ]==v78[v80[4]]) then v72=v72 + 1 ;else v72=v80[3];end elseif ((4046>2695) and (v81<=(38 + 7))) then if (v81>(90 -46)) then v60[v80[8 -5 ]]=v78[v80[2]];else for v261=v80[1207 -(902 + 303) ],v80[5 -2 ] do v78[v261]=nil;end end elseif (v81>(110 -64)) then v78[v80[1 + 1 ]][v80[818 -(98 + 717) ]]=v80[1694 -(1121 + 569) ];elseif v78[v80[216 -((848 -(802 + 24)) + 192) ]] then v72=v72 + 1 ;else v72=v80[686 -((832 -349) + 200) ];end elseif (v81<=55) then if ((v81<=(1514 -(1404 + 59))) or (3545==3197)) then if ((2394>373) and (v81<=((168 -34) -85))) then if (v81==(63 -15)) then do return;end elseif  not v78[v80[767 -(70 + 398 + 229 + 68) ]] then v72=v72 + (563 -(334 + 228)) ;else v72=v80[(2 + 8) -7 ];end elseif (v81==(115 -65)) then v78[v80[2 -0 ]][v80[1 + 0 + (5 -3) ]]=v80[240 -(141 + 95) ];else v78[v80[2 + 0 ]]=v80[7 -4 ];end elseif ((4155<=4232) and (v81<=((423 -296) -74))) then if (v81==(13 + 39)) then local v214=v69[v80[8 -5 ]];local v215;local v216={};v215=v10({},{__index=function(v263,v264) local v265=v216[v264];return v265[1 + 0 ][v265[2 + 0 ]];end,__newindex=function(v266,v267,v268) local v269=0;local v270;while true do if (v269==0) then v270=v216[v267];v270[1 + 0 ][v270[2 -0 ]]=v268;break;end end end});for v271=1 + 0 ,v80[167 -(92 + 71) ] do local v272=0 + 0 ;local v273;while true do if (v272==(0 -0)) then v72=v72 + 1 + 0 ;v273=v68[v72];v272=766 -(474 + 100 + 191) ;end if (v272==(1 + 0)) then if (v273[2 -1 ]==(6 + 4)) then v216[v271-(850 -(254 + 595)) ]={v78,v273[1793 -(573 + 1217) ]};else v216[v271-(2 -1) ]={v60,v273[942 -(714 + 225) ]};end v77[ #v77 + (2 -1) ]=v216;break;end end end v78[v80[(1621 -(1427 + 192)) -(0 + 0) ]]=v29(v214,v215,v61);else v78[v80[1 + 1 ]]=v78[v80[3 -0 ]][v80[810 -(118 + 688) ]];end elseif ((v81==(102 -(25 + 23))) or (3581==3473)) then local v220=0 + 0 ;local v221;while true do if (v220==(1886 -((2152 -1225) + 959))) then v221=v80[2];v78[v221]=v78[v221](v13(v78,v221 + (3 -2) ,v73));break;end end else v78[v80[734 -(16 + 716) ]]=v61[v80[5 -2 ]];end elseif (v81<=(156 -(11 + 86))) then if (v81<=((125 + 13) -81)) then if (v81>56) then local v224=v80[2];v78[v224](v78[v224 + 1 ]);else v78[v80[2]]=v78[v80[288 -(175 + 110) ]];end elseif (v81>(146 -88)) then v78[v80[9 -7 ]]();elseif ((4995>3348) and (v78[v80[1 + 1 ]]==v78[v80[1800 -(503 + 1293) ]])) then v72=v72 + (2 -1) ;else v72=v80[3 + 0 ];end elseif (v81<=(387 -(192 + 134))) then if (v81>(1121 -(810 + 251))) then v78[v80[2 + 0 ]]=v61[v80[1 + 2 ]];else local v229=0;local v230;while true do if ((v229==(0 + 0)) or (754>3724)) then v230=v80[535 -(43 + (1766 -(316 + 960))) ];v78[v230]=v78[v230](v13(v78,v230 + (734 -(711 + 22)) ,v80[3]));break;end end end elseif ((217>=57) and (v81<=62)) then for v274=v80[7 -5 ],v80[862 -(240 + 619) ] do v78[v274]=nil;end elseif ((v81==(9 + 7 + 47)) or (2070>=4037)) then local v294=(0 + 0) -0 ;local v295;local v296;local v297;local v298;while true do if (v294==(0 + 0)) then v295=v80[2];v296,v297=v71(v78[v295](v13(v78,v295 + (1745 -(1344 + 400)) ,v80[(378 + 30) -(255 + 150) ])));v294=1 + 0 ;end if (v294==(2 + 0)) then for v350=v295,v73 do v298=v298 + 1 ;v78[v350]=v296[v298];end break;end if ((4 -3)==v294) then v73=(v297 + v295) -1 ;v298=0 -0 ;v294=6 -4 ;end end else v78[v80[1741 -(404 + 1335) ]]={};end v72=v72 + (407 -((734 -(83 + 468)) + 223)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
