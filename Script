--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v87=0;local v88;while true do if (v87==0) then v88=v2(v0(v30,16));if v19 then local v119=0;local v120;while true do if (v119==0) then v120=v5(v88,v19);v19=nil;v119=1;end if (v119==1) then return v120;end end else return v88;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v89=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-1) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v89-(v89%(932 -(857 + 74))) ;else local v90=(570 -(367 + 32 + 169))^(v32-1) ;return (((v31%(v90 + v90))>=v90) and (928 -(214 + (1590 -(282 + 595))))) or ((1637 -(1523 + 114)) + 0) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 2 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1068 -(68 + 978 + 19)) );v18=v18 + (1274 -(226 + 1044)) ;return (v40 * ((16200264 + 56854510) -56277558)) + (v39 * 65536) + (v38 * ((1330 -(892 + 65)) -(32 + 85))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1;local v44=(v20(v42,1 -0 ,1207 -((2555 -(998 + 488)) + 118) ) * ((4 -2)^(58 -26))) + v41 ;local v45=v20(v42,38 -17 ,381 -(87 + 263) );local v46=((v20(v42,212 -(67 + 113) )==(1 + 0)) and  -(2 -1)) or (1 + 0) ;if (v45==(18 -(10 + 8))) then if (v44==(0 -0)) then return v46 * (0 + 0) ;else v45=953 -(802 + 150) ;v43=(0 + 0) -0 ;end elseif (v45==(3712 -1665)) then return ((v44==(0 + 0)) and (v46 * ((998 -(915 + 82))/((772 -(201 + 571)) -0)))) or (v46 * NaN) ;end return v8(v46,v45-(596 + 427) ) * (v43 + (v44/((432 -(44 + 386))^(1190 -(116 + 1022))))) ;end local function v25(v47) local v48;if  not v47 then local v91=0 -0 ;while true do if (v91==0) then v47=v23();if (v47==(0 + (0 -0))) then return "";end break;end end end v48=v3(v16,v18,(v18 + v47) -1 );v18=v18 + v47 ;local v49={};for v65=3 -2 , #v48 do v49[v65]=v2(v1(v3(v48,v65,v65)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99,v100) local v101=(function() return 0 -0 ;end)();local v92=(function() return;end)();local v93=(function() return;end)();while true do if (v101==(0 + 0)) then local v115=(function() return 0 + 0 ;end)();local v116=(function() return;end)();while true do if (v115==0) then v116=(function() return 0 -0 ;end)();while true do if (v116==(0 -0)) then v92=(function() return 438 -(262 + 176) ;end)();v93=(function() return nil;end)();v116=(function() return 1722 -(345 + 1376) ;end)();end if (1==v116) then v101=(function() return 689 -(198 + 490) ;end)();break;end end break;end end end if (v101~=(1 + 0)) then else local v117=(function() return 0;end)();while true do if (v117==(0 -0)) then while true do if (v92==0) then v93=(function() return v94();end)();if (v95(v93, #"~", #",")==0) then local v121=(function() return 0 -0 ;end)();local v122=(function() return;end)();local v123=(function() return;end)();local v124=(function() return;end)();while true do if (v121==(2 + 0)) then if (v95(v123, #"~", #".")== #"~") then v124[2]=(function() return v98[v124[4 -2 ]];end)();end if (v95(v123,1208 -(696 + 510) ,2)== #"!") then v124[ #"xnx"]=(function() return v98[v124[ #"-19"]];end)();end v121=(function() return 3;end)();end if (1~=v121) then else v124=(function() return {v96(),v96(),nil,nil};end)();if (v122==(0 -0)) then local v307=(function() return 0 -0 ;end)();local v308=(function() return;end)();while true do if (0~=v307) then else v308=(function() return 1262 -(1091 + 171) ;end)();while true do if (v308==0) then v124[ #"xxx"]=(function() return v96();end)();v124[ #"0313"]=(function() return v96();end)();break;end end break;end end elseif (v122== #"\\") then v124[ #"91("]=(function() return v97();end)();elseif (v122==2) then v124[ #"asd"]=(function() return v97() -((1 + 1)^(301 -(134 + 151))) ;end)();elseif (v122== #"xxx") then local v352=(function() return 0;end)();local v353=(function() return;end)();while true do if (v352==0) then v353=(function() return 0 -0 ;end)();while true do if (v353~=(0 -0)) then else v124[ #"asd"]=(function() return v97() -(2^(390 -(123 + 251))) ;end)();v124[ #"0313"]=(function() return v96();end)();break;end end break;end end end v121=(function() return 9 -7 ;end)();end if (v121~=(701 -(208 + 490))) then else if (v95(v123, #"asd", #"91(")== #",") then v124[ #"asd1"]=(function() return v98[v124[ #"0836"]];end)();end v99[v100]=(function() return v124;end)();break;end if (v121~=(0 + 0)) then else v122=(function() return v95(v93,2 -0 , #"-19");end)();v123=(function() return v95(v93, #"asd1",3 + 3 );end)();v121=(function() return 1;end)();end end end break;end end return v92,v93,v94,v95,v96,v97,v98,v99,v100;end end end end end;end)();local v51=(function() return function(v102,v103,v104) local v105=(function() return 0;end)();while true do if (v105==(1824 -(1195 + 629))) then v102[v103-#"<" ]=(function() return v104();end)();return v102,v103,v104;end end end;end)();local v52=(function() return {};end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {v52,v53,nil,v54};end)();local v56=(function() return v23();end)();local v57=(function() return {};end)();for v67= #"{",v56 do local v68=(function() return 0;end)();local v69=(function() return;end)();local v70=(function() return;end)();while true do if (0==v68) then local v109=(function() return 241 -(187 + 54) ;end)();while true do if (v109~=(1 + 0)) then else v68=(function() return 203 -(14 + 188) ;end)();break;end if ((675 -(534 + 141))~=v109) then else v69=(function() return v21();end)();v70=(function() return nil;end)();v109=(function() return 1 + 0 ;end)();end end end if (1~=v68) then else if (v69== #"}") then v70=(function() return v21()~=(0 + 0) ;end)();elseif (v69==(3 -1)) then v70=(function() return v24();end)();elseif (v69== #"xxx") then v70=(function() return v25();end)();end v57[v67]=(function() return v70;end)();break;end end end v55[ #"xnx"]=(function() return v21();end)();for v71= #"{",v23() do FlatIdent_60EA1,Descriptor,v21,v20,v22,v23,v57,v52,v71=(function() return v50(FlatIdent_60EA1,Descriptor,v21,v20,v22,v23,v57,v52,v71);end)();end for v72= #"]",v23() do v53,v72,v28=(function() return v51(v53,v72,v28);end)();end return v55;end local function v29(v59,v60,v61) local v62=v59[1 -0 ];local v63=v59[1 + 1 ];local v64=v59[(2044 -(255 + 150)) -(1373 + 263) ];return function(...) local v73=v62;local v74=v63;local v75=v64;local v76=v27;local v77=1;local v78= -((188 + 813) -(451 + 433 + 116));local v79={};local v80={...};local v81=v12("#",...) -(1 -0) ;local v82={};local v83={};for v106=0 -0 ,v81 do if (v106>=v75) then v79[v106-v75 ]=v80[v106 + ((1205 + 180) -(746 + 638)) ];else v83[v106]=v80[v106 + 1 + 0 ];end end local v84=(v81-v75) + (1 -0) ;local v85;local v86;while true do v85=v73[v77];v86=v85[342 -(218 + 123) ];if (v86<=((863 + 748) -(1535 + 46))) then if ((v86<=(14 + 0)) or (408>=4764)) then if (v86<=(1 + 5)) then if (v86<=((2401 -1839) -((1032 -726) + 254))) then if (v86<=0) then if ( not v83[v85[1 + 1 ]] or (439>=3976) or (2739>4008)) then v77=v77 + ((1995 -(109 + 1885)) -0) ;else v77=v85[3];end elseif ((v86==(1468 -(899 + 568))) or (23==1134)) then v83[v85[2 + 0 ]]=v83[v85[3]][v83[v85[9 -5 ]]];else local v128=0;local v129;while true do if (v128==(603 -(268 + (1804 -(1269 + 200))))) then v129=v85[2];v83[v129](v83[v129 + (291 -(60 + 230)) ]);break;end end end elseif (v86<=(7 -3)) then if (v86>((1390 -(98 + 717)) -(426 + 146))) then v83[v85[2]][v85[3]]=v85[1 + 3 ];else local v132=v85[1458 -(282 + (3791 -2617)) ];v83[v132](v13(v83,v132 + 1 ,v85[814 -(569 + 242) ]));end elseif (v86==(14 -9)) then v83[v85[(827 -(802 + 24)) + 1 ]]=v85[(1770 -743) -(706 + 318) ]~=(1251 -(721 + 530)) ;else v83[v85[1273 -(945 + 326) ]]=v85[7 -4 ];end elseif ((v86<=(9 + 1)) or (2693>=4111)) then if (v86<=(708 -(271 + 429))) then if (v86>(7 + 0)) then v83[v85[1502 -(1408 + 92) ]]=v83[v85[1742 -(404 + 1335) ]][v85[(1376 -286) -(461 + 625) ]];else local v138=v85[(1696 -(183 + 223)) -(993 + 295) ];v83[v138]=v83[v138]();end elseif ((3752==3752) and (v86>(1 + 8))) then v83[v85[1173 -((508 -90) + 753) ]]=v83[v85[2 + 1 ]];else local v142=0;local v143;while true do if ((v142==(0 + 0)) or (4316<=2146)) then v143=v85[1 + 1 + 0 ];v83[v143]=v83[v143](v13(v83,v143 + 1 + 0 ,v85[532 -(406 + 123) ]));break;end end end elseif (v86<=(1781 -(1749 + 20))) then if (v86==11) then local v144=v74[v85[1 + 2 ]];local v145;local v146={};v145=v10({},{__index=function(v237,v238) local v239=1322 -(1249 + 73) ;local v240;while true do if (v239==(0 + 0)) then v240=v146[v238];return v240[1146 -(466 + 679) ][v240[2 + 0 ]];end end end,__newindex=function(v241,v242,v243) local v244=0 -0 ;local v245;while true do if (v244==0) then v245=v146[v242];v245[1 + 0 ][v245[2]]=v243;break;end end end});for v246=1,v85[11 -7 ] do local v247=1900 -(106 + 1794) ;local v248;while true do if (v247==1) then if ((v248[1]==(4 + 11 + 31)) or (3546<=2809)) then v146[v246-1 ]={v83,v248[8 -5 ]};else v146[v246-(2 -1) ]={v60,v248[3]};end v82[ #v82 + (585 -(57 + 527)) ]=v146;break;end if ((4904>2166) and (v247==((3969 -2542) -(41 + (4621 -3235))))) then v77=v77 + (104 -(17 + 60 + 26)) ;v248=v73[v77];v247=1 + 0 ;end end end v83[v85[2]]=v29(v144,v145,v61);else for v249=v85[3 -1 ],v85[(346 -(118 + 220)) -5 ] do v83[v249]=nil;end end elseif (v86==(179 -(122 + 16 + 28))) then v83[v85[2 -0 ]]=v60[v85[9 -6 ]];else v83[v85[2 + 0 + 0 ]]=v83[v85[3]][v83[v85[1 + 3 ]]];end elseif (v86<=(43 -21)) then if ((109>=90) and (4046>2695) and (v86<=18)) then if ((v86<=16) or (3545==3197)) then if ((2394>373) and (v86==(80 -(30 + 35)))) then local v152=v85[2];v83[v152]=v83[v152](v13(v83,v152 + 1 + 0 + 0 ,v78));else v83[v85[1259 -(1043 + 214) ]]=v85[11 -(3 + 5) ];end elseif (v86>17) then v83[v85[1214 -(323 + 889) ]]=v85[(4 + 3) -4 ]~=((2013 -(797 + 636)) -(361 + 219)) ;else local v157=v85[322 -((257 -204) + 267) ];v83[v157]=v83[v157](v13(v83,v157 + 1 + (1619 -(1427 + 192)) ,v85[3]));end elseif (v86<=(433 -((464 -(108 + 341)) + 398))) then if ((4155<=4232) and (v86==(1001 -(18 + 433 + 531)))) then if ((4978>2905) and  not v83[v85[7 -5 ]]) then v77=v77 + (4 -3) + 0 ;else v77=v85[1496 -(711 + 782) ];end else local v159=v85[2 + 0 ];local v160={};for v251=851 -(20 + 830) , #v82 do local v252=v82[v251];for v287=0, #v252 do local v288=v252[v287];local v289=v288[1 + 0 ];local v290=v288[(116 + 12) -(116 + 10) ];if (((v289==v83) and (v290>=v159)) or (3581==3473)) then local v315=0 + 0 ;while true do if ((4995>3348) and (v315==(738 -(542 + 196)))) then v160[v290]=v289[v290];v288[1 -0 ]=v160;break;end end end end end end elseif ((v86==(7 + 14)) or (754>3724) or (3026<=2280)) then local v161=v85[2 + 0 ];local v162={v83[v161](v13(v83,v161 + 1 + 0 ,v85[7 -4 ]))};local v163=0 -0 ;for v253=v161,v85[1555 -((2158 -1032) + 425) ] do local v254=405 -(118 + 287) ;while true do if (v254==(0 -0)) then v163=v163 + (1122 -(118 + 1003)) ;v83[v253]=v162[v163];break;end end end else v83[v85[5 -(2 + 1) ]]={};end elseif (v86<=26) then if (v86<=((727 -(192 + 134)) -(142 + 235))) then if ((217>=57) and (v86>23)) then if ((v83[v85[471 -(270 + 199) ]]==v83[v85[18 -14 ]]) or (2070>=4037) or (1653<=1108)) then v77=v77 + 1 + 0 ;else v77=v85[3];end else v60[v85[980 -(308 + 245 + 424) ]]=v83[v85[2]];end elseif (v86>25) then do return;end else local v167=v85[3 -1 ];local v168={v83[v167](v83[v167 + 1 + 0 ])};local v169=0 + 0 + 0 ;for v255=v167,v85[2 + 0 + 2 ] do local v256=(0 -0) + 0 ;while true do if ((2705==2705) and (v256==(0 -0))) then v169=v169 + (2 -1) ;v83[v255]=v168[v169];break;end end end end elseif (v86<=(62 -34)) then if (v86==(8 + 19)) then do return v83[v85[9 -7 ]];end else local v170=v85[1821 -(580 + 1239) ];local v171={v83[v170](v13(v83,v170 + 1 ,v85[2 + 1 ]))};local v172=1329 -(797 + 532) ;for v257=v170,v85[3 + 1 ] do v172=v172 + 1 + 0 ;v83[v257]=v171[v172];end end elseif ((2909>2609) and (v86>(67 -38))) then v83[v85[(3010 -(1202 + 604)) -(373 + 829) ]]={};elseif (v83[v85[733 -((2222 -1746) + 255) ]]==v83[v85[1134 -(369 + 761) ]]) then v77=v77 + 1 ;else v77=v85[2 + (1 -0) ];end elseif ((757>194) and (61==61) and (v86<=(83 -37))) then if (v86<=(71 -33)) then if (v86<=34) then if (v86<=((802 -532) -(62 + 2 + 174))) then if ((v86==(1 + 4 + 26)) or (31>=1398)) then v83[v85[2 -0 ]]=v60[v85[(148 + 191) -(144 + 192) ]];elseif (v83[v85[218 -(42 + 174) ]]==v85[4]) then v77=v77 + 1 ;else v77=v85[3];end elseif (v86==((65 -40) + 8)) then v83[v85[2 + 0 ]]=v61[v85[2 + 1 ]];elseif v83[v85[1506 -(363 + 1141) ]] then v77=v77 + (1581 -(1183 + 397)) ;else v77=v85[8 -5 ];end elseif ((3196<=4872) and (v86<=((74 -47) + (334 -(45 + 280))))) then if (v86>(27 + 8)) then v77=v85[(1229 + 749) -(1913 + 62) ];else local v179=v85[2 + (1167 -(645 + 522)) ];v83[v179](v13(v83,v179 + (2 -1) ,v85[1936 -(565 + 1368) ]));end elseif (v86>(139 -102)) then for v260=v85[1663 -(1477 + 184) ],v85[3 -0 ] do v83[v260]=nil;end else local v180=v85[2 + 0 ];local v181=v85[860 -(545 + 19 + 292) ];local v182=v180 + (2 -0) ;local v183={v83[v180](v83[v180 + 1 ],v83[v182])};for v262=305 -(214 + 30 + 22 + 38) ,v181 do v83[v182 + v262 ]=v183[v262];end local v184=v183[1 + 0 ];if v184 then local v295=476 -((1831 -(1010 + 780)) + 77 + 358) ;while true do if ((v295==((1853 -852) -((2849 -(340 + 1571)) + 63))) or (699>=1296)) then v83[v182]=v184;v77=v85[3 + 0 ];break;end end else v77=v77 + (1126 -(936 + 189)) ;end end elseif (v86<=(6 + 8 + 28)) then if (v86<=((1653 + 0) -(1565 + 48))) then if (v86==(25 + (66 -52))) then if (v83[v85[1140 -(782 + 356) ]]==v85[(794 -523) -(176 + 91) ]) then v77=v77 + (2 -1) ;else v77=v85[(1840 -(1045 + 791)) -1 ];end else local v185=v85[2];local v186={v83[v185](v83[v185 + (1876 -(157 + 1718)) ])};local v187=0;for v265=v185,v85[4 + 0 ] do v187=v187 + (3 -2) ;v83[v265]=v186[v187];end end elseif ((v86>(140 -99)) or (1783>=3616)) then v83[v85[1020 -(697 + 321) ]]();else v60[v85[7 -4 ]]=v83[v85[(4 -1) -1 ]];end elseif (v86<=(100 -56)) then if (v86>(17 + 26)) then do return;end elseif v83[v85[(508 -(351 + 154)) -(1575 -(1281 + 293)) ]] then v77=v77 + (2 -1) ;else v77=v85[1230 -(322 + 905) ];end elseif ((3326==3326) and ((v86>45) or (3913>4527))) then v83[v85[2]]=v83[v85[3]];else local v192=v85[613 -(602 + 9) ];local v193,v194=v76(v83[v192](v13(v83,v192 + (1190 -(449 + 740)) ,v85[875 -(826 + 46) ])));v78=(v194 + v192) -((426 + 522) -(245 + 702)) ;local v195=0;for v268=v192,v78 do local v269=0 -(0 -0) ;while true do if (v269==((266 -(28 + 238)) + 0)) then v195=v195 + (1899 -(260 + (3659 -2021))) ;v83[v268]=v193[v195];break;end end end end elseif ((4376>817) and (v86<=(494 -((1941 -(1381 + 178)) + 58)))) then if (v86<=(160 -110)) then if (v86<=(40 + 8)) then if ((4861>824) and (v86>(97 -50))) then local v196=0 -0 ;local v197;local v198;while true do if (v196==(1206 -((1414 -(409 + 103)) + 303))) then for v322=1 -0 , #v82 do local v323=v82[v322];for v332=0 + 0 , #v323 do local v333=v323[v332];local v334=v333[2 -1 ];local v335=v333[1 + 1 ];if ((v334==v83) and (v335>=v197)) then v198[v335]=v334[v335];v333[1691 -(1121 + 569) ]=v198;end end end break;end if ((v196==0) or (1383>=2131)) then v197=v85[238 -(46 + 190) ];v198={};v196=215 -(18 + 4 + 82 + 110) ;end end else v77=v85[686 -(483 + 200) ];end elseif ((1433<=3878) and (v86>(1512 -((4840 -3436) + 59)))) then v83[v85[5 -3 ]]();else v83[v85[2 -0 ]]=v83[v85[768 -(468 + 297) ]][v85[99 -(51 + 44) ]];end elseif ((v86<=(614 -(334 + 228))) or (1876>=2541)) then if ((1782<=3772) and (v86>(171 -120))) then v83[v85[2]][v85[6 -(1 + 2) ]]=v85[(1323 -(1114 + 203)) -2 ];else do return v83[v85[2]];end end elseif (v86>(9 + 7 + 37)) then local v204=v85[238 -(141 + 95) ];do return v13(v83,v204,v204 + v85[3 + 0 ] );end else local v205=v85[4 -2 ];local v206=v85[4];local v207=v205 + (4 -2) ;local v208={v83[v205](v83[v205 + 1 ],v83[v207])};for v270=1,v206 do v83[v207 + v270 ]=v208[v270];end local v209=v208[2 -1 ];if (v209 or (1583==1735)) then local v298=0 + (470 -(381 + 89)) ;while true do if (v298==(0 + 0 + 0 + 0)) then v83[v207]=v209;v77=v85[4 -(664 -(174 + 489)) ];break;end end else v77=v77 + 1 ;end end elseif (v86<=((59 -24) + 23)) then if ((v86<=((1375 -(1074 + 82)) -(92 + 71))) or (2981==2350)) then if ((v86>55) or (4700<813)) then local v210=0 + 0 ;local v211;local v212;local v213;local v214;while true do if ((3199<4050) and (v210==(1 -0))) then v78=(v213 + v211) -(766 -((1257 -683) + 191)) ;v214=0 + 0 ;v210=(1788 -(214 + 1570)) -2 ;end if ((v210==2) or (4466<=493)) then for v324=v211,v78 do v214=v214 + 1 + 0 ;v83[v324]=v212[v214];end break;end if (v210==(849 -(254 + 595))) then v211=v85[128 -(55 + 71) ];v212,v213=v76(v83[v211](v13(v83,v211 + 1 ,v85[(1458 -(990 + 465)) -0 ])));v210=1791 -(573 + 1217) ;end end else local v215=0 -(0 + 0) ;local v216;while true do if (v215==(0 + 0 + 0)) then v216=v85[2 -0 ];v83[v216](v83[v216 + (940 -(714 + 225)) ]);break;end end end elseif (v86==57) then local v217=v85[5 -3 ];v83[v217]=v83[v217]();else local v219=v85[2 -0 ];v83[v219]=v83[v219](v13(v83,v219 + 1 ,v78));end elseif (v86<=60) then if ((v86==(7 + 52)) or (2547<=1987)) then local v221=v85[2];local v222=v83[v85[3 + 0 ]];v83[v221 + (1 -0) ]=v222;v83[v221]=v222[v85[810 -(118 + 688) ]];else v83[v85[50 -((1930 -(830 + 1075)) + 23) ]]=v61[v85[3]];end elseif (v86==(12 + 49)) then local v228=v74[v85[1889 -(927 + 959) ]];local v229;local v230={};v229=v10({},{__index=function(v273,v274) local v275=0 -0 ;local v276;while true do if ((2961>2740) and (((732 -(16 + 716))==v275) or (4951<4430))) then v276=v230[v274];return v276[1 -0 ][v276[99 -(11 + 86) ]];end end end,__newindex=function(v277,v278,v279) local v280=v230[v278];v280[2 -1 ][v280[287 -(175 + 110) ]]=v279;end});for v282=1 + 0 ,v85[9 -5 ] do local v283=0 -0 ;local v284;while true do if ((96==96) and (0==v283)) then v77=v77 + 1 ;v284=v73[v77];v283=1797 -(503 + 1293) ;end if ((3696>=3612) and (v283==(2 -(2 -1)))) then if (v284[1 + 0 ]==((2269 -(171 + 991)) -(810 + 251))) then v230[v282-(1 + (0 -0)) ]={v83,v284[3 + 0 ]};else v230[v282-(534 -(43 + 490)) ]={v60,v284[10 -7 ]};end v82[ #v82 + ((3014 -2154) -(240 + 619)) ]=v230;break;end end end v83[v85[1 + 1 ]]=v29(v228,v229,v61);else local v232=v85[1 + 1 ];local v233=v83[v85[4 -1 ]];v83[v232 + 1 ]=v233;v83[v232]=v233[v85[1 + (8 -5) ]];end v77=v77 + (1745 -(1344 + 400)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
