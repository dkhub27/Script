--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=v2(v0(v30,16));if v19 then local v91=v5(v81,v19);v19=nil;return v91;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -(1640 -(1523 + 114)))^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -(555 + 58 + 6)))) + (932 -(857 + 74)))) ;return v82-(v82%(569 -(367 + 201))) ;else local v83=(929 -(214 + 713))^(v32-((1 -0) + 0)) ;return (((v31%(v83 + v83))>=v83) and (1 + 0)) or (877 -(282 + 595)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (1067 -(68 + 997)) ;return (v36 * (1526 -(226 + 1044))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + ((969 -(892 + 65)) -9) );v18=v18 + (121 -(32 + 85)) ;return (v40 * (16441815 + 335401)) + (v39 * (14533 + 51003)) + (v38 * 256) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1;local v44=(v20(v42,2 -1 ,36 -16 ) * ((3 -1)^(382 -(87 + 263)))) + v41 ;local v45=v20(v42,201 -(67 + 113) ,(50 -27) + 8 );local v46=((v20(v42,32)==(2 -1)) and  -(1 + 0)) or (3 -(1 + 1)) ;if (v45==0) then if (v44==(952 -(802 + 150))) then return v46 * (0 -0) ;else v45=1 -0 ;v43=(0 -0) + 0 ;end elseif (v45==(3044 -(915 + 82))) then return ((v44==(0 -0)) and (v46 * (1/(0 + 0)))) or (v46 * NaN) ;end return v8(v46,v45-((1334 + 10) -321) ) * (v43 + (v44/((1189 -(1069 + 118))^(117 -(856 -(368 + 423)))))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==(0 -0)) then return "";end end v48=v3(v16,v18,(v18 + v47) -(19 -(10 + 8)) );v18=v18 + v47 ;local v49={};for v64=3 -2 , #v48 do v49[v64]=v2(v1(v3(v48,v64,v64)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return 867 -(550 + 317) ;end)();local v51=(function() return;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do if (v50~=(0 -0)) then else local v87=(function() return 0 + 0 ;end)();while true do if (v87==(0 -0)) then v51=(function() return function(v104,v105,v106) local v107=(function() return 0 -0 ;end)();while true do if (v107==(285 -(134 + 151))) then local v116=(function() return 1665 -(970 + 695) ;end)();while true do if (v116==(0 -0)) then v104[v105-#"~" ]=(function() return v106();end)();return v104,v105,v106;end end end end end;end)();v52=(function() return {};end)();v87=(function() return 1991 -(582 + 1408) ;end)();end if (v87==(3 -2)) then v53=(function() return {};end)();v54=(function() return {};end)();v87=(function() return 1173 -(418 + 753) ;end)();end if (v87~=(1 + 1)) then else v50=(function() return 1 -0 ;end)();break;end end end if ((1 + 0)~=v50) then else local v88=(function() return 0 -0 ;end)();local v89=(function() return;end)();while true do if (v88==0) then v89=(function() return 0;end)();while true do if (v89==(1824 -(1195 + 629))) then v55=(function() return {v52,v53,nil,v54};end)();v56=(function() return v23();end)();v89=(function() return 1;end)();end if (v89==1) then v57=(function() return {};end)();for v111= #"<",v56 do local v112=(function() return 0 -0 ;end)();local v113=(function() return;end)();local v114=(function() return;end)();local v115=(function() return;end)();while true do if (v112==(241 -(187 + 54))) then local v125=(function() return 529 -(406 + 123) ;end)();while true do if (v125~=(1770 -(1749 + 20))) then else v112=(function() return 1 + 0 ;end)();break;end if (v125==0) then v113=(function() return 0;end)();v114=(function() return nil;end)();v125=(function() return 781 -(162 + 618) ;end)();end end end if ((1 + 0)~=v112) then else v115=(function() return nil;end)();while true do if (v113==0) then local v261=(function() return 0 + 0 ;end)();while true do if (v261==(2 -1)) then v113=(function() return 2 -1 ;end)();break;end if (v261~=(0 + 0)) then else v114=(function() return v21();end)();v115=(function() return nil;end)();v261=(function() return 1 + 0 ;end)();end end end if (v113==1) then if (v114== #":") then v115=(function() return v21()~=(0 -0) ;end)();elseif (v114==(2 -0)) then v115=(function() return v24();end)();elseif (v114== #"91(") then v115=(function() return v25();end)();end v57[v111]=(function() return v115;end)();break;end end break;end end end v89=(function() return 1 + 1 ;end)();end if ((5 -3)~=v89) then else v50=(function() return 2;end)();break;end end break;end end end if (v50==(1638 -(1373 + 263))) then v55[ #"xxx"]=(function() return v21();end)();for v92= #">",v23() do local v93=(function() return v21();end)();if (v20(v93, #"{", #"\\")==(1000 -(451 + 549))) then local v99=(function() return 584 -(57 + 527) ;end)();local v100=(function() return;end)();local v101=(function() return;end)();local v102=(function() return;end)();local v103=(function() return;end)();while true do if (v99~=(1 + 0)) then else local v108=(function() return 103 -(17 + 86) ;end)();local v109=(function() return;end)();while true do if (v108==(0 + 0)) then v109=(function() return 0;end)();while true do if (v109==(1 -0)) then v99=(function() return 2;end)();break;end if (v109~=(0 -0)) then else v102=(function() return nil;end)();v103=(function() return nil;end)();v109=(function() return 1385 -(746 + 638) ;end)();end end break;end end end if (v99==0) then local v110=(function() return 0 + 0 ;end)();while true do if (v110~=1) then else v99=(function() return 167 -(122 + 44) ;end)();break;end if (v110==(0 -0)) then local v117=(function() return 0 -0 ;end)();while true do if (v117~=0) then else v100=(function() return 0 -0 ;end)();v101=(function() return nil;end)();v117=(function() return 342 -(218 + 123) ;end)();end if (v117~=(1 + 0)) then else v110=(function() return 1;end)();break;end end end end end if (v99==(1 + 1)) then while true do if (v100~= #"\\") then else local v118=(function() return 0;end)();local v119=(function() return;end)();while true do if (v118==(0 -0)) then v119=(function() return 1581 -(1535 + 46) ;end)();while true do if (v119==0) then v103=(function() return {v22(),v22(),nil,nil};end)();if (v101==(0 + 0)) then local v371=(function() return 0;end)();local v372=(function() return;end)();while true do if ((0 + 0)~=v371) then else v372=(function() return 0 + 0 ;end)();while true do if ((1257 -(1043 + 214))~=v372) then else v103[ #"asd"]=(function() return v22();end)();v103[ #".com"]=(function() return v22();end)();break;end end break;end end elseif (v101== #"!") then v103[ #"nil"]=(function() return v23();end)();elseif (v101==(562 -(306 + 254))) then v103[ #"gha"]=(function() return v23() -((7 -5)^(1228 -(323 + 889))) ;end)();elseif (v101~= #"91(") then else local v399=(function() return 0 + 0 ;end)();local v400=(function() return;end)();while true do if (v399==(0 -0)) then v400=(function() return 580 -(361 + 219) ;end)();while true do if (v400~=(0 -0)) then else v103[ #"91("]=(function() return v23() -((1469 -(899 + 568))^(4 + 12)) ;end)();v103[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v119=(function() return 1 + 0 ;end)();end if (v119==(2 -1)) then v100=(function() return 605 -(268 + 335) ;end)();break;end end break;end end end if (v100== #"91(") then if (v20(v102, #"xxx", #"gha")== #"!") then v103[ #"?id="]=(function() return v57[v103[ #".dev"]];end)();end v52[v92]=(function() return v103;end)();break;end if (v100==0) then local v121=(function() return 0;end)();local v122=(function() return;end)();while true do if (v121==(290 -(60 + 230))) then v122=(function() return 982 -(18 + 964) ;end)();while true do if (v122==(572 -(426 + 146))) then v101=(function() return v20(v93,1 + 1 , #"asd");end)();v102=(function() return v20(v93, #"xnxx",22 -16 );end)();v122=(function() return 1;end)();end if (v122==(1457 -(282 + 1174))) then v100=(function() return  #":";end)();break;end end break;end end end if (v100==(2 + 0)) then local v123=(function() return 811 -(569 + 242) ;end)();local v124=(function() return;end)();while true do if (v123~=0) then else v124=(function() return 0 -0 ;end)();while true do if ((0 + 0)~=v124) then else if (v20(v102, #"[", #"}")== #">") then v103[128 -(116 + 10) ]=(function() return v57[v103[1026 -(706 + 318) ]];end)();end if (v20(v102,1253 -(721 + 530) ,1273 -(945 + 326) )== #"]") then v103[ #"91("]=(function() return v57[v103[ #"xxx"]];end)();end v124=(function() return 739 -(542 + 196) ;end)();end if (v124~=(2 -1)) then else v100=(function() return  #"91(";end)();break;end end break;end end end end break;end end end end for v94= #"<",v23() do v53,v94,v28=(function() return v51(v53,v94,v28);end)();end return v55;end end end local function v29(v58,v59,v60) local v61=v58[1 + 0 ];local v62=v58[2 + 0 ];local v63=v58[3];return function(...) local v66=v61;local v67=v62;local v68=v63;local v69=v27;local v70=1 + 0 ;local v71= -(1 + 0);local v72={};local v73={...};local v74=v12("#",...) -1 ;local v75={};local v76={};for v84=0 -0 ,v74 do if ((v84>=v68) or (4046>=4316)) then v72[v84-v68 ]=v73[v84 + (1552 -(1126 + 425)) ];else v76[v84]=v73[v84 + (406 -(118 + 287)) ];end end local v77=(v74-v68) + (3 -(1164 -(171 + 991))) ;local v78;local v79;while true do v78=v66[v70];v79=v78[1122 -(118 + 1003) ];if (((194==194) and (v79<=34)) or (2008<1929)) then if (v79<=(65 -49)) then if ((2384>1775) and (v79<=((53 -33) -13))) then if ((v79<=(380 -(142 + 235))) or (4543<=4376)) then if (v79<=(4 -3)) then if (v79>0) then v59[v78[1 + (4 -2) ]]=v76[v78[979 -(553 + 424) ]];else v76[v78[3 -1 ]]=v60[v78[3]];end elseif (v79>(2 + 0)) then local v132=0 + 0 ;local v133;while true do if (v132==(0 + 0)) then v133=v78[2];v76[v133]=v76[v133](v13(v76,v133 + 1 + 0 ,v78[2 + 1 ]));break;end end elseif (v76[v78[4 -2 ]]==v78[4]) then v70=v70 + ((2 + 0) -(3 -2)) ;else v70=v78[6 -3 ];end elseif (v79<=(2 + 3)) then if (v79==(19 -15)) then do return v76[v78[755 -(239 + 514) ]];end else local v134=v78[1 + 1 ];v76[v134]=v76[v134](v76[v134 + (2 -1) ]);end elseif (v79==(1335 -(797 + 532))) then local v136=v78[2 + (0 -0) ];local v137={v76[v136](v76[v136 + (2 -1) ])};local v138=0;for v233=v136,v78[1206 -(373 + 829) ] do local v234=731 -(476 + 255) ;while true do if (v234==(1130 -(369 + 761))) then v138=v138 + 1 + 0 ;v76[v233]=v137[v138];break;end end end else v76[v78[(6 -4) -0 ]]={};end elseif (v79<=11) then if ((728==728) and ((v79<=(16 -7)) or (31>=1398))) then if (v79==(246 -((1312 -(111 + 1137)) + 174))) then v70=v78[3];else local v141=v78[1 + 1 ];local v142={v76[v141](v13(v76,v141 + (1 -0) ,v78[3]))};local v143=336 -(144 + 192) ;for v235=v141,v78[4] do local v236=216 -((200 -(91 + 67)) + 174) ;while true do if ((3196<=4872) and (v236==(0 -0))) then v143=v143 + 1 + 0 ;v76[v235]=v142[v143];break;end end end end elseif (v79==(8 + 2)) then local v144=v78[2 + 0 ];local v145={};for v237=1 + 0 , #v75 do local v238=1504 -(363 + 1141) ;local v239;while true do if (v238==0) then v239=v75[v237];for v357=1580 -(1183 + 397) , #v239 do local v358=0;local v359;local v360;local v361;while true do if (v358==1) then v361=v359[(528 -(423 + 100)) -(1 + 2) ];if (((v360==v76) and (v361>=v144)) or (1076>4671)) then v145[v361]=v360[v361];v359[1 + 0 ]=v145;end break;end if (0==v358) then v359=v239[v357];v360=v359[(2 -1) + 0 ];v358=1976 -(1913 + 33 + 29) ;end end end break;end end end else v76[v78[2]]();end elseif ((1851>=378) and (3326==3326) and (v79<=(9 + 4))) then if (v79==((802 -(326 + 445)) -19)) then local v146=1933 -(565 + 1368) ;local v147;local v148;local v149;while true do if (v146==2) then for v330=3 -2 ,v78[4] do v70=v70 + (1662 -((6445 -4968) + 184)) ;local v331=v66[v70];if (((1433<=3878) and (v331[1 -0 ]==(31 + 2))) or (1948>=3476)) then v149[v330-(857 -(564 + 292)) ]={v76,v331[8 -5 ]};else v149[v330-(305 -(244 + 60)) ]={v59,v331[479 -(41 + 435) ]};end v75[ #v75 + (1002 -(938 + (146 -83))) ]=v149;end v76[v78[2 + 0 ]]=v29(v147,v148,v60);break;end if ((4794>=833) and (((1126 -(936 + 189))==v146) or (1583==1735))) then v149={};v148=v10({},{__index=function(v333,v334) local v335=0 + 0 ;local v336;while true do if ((4090==4090) and (v335==0)) then v336=v149[v334];return v336[1614 -(1565 + 48) ][v336[2 + 0 ]];end end end,__newindex=function(v337,v338,v339) local v340=1138 -(782 + 356) ;local v341;while true do if (v340==(267 -(176 + 91))) then v341=v149[v338];v341[2 -1 ][v341[2 -0 ]]=v339;break;end end end});v146=1094 -((1856 -(614 + 267)) + (149 -(19 + 13))) ;end if (v146==0) then v147=v67[v78[1878 -(157 + 1718) ]];v148=nil;v146=1 + 0 ;end end else local v150=(0 -0) -0 ;local v151;local v152;local v153;while true do if ((v150==(3 -2)) or (2981==2350)) then v153=0 -0 ;for v342=v151,v78[4] do v153=v153 + (1019 -(697 + 321)) ;v76[v342]=v152[v153];end break;end if (v150==(0 -(0 -0))) then v151=v78[3 -1 ];v152={v76[v151](v76[v151 + 1 + 0 ])};v150=1 -0 ;end end end elseif ((v79<=((10 + 27) -23)) or (4466<=493)) then v76[v78[1229 -(322 + (1591 -686)) ]]=v78[614 -(602 + 9) ]~=(1189 -(449 + 740)) ;elseif (v79==(887 -(826 + (95 -49)))) then v76[v78[2]]=v76[v78[950 -(245 + 702) ]];else local v266=v67[v78[9 -6 ]];local v267;local v268={};v267=v10({},{__index=function(v303,v304) local v305=v268[v304];return v305[1][v305[1 + 1 ]];end,__newindex=function(v306,v307,v308) local v309=1898 -(260 + 1638) ;local v310;while true do if (v309==(440 -(382 + 58))) then v310=v268[v307];v310[3 -2 ][v310[2 + 0 ]]=v308;break;end end end});for v311=1 -0 ,v78[4] do v70=v70 + ((3 -1) -1) ;local v312=v66[v70];if (v312[1]==(1238 -((3889 -2987) + (713 -410)))) then v268[v311-((1 + 0) -0) ]={v76,v312[1693 -(1121 + 569) ]};else v268[v311-(215 -(22 + 192)) ]={v59,v312[1466 -(1404 + 59) ]};end v75[ #v75 + (2 -1) ]=v268;end v76[v78[2 -0 ]]=v29(v266,v267,v60);end elseif ((v79<=(790 -(468 + 297))) or (2547<=1987) or (3758==2498)) then if ((2961>2740) and (v79<=(582 -(334 + 228)))) then if ((v79<=(60 -42)) or (2673<1575)) then if ((v79>((8 + 30) -21)) or (3721<=1455)) then local v155=v78[2 -0 ];local v156=v76[v78[1 + 2 ]];v76[v155 + (237 -(141 + 95)) ]=v156;v76[v155]=v156[v78[4 + 0 ]];else v76[v78[4 -2 ]][v78[6 -3 ]]=v78[1 + 3 ];end elseif (v79==19) then local v162=v78[5 -3 ];local v163=v78[3 + 1 ];local v164=v162 + 2 + 0 ;local v165={v76[v162](v76[v162 + (1 -0) ],v76[v164])};for v240=1,v163 do v76[v164 + v240 ]=v165[v240];end local v166=v165[1 + 0 ];if ((934<2270) and (3696>=3612) and v166) then v76[v164]=v166;v70=v78[166 -(92 + 71) ];else v70=v70 + 1 + 0 ;end elseif (v78[2 -0 ]==v76[v78[769 -(574 + 191) ]]) then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=(19 + 1 + 2)) then if (v79==(52 -31)) then v59[v78[2 + 1 ]]=v76[v78[851 -(254 + 595) ]];else local v169=0 + 0 ;local v170;local v171;while true do if ((v169==((79 + 47) -(55 + 71))) or (2970==1878)) then v170=v78[2 -0 ];v171={};v169=1791 -((1669 -(709 + 387)) + 1217) ;end if ((v169==(2 -1)) or (1612==1255)) then for v345=1 + (1858 -(673 + 1185)) , #v75 do local v346=v75[v345];for v364=0, #v346 do local v365=v346[v364];local v366=v365[1 -0 ];local v367=v365[2];if (((v366==v76) and (v367>=v170)) or (3693<1977)) then local v385=939 -(714 + 225) ;while true do if (v385==(0 -0)) then v171[v367]=v366[v367];v365[1 -0 ]=v171;break;end end end end end break;end end end elseif (v79<=23) then local v172=v78[2];v76[v172]=v76[v172]();elseif (v79>(3 + 21)) then local v273=v78[2 -0 ];v76[v273](v13(v76,v273 + (807 -(118 + 688)) ,v78[51 -(25 + 23) ]));elseif ((v76[v78[2]]==v76[v78[(2 -1) + 3 ]]) or (930>2101)) then v70=v70 + (1887 -(927 + 959)) ;else v70=v78[10 -7 ];end elseif (v79<=29) then if (v79<=27) then if ((v79==(758 -(16 + 716))) or (4352<4206)) then local v174=0 -0 ;local v175;while true do if (((4153>3086) and (v174==(97 -(11 + 86)))) or (2860<=181)) then v175=v78[4 -2 ];v76[v175]=v76[v175](v76[v175 + ((918 -632) -(175 + 110)) ]);break;end end elseif  not v76[v78[(6 -2) -2 ]] then v70=v70 + ((3 + 1) -3) ;else v70=v78[1799 -(503 + 967 + 326) ];end elseif ((3222>=1527) and (v79>28)) then local v176=v78[5 -3 ];v76[v176](v13(v76,v176 + 1 + (0 -0) ,v78[3]));else v76[v78[2]]=v60[v78[3]];end elseif (v79<=(1092 -(810 + 251))) then if (v79==30) then local v179=0 + 0 ;local v180;while true do if (v179==(0 + 0 + 0)) then v180=v78[2 + 0 ];v76[v180]=v76[v180](v13(v76,v180 + ((1064 -530) -(43 + 490)) ,v71));break;end end else do return v76[v78[735 -(711 + 22) ]];end end elseif ((1505<=2121) and (v79<=(123 -91))) then v76[v78[861 -(240 + 619) ]]={};elseif ((744==744) and (v79==(8 + (48 -23)))) then v76[v78[2]]=v76[v78[4 -1 ]];else v76[v78[2]]=v76[v78[(1881 -(446 + 1434)) + 2 ]][v76[v78[4]]];end elseif (v79<=(1796 -(1344 + 400))) then if ((v79<=(448 -(255 + 150))) or (1979>=2836)) then if (v79<=38) then if (v79<=36) then if ((v79==(28 + 7)) or (4654<=4050)) then if ((1833<=2668) and (v78[2 + 0 ]==v76[v78[16 -12 ]])) then v70=v70 + 1 ;else v70=v78[9 -6 ];end elseif (v76[v78[2]] or (2602<1496)) then v70=v70 + (1740 -(404 + (2618 -(1040 + 243)))) ;else v70=v78[409 -(183 + 223) ];end elseif (v79>(44 -7)) then if (v76[v78[2 + 0 ]]==v78[4]) then v70=v70 + 1 + 0 ;else v70=v78[3];end else v76[v78[(1011 -672) -(10 + 327) ]]=v59[v78[3 + 0 ]];end elseif (v79<=(378 -(118 + 220))) then if (v79>(13 + 26)) then local v184=1847 -(559 + 1288) ;local v185;local v186;local v187;while true do if (v184==(450 -(108 + 341))) then v187=(1931 -(609 + 1322)) + 0 ;for v348=v185,v78[4] do v187=v187 + (4 -3) ;v76[v348]=v186[v187];end break;end if (v184==(1493 -(711 + 782))) then v185=v78[3 -1 ];v186={v76[v185](v13(v76,v185 + 1 + 0 ,v78[1822 -(580 + 1239) ]))};v184=2 -(455 -(13 + 441)) ;end end else local v188=v78[2 + 0 ];local v189={v76[v188](v13(v76,v188 + 1 + 0 ,v71))};local v190=0 + 0 ;for v243=v188,v78[9 -5 ] do local v244=0;while true do if ((v244==((0 -0) + 0)) or (1020>2288)) then v190=v190 + (1168 -(645 + 522)) ;v76[v243]=v189[v190];break;end end end end elseif (v79<=(1831 -(1010 + 780))) then v76[v78[2 + 0 ]]=v76[v78[3]][v76[v78[19 -15 ]]];elseif ((3686==3686) and (v79==(123 -81))) then local v282=0;local v283;local v284;local v285;local v286;while true do if ((328==328) and (v282==((9149 -7312) -(1045 + 791)))) then v71=(v285 + v283) -(2 -(1 + 0)) ;v286=(0 -0) -0 ;v282=507 -(351 + 154) ;end if (v282==(1576 -(1281 + 293))) then for v379=v283,v71 do v286=v286 + (267 -(28 + 238)) ;v76[v379]=v284[v286];end break;end if (v282==(0 -(0 + 0))) then v283=v78[1561 -(1381 + 178) ];v284,v285=v69(v76[v283](v76[v283 + 1 + 0 + 0 ]));v282=1 + (0 -0) ;end end else local v287=0 + 0 ;local v288;while true do if ((3467>477) and (0==v287)) then v288=v78[(4 + 2) -4 ];v76[v288]=v76[v288]();break;end end end elseif (v79<=(25 + 22)) then if ((1511<3808) and (v79<=(515 -(381 + 89)))) then if (v79>(40 + 4)) then v76[v78[(3 -1) + 0 ]]=v59[v78[4 -1 ]];else v76[v78[1158 -(1074 + 82) ]]();end elseif (v79==(100 -54)) then if (v76[v78[1786 -(214 + 1570) ]] or (3288>=3541)) then v70=v70 + (1456 -(990 + 465)) ;else v70=v78[2 + 1 ];end else local v195=0 + 0 ;local v196;while true do if ((v195==(0 + 0)) or (2510>4919)) then v196=v78[7 -5 ];v76[v196](v76[v196 + (1727 -(1668 + 58)) ]);break;end end end elseif (v79<=49) then if (v79==(674 -(512 + 114))) then v76[v78[2]][v78[7 -4 ]]=v78[8 -4 ];else local v199=v78[6 -4 ];local v200,v201=v69(v76[v199](v13(v76,v199 + 1 + 0 ,v78[1 + 2 ])));v71=(v201 + v199) -1 ;local v202=0 + 0 ;for v245=v199,v71 do v202=v202 + (3 -(2 + 0)) ;v76[v245]=v200[v202];end end elseif (v79<=(2044 -(109 + 1885))) then local v203=v78[(819 + 652) -(1269 + 200) ];local v204=v76[v78[5 -(2 + 0) ]];v76[v203 + ((686 + 130) -(98 + 717)) ]=v204;v76[v203]=v204[v78[830 -(802 + 24) ]];elseif (v79==((86 + 1) -(469 -(153 + 280)))) then if ((4763==4763) and (v76[v78[2 -0 ]]==v76[v78[1 + (8 -5) ]])) then v70=v70 + 1 ;else v70=v78[3 + 0 ];end else v70=v78[1 + 2 ];end elseif ((v79<=61) or (3557==4540)) then if (v79<=(13 + 39 + 4)) then if ((v79<=(150 -96)) or (261>1267)) then if (v79==(176 -123)) then v76[v78[1 + 1 ]]=v78[2 + 1 ];else v76[v78[2 + 0 ]]=v76[v78[3]][v78[3 + 1 ]];end elseif ((1272<3858) and (4137>1848) and (v79>(26 + 29))) then local v212=1433 -(797 + 636) ;local v213;while true do if ((2436<=3134) and (v212==(0 -0))) then v213=v78[2];do return v13(v76,v213,v213 + v78[1622 -(1427 + 192) ] );end break;end end else local v214=v78[1 + 1 ];v76[v214](v76[v214 + (2 -1) ]);end elseif ((3723==3723) and (v79<=(53 + 5))) then if (v79>(26 + 31)) then do return;end else v76[v78[328 -(192 + 134) ]]=v78[3]~=(0 + 0) ;end elseif ((3664==3664) and (v79<=(1335 -(316 + 960)))) then v76[v78[2 + 0 ]]=v76[v78[3]][v78[4]];elseif ((1941>=450) and (v79>(47 + 7 + 6))) then if  not v76[v78[2 + 0 ]] then v70=v70 + 1 ;else v70=v78[3 + 0 ];end else local v291=v78[7 -(4 + 1) ];v76[v291]=v76[v291](v13(v76,v291 + ((839 -287) -(83 + 468)) ,v78[1809 -(743 + 459 + 604) ]));end elseif ((v79<=(303 -238)) or (4646<324)) then if (v79<=(104 -41)) then if (v79==(171 -109)) then local v218=v78[327 -(45 + 280) ];local v219={v76[v218](v13(v76,v218 + 1 + 0 ,v71))};local v220=0 + 0 ;for v248=v218,v78[3 + 1 ] do v220=v220 + 1 + 0 ;v76[v248]=v219[v220];end else for v251=v78[3 -1 ],v78[1914 -(340 + 1571) ] do v76[v251]=nil;end end elseif ((3833==3833) and (v79==(26 + 38))) then v76[v78[2]]=v78[1775 -(1733 + 39) ];else local v223=v78[5 -3 ];local v224,v225=v69(v76[v223](v76[v223 + (1035 -(125 + 909)) ]));v71=(v225 + v223) -(1949 -(1096 + 852)) ;local v226=0 + (667 -(89 + 578)) ;for v253=v223,v71 do v226=v226 + (1 -0) ;v76[v253]=v224[v226];end end elseif (v79<=67) then if (v79>(65 + 1)) then local v227=v78[514 -(409 + 103) ];local v228,v229=v69(v76[v227](v13(v76,v227 + (237 -(46 + 190)) ,v78[3])));v71=(v229 + v227) -(96 -(51 + 44)) ;local v230=0;for v256=v227,v71 do v230=v230 + 1 + 0 + 0 ;v76[v256]=v228[v230];end else for v259=v78[1319 -(1114 + 203) ],v78[(1515 -786) -(228 + 498) ] do v76[v259]=nil;end end elseif (v79<=68) then local v231=v78[1 + 1 ];v76[v231]=v76[v231](v13(v76,v231 + 1 + 0 ,v71));elseif ((v79==(732 -((1223 -(572 + 477)) + 489))) or (1240>3370)) then local v293=v78[2];local v294=v78[10 -6 ];local v295=v293 + 2 ;local v296={v76[v293](v76[v293 + (525 -(303 + 221)) ],v76[v295])};for v322=1,v294 do v76[v295 + v322 ]=v296[v322];end local v297=v296[1];if v297 then v76[v295]=v297;v70=v78[3];else v70=v70 + 1 + 0 ;end else do return;end end v70=v70 + (1270 -(231 + 1038)) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
