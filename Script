local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v84=0;while true do if (v84==0) then v19=v0(v3(v30,1,1));return "";end end else local v85=v2(v0(v30,16));if v19 then local v108=v5(v85,v19);v19=nil;return v108;else return v85;end end end);local function v20(v31,v32,v33) if v33 then local v86=(v31/(2^(v32-(878 -(282 + 595)))))%((5 -3)^(((v33-(2 -1)) -(v32-1)) + (1 -(1637 -(1523 + 114))))) ;return v86-(v86%(2 -1)) ;else local v87=619 -(555 + 64) ;local v88;while true do if (v87==((837 + 94) -(857 + 74))) then v88=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v88 + v88))>=v88) and (1 + 0)) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1273 -(226 + 1044)) );v18=v18 + ((974 -(892 + 65)) -13) ;return (v40 * (16777333 -(32 + 85))) + (v39 * (64226 + (3125 -1815))) + (v38 * (57 + 199)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,1 -0 ,370 -(87 + 263) ) * ((182 -(67 + 113))^(24 + 8))) + v41 ;local v45=v20(v42,51 -30 ,23 + 8 );local v46=((v20(v42,32)==1) and  -(3 -2)) or (953 -(802 + 150)) ;if (v45==(0 -(0 -0))) then if (v44==((0 + 0) -0)) then return v46 * 0 ;else v45=1;v43=0;end elseif (v45==(1490 + 557)) then return ((v44==((1771 -774) -(908 + 7 + 82))) and (v46 * (((793 -(368 + 423)) -1)/(0 + 0)))) or (v46 * NaN) ;end return v8(v46,v45-(1344 -321) ) * (v43 + (v44/((1189 -(1069 + 118))^(117 -65)))) ;end local function v25(v47) local v48=(1486 -(998 + 488)) -0 ;local v49;local v50;while true do if (v48==(19 -(4 + 6 + 8))) then v49=v3(v16,v18,(v18 + v47) -(3 -2) );v18=v18 + v47 ;v48=2;end if (2==v48) then v50={};for v109=443 -(416 + 26) , #v49 do v50[v109]=v2(v1(v3(v49,v109,v109)));end v48=(8 + 1) -6 ;end if (v48==(0 + (772 -(201 + 571)))) then v49=nil;if  not v47 then v47=v23();if (v47==(0 -0)) then return "";end end v48=439 -(145 + 293) ;end if (v48==(433 -(44 + 386))) then return v6(v50);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v89,v90,v91,v92,v93,v94,v95,v96) local v89=(function() return 1045 -(49 + 996) ;end)();local v90=(function() return;end)();local v92=(function() return;end)();while true do if (v89~=(0 + 0)) then else local v115=(function() return 1474 -(1329 + 145) ;end)();local v116=(function() return;end)();while true do if (v115==0) then v116=(function() return 971 -(140 + 831) ;end)();while true do if (v116==(1851 -(1409 + 441))) then v89=(function() return  #"!";end)();break;end if (v116~=(718 -(15 + 703))) then else v90=(function() return v91();end)();v92=(function() return nil;end)();v116=(function() return 1;end)();end end break;end end end if (v89~= #">") then else if (v90== #":") then v92=(function() return v91()~=0 ;end)();elseif (v90==(1 + 1)) then v92=(function() return v93();end)();elseif (v90== #"91(") then v92=(function() return v94();end)();end v95[v96]=(function() return v92;end)();break;end end return v89,v90,v91,v92,v93,v94,v95,v96;end;end)();local v52=(function() return function(v97,v98,v99) local v100=(function() return 0;end)();while true do if (v100==(438 -(262 + 176))) then local v118=(function() return 0;end)();while true do if (v118==0) then v97[v98-#"}" ]=(function() return v99();end)();return v97,v98,v99;end end end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v66= #",",v57 do FlatIdent_1743D,Type,v21,Cons,v24,v25,v58,v66=(function() return v51(FlatIdent_1743D,Type,v21,Cons,v24,v25,v58,v66);end)();end v56[ #"91("]=(function() return v21();end)();for v67= #"<",v23() do local v68=(function() return v21();end)();if (v20(v68, #"~", #"}")~=0) then else local v104=(function() return 0;end)();local v105=(function() return;end)();local v106=(function() return;end)();local v107=(function() return;end)();while true do if (v104~=0) then else local v119=(function() return 1721 -(345 + 1376) ;end)();while true do if (v119==(688 -(198 + 490))) then v105=(function() return v20(v68,8 -6 , #"19(");end)();v106=(function() return v20(v68, #"asd1",6);end)();v119=(function() return 1;end)();end if (v119==(2 -1)) then v104=(function() return 1;end)();break;end end end if ((1209 -(696 + 510))==v104) then if (v20(v106, #"asd", #"gha")~= #"~") then else v107[ #".dev"]=(function() return v58[v107[ #"xnxx"]];end)();end v53[v67]=(function() return v107;end)();break;end if (v104~=1) then else local v121=(function() return 0;end)();local v122=(function() return;end)();while true do if (v121==0) then v122=(function() return 0 -0 ;end)();while true do if (v122==(1263 -(1091 + 171))) then v104=(function() return 2;end)();break;end if (0~=v122) then else local v127=(function() return 0 + 0 ;end)();while true do if (v127==(3 -2)) then v122=(function() return 1;end)();break;end if (v127==(0 -0)) then v107=(function() return {v22(),v22(),nil,nil};end)();if (v105==0) then local v296=(function() return 0 -0 ;end)();while true do if (v296==0) then v107[ #"xxx"]=(function() return v22();end)();v107[ #"0313"]=(function() return v22();end)();break;end end elseif (v105== #"[") then v107[ #"gha"]=(function() return v23();end)();elseif (v105==(700 -(208 + 490))) then v107[ #"91("]=(function() return v23() -(2^(2 + 14)) ;end)();elseif (v105== #"91(") then local v360=(function() return 0 + 0 ;end)();local v361=(function() return;end)();while true do if ((836 -(660 + 176))==v360) then v361=(function() return 0;end)();while true do if (v361==0) then v107[ #"xxx"]=(function() return v23() -(2^(2 + 14)) ;end)();v107[ #"0313"]=(function() return v22();end)();break;end end break;end end end v127=(function() return 1;end)();end end end end break;end end end if (v104==2) then if (v20(v106, #"\\", #"\\")~= #"!") then else v107[204 -(14 + 188) ]=(function() return v58[v107[677 -(534 + 141) ]];end)();end if (v20(v106,2,2)== #",") then v107[ #"asd"]=(function() return v58[v107[ #"-19"]];end)();end v104=(function() return 2 + 1 ;end)();end end end end for v69= #"|",v23() do v54,v69,v28=(function() return v52(v54,v69,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1 + (1061 -(810 + 251)) ];local v64=v60[2];local v65=v60[3 + 0 ];return function(...) local v70=v63;local v71=v64;local v72=v65;local v73=v27;local v74=1 -0 ;local v75= -1;local v76={};local v77={...};local v78=v12("#",...) -(2 -1) ;local v79={};local v80={};for v101=0 + 0 + 0 ,v78 do if ((v101>=v72) or (4986<=1574)) then v76[v101-v72 ]=v77[v101 + 1 + 0 ];else v80[v101]=v77[v101 + (397 -(115 + 281)) ];end end local v81=(v78-v72) + (2 -(1 + 0)) ;local v82;local v83;while true do v82=v70[v74];v83=v82[1 + 0 ];if (v83<=31) then if (v83<=(36 -21)) then if (v83<=((23 + 2) -(551 -(43 + 490)))) then if (v83<=((1603 -(711 + 22)) -(550 + (1225 -908)))) then if (v83<=(1 -0)) then if (v83>(0 -0)) then local v128=0 -0 ;local v129;while true do if (v128==(285 -(134 + 151))) then v129=v82[1667 -(970 + 695) ];v80[v129]=v80[v129](v13(v80,v129 + (1 -0) ,v82[1993 -(582 + 1408) ]));break;end end elseif (v80[v82[6 -4 ]]==v80[v82[4 -0 ]]) then v74=v74 + (3 -2) ;else v74=v82[1827 -(1195 + 629) ];end elseif ((4426>172) and (v83==2)) then v80[v82[2 -0 ]]=v80[v82[244 -(187 + 54) ]];else v80[v82[782 -(162 + 618) ]]={};end elseif ((586>455) and (v83<=(4 + 1))) then if (v83>(3 + 1)) then if ((826==826) and (v82[3 -1 ]==v80[v82[6 -(861 -(240 + 619)) ]])) then v74=v74 + 1 + 0 ;else v74=v82[1639 -(1373 + 263) ];end else v80[v82[1002 -(451 + 549) ]]=v80[v82[1 + 2 ]][v82[5 -1 ]];end elseif ((v83>(9 -3)) or (4019>4441)) then if v80[v82[1 + 1 ]] then v74=v74 + (1385 -(746 + 638)) ;else v74=v82[3];end else local v135=v82[1 + 1 ];v80[v135]=v80[v135]();end elseif (v83<=11) then if (v83<=(13 -4)) then if (v83>(349 -((346 -128) + 123))) then do return;end else v80[v82[1583 -(1535 + 4 + 42) ]][v82[3]]=v82[4 + 0 ];end elseif (v83==(2 + 8)) then v80[v82[(2306 -(1344 + 400)) -(306 + 254) ]]=v80[v82[1 + (407 -(255 + 150)) ]];elseif ((2017<4261) and  not v80[v82[3 -1 ]]) then v74=v74 + (1468 -(899 + 568)) ;else v74=v82[3];end elseif (v83<=(9 + 4)) then if ((4716>80) and (v83==(28 -16))) then v80[v82[(477 + 128) -(268 + 335) ]]=v82[293 -(60 + 230) ]~=((307 + 265) -(426 + 146)) ;else v74=v82[3];end elseif (v83==(2 + 12)) then for v232=v82[2],v82[1459 -(282 + 1174) ] do v80[v232]=nil;end else local v143=v71[v82[814 -(569 + 242) ]];local v144;local v145={};v144=v10({},{__index=function(v234,v235) local v236=v145[v235];return v236[2 -1 ][v236[2]];end,__newindex=function(v237,v238,v239) local v240=0 + 0 ;local v241;while true do if (0==v240) then v241=v145[v238];v241[1025 -(706 + 318) ][v241[1253 -(721 + 530) ]]=v239;break;end end end});for v242=(3011 -(404 + 1335)) -(945 + 326) ,v82[9 -5 ] do local v243=0 + 0 ;local v244;while true do if (v243==(700 -(271 + 429))) then v74=v74 + 1 + 0 ;v244=v70[v74];v243=1501 -(1408 + 92) ;end if (v243==(1087 -(461 + 625))) then if ((v244[1289 -(993 + (701 -(183 + 223))) ]==(1 + (1 -0))) or (3507==3272)) then v145[v242-1 ]={v80,v244[1 + 2 ]};else v145[v242-(1 + 0) ]={v61,v244[532 -(406 + 123) ]};end v79[ #v79 + 1 ]=v145;break;end end end v80[v82[2 + 0 ]]=v29(v143,v144,v62);end elseif ((v83<=(1792 -(1749 + 20))) or (876>=3075)) then if (v83<=(5 + 14)) then if (v83<=(1339 -(1249 + 27 + 46))) then if (v83>(6 + 10)) then local v147=v82[(1484 -(10 + 327)) -(466 + 679) ];local v148,v149=v73(v80[v147](v13(v80,v147 + (2 -1) ,v82[8 -5 ])));v75=(v149 + v147) -(1901 -(106 + 1794)) ;local v150=0 + 0 ;for v245=v147,v75 do v150=v150 + 1 + 0 ;v80[v245]=v148[v150];end else local v151=v82[2];do return v13(v80,v151,v151 + v82[8 -(4 + 1) ] );end end elseif (v83==((386 -(118 + 220)) -30)) then local v152=114 -(4 + 110) ;local v153;local v154;local v155;local v156;while true do if (v152==((195 + 389) -(57 + 527))) then v153=v82[1429 -(41 + 1386) ];v154,v155=v73(v80[v153](v13(v80,v153 + (104 -(17 + 86)) ,v82[3 + 0 ])));v152=1;end if (v152==(3 -1)) then for v323=v153,v75 do v156=v156 + 1 ;v80[v323]=v154[v156];end break;end if (v152==(2 -1)) then v75=(v155 + v153) -1 ;v156=0;v152=168 -(122 + 44) ;end end else local v157=v82[2 -0 ];v80[v157](v80[v157 + (3 -(451 -(108 + 341))) ]);end elseif ((4352>2554) and (v83<=21)) then if (v83==(17 + 3)) then local v158=0;local v159;local v160;while true do if (v158==(0 + 0)) then v159=v82[2];v160=v80[v82[5 -2 ]];v158=66 -(30 + 35) ;end if (v158==(1 + 0)) then v80[v159 + (1258 -(1043 + 214)) ]=v160;v80[v159]=v160[v82[15 -11 ]];break;end end else local v161=v71[v82[1215 -(323 + 889) ]];local v162;local v163={};v162=v10({},{__index=function(v248,v249) local v250=v163[v249];return v250[2 -1 ][v250[582 -(361 + 219) ]];end,__newindex=function(v251,v252,v253) local v254=v163[v252];v254[1][v254[322 -(53 + 267) ]]=v253;end});for v256=1 + 0 ,v82[417 -(15 + 398) ] do local v257=(4151 -3169) -(18 + 964) ;local v258;while true do if (v257==((1496 -(711 + 782)) -2)) then if (v258[1 + 0 ]==2) then v163[v256-(1 + 0) ]={v80,v258[129 -(116 + 10) ]};else v163[v256-1 ]={v61,v258[6 -3 ]};end v79[ #v79 + 1 + 0 ]=v163;break;end if (v257==(0 + 0)) then v74=v74 + (470 -(270 + 199)) + 0 + 0 ;v258=v70[v74];v257=2 -1 ;end end end v80[v82[(1823 -(580 + 1239)) -2 ]]=v29(v161,v162,v62);end elseif (v83==((4676 -3103) -(1126 + 425))) then if ( not v80[v82[407 -(118 + 287) ]] or (4406<4043)) then v74=v74 + ((3 + 0) -2) ;else v74=v82[(41 + 1083) -(118 + 1003) ];end else v74=v82[3];end elseif ((v83<=(78 -51)) or (1889>=3383)) then if ((1892<=2734) and (v83<=(402 -(142 + 235)))) then if (v83>24) then if (v80[v82[2]]==v82[(8 + 10) -14 ]) then v74=v74 + 1 + 0 ;else v74=v82[980 -(553 + 424) ];end else local v166=0 -0 ;local v167;local v168;while true do if (v166==0) then v167=v82[2 + 0 ];v168={};v166=1 + 0 ;end if ((1923<2218) and (v166==(1 + 0))) then for v328=1 + 0 , #v79 do local v329=v79[v328];for v334=0 + 0 , #v329 do local v335=v329[v334];local v336=v335[2 -1 ];local v337=v335[5 -3 ];if ((v336==v80) and (v337>=v167)) then v168[v337]=v336[v337];v335[1]=v168;end end end break;end end end elseif (v83==(58 -32)) then local v169=v82[1 + 1 ];local v170=v82[19 -15 ];local v171=v169 + (755 -(239 + 514)) ;local v172={v80[v169](v80[v169 + 1 ],v80[v171])};for v259=1330 -(496 + 301 + 532) ,v170 do v80[v171 + v259 ]=v172[v259];end local v173=v172[1];if ((2173>379) and v173) then v80[v171]=v173;v74=v82[3 + 0 ];else v74=v74 + 1 + 0 ;end else local v174=(1167 -(645 + 522)) -0 ;local v175;while true do if (v174==(1202 -(373 + 829))) then v175=v82[(2523 -(1010 + 780)) -(476 + 255) ];v80[v175](v13(v80,v175 + 1 ,v82[1133 -(369 + 761) ]));break;end end end elseif (v83<=(17 + 12)) then if (v83==28) then local v176=v82[2 -0 ];local v177={v80[v176](v13(v80,v176 + (239 -(64 + 174)) ,v82[1 + 2 ]))};local v178=0 -0 ;for v262=v176,v82[4] do v178=v178 + ((337 + 0) -(144 + 192)) ;v80[v262]=v177[v178];end else local v179=216 -(42 + 174) ;local v180;while true do if ((v179==0) or (2591==3409)) then v180=v82[2 + 0 ];v80[v180]=v80[v180](v13(v80,v180 + 1 ,v82[3 + 0 ]));break;end end end elseif (v83>(13 + 17)) then v80[v82[2]]=v82[1507 -(363 + 1141) ];else local v183=v82[2];local v184={v80[v183](v80[v183 + 1 ])};local v185=0 -0 ;for v265=v183,v82[3 + 1 ] do v185=v185 + 1 ;v80[v265]=v184[v185];end end elseif ((4514>3324) and (v83<=47)) then if (v83<=(30 + 9)) then if ((v83<=(2010 -(1913 + 62))) or (208>=4828)) then if ((v83<=(21 + 12)) or (1583>3567)) then if ((v83>((400 -316) -(152 -100))) or (1313==794)) then v80[v82[1935 -(565 + 1368) ]]=v82[(1847 -(1045 + 791)) -8 ]~=(1661 -((3738 -2261) + (280 -96))) ;elseif ((3174>2902) and (v82[2 -0 ]==v80[v82[4 + 0 ]])) then v74=v74 + (857 -(564 + (797 -(351 + 154)))) ;else v74=v82[4 -1 ];end elseif ((4120<=4260) and (v83==(102 -68))) then v80[v82[2]]=v80[v82[3]][v82[(1882 -(1281 + 293)) -(244 + 60) ]];else v80[v82[2]]=v62[v82[3 + 0 ]];end elseif (v83<=((779 -(28 + 238)) -((91 -50) + 435))) then if (v83==(1037 -((2497 -(1381 + 178)) + 63))) then local v191=0 + 0 + 0 ;local v192;local v193;while true do if (v191==1) then v80[v192 + (1126 -(936 + 189)) ]=v193;v80[v192]=v193[v82[4]];break;end if (v191==(0 + 0 + 0)) then v192=v82[2];v193=v80[v82[1616 -(1565 + 48) ]];v191=1 + 0 ;end end else v80[v82[1140 -(782 + 356) ]]=v62[v82[270 -(176 + 91) ]];end elseif ((v83==(98 -60)) or (883>4778)) then local v196=0;local v197;while true do if (v196==0) then v197=v82[2 -0 ];v80[v197](v13(v80,v197 + 1 ,v82[1095 -(975 + 117) ]));break;end end else v61[v82[1878 -(157 + 733 + 985) ]]=v80[v82[2]];end elseif ((v83<=(35 + 8)) or (3620>=4891)) then if (v83<=41) then if (v83==(141 -101)) then do return v80[v82[2]];end else local v200=v82[6 -4 ];local v201=v82[4];local v202=v200 + (1020 -((2402 -1705) + 321)) ;local v203={v80[v200](v80[v200 + (471 -(381 + 89)) ],v80[v202])};for v268=2 -1 ,v201 do v80[v202 + v268 ]=v203[v268];end local v204=v203[1];if v204 then v80[v202]=v204;v74=v82[5 -2 ];else v74=v74 + 1 ;end end elseif ((4258>937) and (v83>(96 -54))) then for v271=v82[1 + 1 ],v82[5 -2 ] do v80[v271]=nil;end else local v205=v82[5 -3 ];v80[v205]=v80[v205](v13(v80,v205 + (1228 -(322 + 905)) ,v75));end elseif (v83<=(656 -(602 + 9))) then if ((v83==(1233 -(449 + 657 + 83))) or (4869<906)) then v80[v82[(592 + 282) -(826 + 46) ]]={};elseif (v80[v82[949 -(245 + 702) ]]==v80[v82[12 -8 ]]) then v74=v74 + 1 + 0 ;else v74=v82[3];end elseif ((v83>46) or (1225>4228)) then local v208=0;local v209;while true do if (v208==0) then v209=v82[1900 -(260 + 1638) ];v80[v209]=v80[v209](v13(v80,v209 + (441 -(382 + 58)) ,v75));break;end end else v61[v82[9 -6 ]]=v80[v82[2 + 0 ]];end elseif (v83<=(113 -58)) then if ((3328>2238) and (v83<=(151 -100))) then if (v83<=(1254 -(902 + 303))) then if (v83>(105 -57)) then v80[v82[2]]=v80[v82[3]][v80[v82[(14 -5) -5 ]]];else v80[v82[2]]();end elseif (v83==50) then local v214=v82[(1157 -(1074 + 82)) + (1 -0) ];local v215={v80[v214](v13(v80,v214 + 1 ,v82[217 -(22 + 192) ]))};local v216=0;for v273=v214,v82[687 -(483 + 200) ] do v216=v216 + ((3248 -(214 + 1570)) -(1404 + 59)) ;v80[v273]=v215[v216];end else v80[v82[5 -3 ]]=v80[v82[3 -0 ]][v80[v82[769 -(468 + 297) ]]];end elseif (v83<=(615 -(334 + 228))) then if ((3839>1405) and (v83==(175 -(1578 -(990 + 465))))) then local v219=(0 + 0) -0 ;local v220;local v221;while true do if (v219==(1 -0)) then for v330=1 + 0 , #v79 do local v331=0;local v332;while true do if ((v331==(236 -(141 + 95))) or (1293<=507)) then v332=v79[v330];for v355=0 + 0 , #v332 do local v356=0 -0 ;local v357;local v358;local v359;while true do if ((2 -1)==v356) then v359=v357[2];if ((v358==v80) and (v359>=v220)) then local v365=0 + 0 + 0 ;while true do if (v365==(0 -0)) then v221[v359]=v358[v359];v357[1 + 0 ]=v221;break;end end end break;end if (v356==0) then v357=v332[v355];v358=v357[1 + 0 + 0 ];v356=1 -(0 -0) ;end end end break;end end end break;end if ((v219==(0 + 0)) or (2896<805)) then v220=v82[2];v221={};v219=164 -(92 + 71) ;end end else v80[v82[1 + (1727 -(1668 + 58)) ]]();end elseif ((2316==2316) and (v83==54)) then v80[v82[2 -0 ]][v82[768 -(574 + 191) ]]=v82[4 + 0 ];else v80[v82[4 -(628 -(512 + 114)) ]]=v82[2 + 1 ];end elseif ((v83<=((2367 -1459) -(254 + 595))) or (2570==1533)) then if ((v83<=(183 -(55 + 71))) or (883==1460)) then if ((v83>(72 -16)) or (4619<=999)) then v80[v82[1792 -(573 + (2515 -1298)) ]]=v61[v82[8 -5 ]];else local v228=0 + 0 ;local v229;while true do if ((0 -0)==v228) then v229=v82[6 -4 ];v80[v229](v80[v229 + 1 ]);break;end end end elseif ((v83==(997 -(714 + 225))) or (3410>4116)) then if (v80[v82[5 -3 ]] or (903>=3059)) then v74=v74 + 1 ;else v74=v82[3 -0 ];end elseif (v80[v82[2]]==v82[1 + 3 ]) then v74=v74 + (1 -0) ;else v74=v82[809 -(55 + 63 + 688) ];end elseif (v83<=61) then if (v83==(108 -(25 + 23))) then do return;end else do return v80[v82[2]];end end elseif (v83<=62) then v80[v82[1 + 1 ]]=v61[v82[3]];elseif (v83>((365 + 1584) -(927 + 959))) then local v290=0 -0 ;local v291;while true do if ((v290==0) or (3976<2857)) then v291=v82[2];v80[v291]=v80[v291]();break;end end else local v292=732 -(16 + 716) ;local v293;local v294;local v295;while true do if (v292==(1 -0)) then v295=97 -(10 + 1 + 86) ;for v347=v293,v82[9 -5 ] do v295=v295 + (286 -(175 + 110)) ;v80[v347]=v294[v295];end break;end if (v292==0) then v293=v82[4 -2 ];v294={v80[v293](v80[v293 + (1797 -(503 + 1293)) ])};v292=2 -1 ;end end end v74=v74 + 1 + 0 ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
