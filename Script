local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then local v87=0;while true do if (v87==0) then v19=v0(v3(v30,1,1));return "";end end else local v88=v2(v0(v30,16));if v19 then local v106=0;local v107;while true do if (v106==0) then v107=v5(v88,v19);v19=nil;v106=1;end if (v106==1) then return v107;end end else return v88;end end end);local function v20(v31,v32,v33) if v33 then local v89=(v31/(2^(v32-1)))%((5 -3)^(((v33-1) -(v32-(2 -(1 + 0)))) + (1 -(0 + 0)))) ;return v89-(v89%(2 -(878 -(282 + 595)))) ;else local v90=(621 -(555 + 64))^(v32-(932 -(857 + 74))) ;return (((v31%(v90 + v90))>=v90) and (569 -((2004 -(1523 + 114)) + 201))) or (927 -(214 + 713)) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 );v18=v18 + 2 + 0 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=1065 -(68 + 997) ;local v38;local v39;local v40;local v41;while true do if (v37==(957 -(892 + 65))) then v38,v39,v40,v41=v1(v16,v18,v18 + ((3036 -1763) -(226 + 1044)) );v18=v18 + 4 ;v37=4 -3 ;end if (v37==(118 -((58 -26) + 85))) then return (v41 * 16777216) + (v40 * (64226 + 1310)) + (v39 * (57 + 199)) + v38 ;end end end local function v24() local v42=v23();local v43=v23();local v44=1 -0 ;local v45=(v20(v43,1188 -(1069 + 118) ,45 -25 ) * (2^(382 -(87 + 263)))) + v42 ;local v46=v20(v43,4 + (789 -(201 + 571)) ,211 -(67 + 113) );local v47=((v20(v43,24 + 8 )==(2 -1)) and  -(1 + 0)) or (3 -2) ;if (v46==(0 -(1138 -(116 + 1022)))) then if (v45==(0 -(0 -0))) then return v47 * (952 -(802 + 89 + 61)) ;else v46=3 -2 ;v44=0 -0 ;end elseif (v46==(3712 -1665)) then return ((v45==(0 + 0)) and (v47 * (((3643 -2645) -(915 + 82))/((0 -0) -0)))) or (v47 * NaN) ;end return v8(v47,v46-(325 + 698) ) * (v44 + (v45/((2 + 0)^(68 -16)))) ;end local function v25(v48) local v49;if  not v48 then v48=v23();if (v48==(859 -(814 + 45))) then return "";end end v49=v3(v16,v18,(v18 + v48) -(1 + 0) );v18=v18 + v48 ;local v50={};for v66=2 -1 , #v49 do v50[v66]=v2(v1(v3(v49,v66,v66)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return function(v91,v92,v93,v94,v95,v96,v97,v98) local v91=(function() return 0 -0 ;end)();local v92=(function() return;end)();local v94=(function() return;end)();while true do if ((0 + 0)==v91) then local v112=(function() return 0;end)();local v113=(function() return;end)();while true do if (v112==(0 -0)) then v113=(function() return 0 + 0 ;end)();while true do if (v113~=(652 -(494 + 157))) then else v91=(function() return  #"}";end)();break;end if ((0 -0)~=v113) then else v92=(function() return v93();end)();v94=(function() return nil;end)();v113=(function() return 1 + 0 ;end)();end end break;end end end if (v91== #"~") then if (v92== #".") then v94=(function() return v93()~=0 ;end)();elseif (v92==2) then v94=(function() return v95();end)();elseif (v92== #"asd") then v94=(function() return v96();end)();end v97[v98]=(function() return v94;end)();break;end end return v91,v92,v93,v94,v95,v96,v97,v98;end;end)();local v52=(function() return function(v99,v100,v101) local v102=(function() return 0;end)();local v103=(function() return;end)();while true do if (v102==0) then v103=(function() return 0 + 0 ;end)();while true do if (v103==(0 + 0)) then local v121=(function() return 836 -(660 + 176) ;end)();while true do if ((0 + 0)~=v121) then else v99[v100-#"!" ]=(function() return v101();end)();return v99,v100,v101;end end end end break;end end end;end)();local v53=(function() return {};end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {v53,v54,nil,v55};end)();local v57=(function() return v23();end)();local v58=(function() return {};end)();for v68= #"[",v57 do FlatIdent_43862,Type,v21,Cons,v24,v25,v58,v68=(function() return v51(FlatIdent_43862,Type,v21,Cons,v24,v25,v58,v68);end)();end v56[ #"xxx"]=(function() return v21();end)();for v69= #"[",v23() do local v70=(function() return 202 -(14 + 188) ;end)();local v71=(function() return;end)();while true do if (v70==0) then v71=(function() return v21();end)();if (v20(v71, #"{", #"<")==0) then local v117=(function() return 0;end)();local v118=(function() return;end)();local v119=(function() return;end)();local v120=(function() return;end)();while true do if (v117~=2) then else if (v20(v119, #",", #"!")== #"|") then v120[2]=(function() return v58[v120[677 -(534 + 141) ]];end)();end if (v20(v119,1 + 1 ,2)== #"|") then v120[ #"gha"]=(function() return v58[v120[ #"xxx"]];end)();end v117=(function() return 3 + 0 ;end)();end if (v117==(1 + 0)) then local v122=(function() return 0 -0 ;end)();local v123=(function() return;end)();while true do if (v122==0) then v123=(function() return 0;end)();while true do if (v123==(1 -0)) then v117=(function() return 5 -3 ;end)();break;end if (v123==0) then v120=(function() return {v22(),v22(),nil,nil};end)();if (v118==0) then local v129=(function() return 0;end)();local v130=(function() return;end)();while true do if (v129==(0 + 0)) then v130=(function() return 0 + 0 ;end)();while true do if (v130~=0) then else v120[ #"xxx"]=(function() return v22();end)();v120[ #"xnxx"]=(function() return v22();end)();break;end end break;end end elseif (v118== #"{") then v120[ #"19("]=(function() return v23();end)();elseif (v118==(398 -(115 + 281))) then v120[ #"xxx"]=(function() return v23() -(2^16) ;end)();elseif (v118== #"xnx") then local v339=(function() return 0 -0 ;end)();local v340=(function() return;end)();while true do if (v339~=(0 + 0)) then else v340=(function() return 0;end)();while true do if (v340==(0 -0)) then v120[ #"nil"]=(function() return v23() -(2^16) ;end)();v120[ #"0836"]=(function() return v22();end)();break;end end break;end end end v123=(function() return 1;end)();end end break;end end end if ((0 -0)~=v117) then else v118=(function() return v20(v71,869 -(550 + 317) , #"xnx");end)();v119=(function() return v20(v71, #"0313",8 -2 );end)();v117=(function() return 1;end)();end if (v117==3) then if (v20(v119, #"-19", #"xxx")~= #"\\") then else v120[ #"0313"]=(function() return v58[v120[ #"asd1"]];end)();end v53[v69]=(function() return v120;end)();break;end end end break;end end end for v72= #"<",v23() do v54,v72,v28=(function() return v52(v54,v72,v28);end)();end return v56;end local function v29(v60,v61,v62) local v63=v60[1 -0 ];local v64=v60[2];local v65=v60[8 -5 ];return function(...) local v73=v63;local v74=v64;local v75=v65;local v76=v27;local v77=286 -(134 + 151) ;local v78= -1;local v79={};local v80={...};local v81=v12("#",...) -(1666 -(970 + 695)) ;local v82={};local v83={};for v104=(733 -(711 + 22)) -0 ,v81 do if (v104>=v75) then v79[v104-v75 ]=v80[v104 + (1991 -(582 + 1408)) ];else v83[v104]=v80[v104 + (3 -2) ];end end local v84=(v81-v75) + (1 -0) ;local v85;local v86;while true do local v105=0 -0 ;while true do if ((v105==(0 -0)) or (2570==1533)) then v85=v73[v77];v86=v85[1];v105=1825 -((2054 -(240 + 619)) + 629) ;end if ((1 -0)==v105) then if ((v86<=31) or (883==1460)) then if ((v86<=(256 -(187 + 54))) or (2666<2011) or (4619<=999)) then if ((v86<=(787 -(162 + 618))) or (3410>4116)) then if (v86<=(3 + 0)) then if (v86<=(1 + 0)) then if ((4352>=2554) and (v86>(0 + 0))) then v83[v85[3 -1 ]][v85[4 -1 ]]=v85[1 + 3 ];else v83[v85[1638 -(1373 + 263) ]]=v83[v85[1003 -(451 + 549) ]][v85[2 + 2 ]];end elseif (v86==(2 -0)) then local v135=v85[2 -(0 -0) ];local v136={};for v234=1385 -(50 + 696 + 638) , #v82 do local v235=v82[v234];for v272=0, #v235 do local v273=0 + 0 ;local v274;local v275;local v276;while true do if (v273==((1745 -(1344 + 400)) -0)) then v276=v274[343 -(218 + 123) ];if ((v275==v83) and (v276>=v135)) then local v343=1581 -(1535 + 46) ;while true do if ((v343==0) or (903>=3059)) then v136[v276]=v275[v276];v274[(406 -(255 + 150)) + 0 ]=v136;break;end end end break;end if ((v273==(0 + 0)) or (3976<2857)) then v274=v235[v272];v275=v274[561 -(242 + 64 + 254) ];v273=1 + 0 ;end end end end else local v137=v85[3 -1 ];v83[v137](v83[v137 + (1468 -(899 + 568)) ]);end elseif ((v86<=(4 + 1 + 0)) or (4406<4043)) then if ((4930>2307) and (v86==(9 -5))) then if (v83[v85[605 -(268 + (1431 -1096)) ]]==v85[4]) then v77=v77 + (291 -(60 + 230)) ;else v77=v85[3];end else v77=v85[575 -(426 + 146) ];end elseif ((v86==(1 + 5)) or (4046<1291)) then do return;end else v77=v85[1459 -(282 + 1174) ];end elseif ((v86<=(822 -(569 + (781 -539)))) or (1889>=3383) or (4241==3545)) then if (v86<=(25 -16)) then if (v86>(1 + (1746 -(404 + 1335)))) then local v140=v85[(1432 -(183 + 223)) -(706 + 318) ];v83[v140]=v83[v140](v13(v83,v140 + (1252 -(721 + 530)) ,v78));else v83[v85[1273 -(945 + 326) ]]=v62[v85[3 -0 ]];end elseif ((1892<=2734) and (v86==(24 -(10 + 4)))) then local v144=v85[1 + 1 + 0 ];local v145=v85[4];local v146=v144 + (702 -((608 -(10 + 327)) + 429)) ;local v147={v83[v144](v83[v144 + (1501 -(1408 + 92)) ],v83[v146])};for v236=1087 -(461 + 625) ,v145 do v83[v146 + v236 ]=v147[v236];end local v148=v147[1289 -(993 + 295) ];if v148 then local v278=0 + 0 ;while true do if (v278==(1171 -(418 + 753))) then v83[v146]=v148;v77=v85[2 + 1 ];break;end end else v77=v77 + 1 + 0 ;end else do return v83[v85[2]];end end elseif ((1923<2218) and (v86<=13)) then if (v86>(4 + 8)) then if ((2173>379) and (v83[v85[2]]==v83[v85[2 + 2 ]])) then v77=v77 + (530 -(406 + 123)) ;else v77=v85[1772 -(1749 + 20) ];end else v83[v85[1 + 1 ]]=v85[1325 -(1249 + 73) ]~=(0 + 0) ;end elseif ((v86==(1159 -(466 + 473 + 206))) or (4048>4232)) then v83[v85[2]]=v83[v85[3]];else v83[v85[4 -2 ]]=v83[v85[8 -5 ]][v85[1904 -(106 + 1794) ]];end elseif (v86<=((346 -(118 + 220)) + 15)) then if (v86<=(5 + 5 + 9)) then if ((v86<=17) or (2591==3409) or (1750>=3473)) then if ((4514>3324) and (v86>(46 -30))) then v83[v85[2]]={};else local v155=v85[2];v83[v155](v13(v83,v155 + (2 -1) ,v85[117 -((453 -(108 + 341)) + 110) ]));end elseif (v86>(602 -(57 + 237 + 290))) then v61[v85[1430 -(41 + 1386) ]]=v83[v85[105 -(17 + 86) ]];else do return v83[v85[(8 -6) + 0 ]];end end elseif ((3166==3166) and ((v86<=21) or (208>=4828))) then if ((1763<3724) and (v86>(44 -24))) then v83[v85[5 -3 ]][v85[169 -(122 + 44) ]]=v85[(1499 -(711 + 782)) -(3 -1) ];else do return;end end elseif (v86==(72 -(519 -(270 + 199)))) then local v160=v85[2 + 0 ];v83[v160]=v83[v160]();else v83[v85[1 + 1 ]]=v85[5 -2 ];end elseif (v86<=(92 -(30 + 35))) then if (v86<=(18 + 7)) then if (v86>(1281 -(339 + 704 + (2033 -(580 + 1239))))) then local v164=v74[v85[11 -8 ]];local v165;local v166={};v165=v10({},{__index=function(v239,v240) local v241=1212 -(323 + 889) ;local v242;while true do if ((57<=2723) and (v241==(0 -0))) then v242=v166[v240];return v242[581 -(361 + 219) ][v242[2]];end end end,__newindex=function(v243,v244,v245) local v246=v166[v244];v246[1][v246[322 -(53 + 267) ]]=v245;end});for v248=1 + 0 ,v85[417 -(15 + 398) ] do v77=v77 + (983 -(18 + 964)) ;local v249=v73[v77];if ((v249[3 -2 ]==14) or (2070==443)) then v166[v248-1 ]={v83,v249[3]};else v166[v248-(1 + 0) ]={v61,v249[129 -(116 + 10) ]};end v82[ #v82 + 1 + 0 ]=v166;end v83[v85[740 -(542 + 196) ]]=v29(v164,v165,v62);else for v251=v85[3 -1 ],v85[3] do v83[v251]=nil;end end elseif (v86>(8 + 18)) then v83[v85[2]]=v85[2 + 1 ]~=(0 + 0) ;else local v169=v85[4 -2 ];local v170,v171=v76(v83[v169](v13(v83,v169 + (2 -1) ,v85[(677 + 877) -(1126 + 425) ])));v78=(v171 + v169) -(406 -(118 + 287)) ;local v172=0 -0 ;for v253=v169,v78 do local v254=1121 -(118 + 1003) ;while true do if (v254==0) then v172=v172 + (2 -1) ;v83[v253]=v170[v172];break;end end end end elseif (v86<=29) then if ((v86==((1057 -652) -(142 + 235))) or (1583>3567)) then for v255=v85[9 -7 ],v85[1 + 2 ] do v83[v255]=nil;end else v83[v85[979 -(344 + 209 + 424) ]]=v62[v85[3]];end elseif ((v86==30) or (1313==794) or (2705==1393)) then local v175=1167 -(645 + 522) ;local v176;while true do if ((3174>2902) and (v175==(0 -0))) then v176=v85[2 + 0 ];v83[v176]=v83[v176]();break;end end else local v177=v85[2];v83[v177]=v83[v177](v13(v83,v177 + 1 + 0 ,v85[1793 -(1010 + 780) ]));end elseif ((v86<=(28 + 19)) or (4601<61)) then if ((v86<=(17 + 0 + 22)) or (1390>=4744)) then if (v86<=((95 -75) + 15)) then if (v86<=33) then if (v86>(69 -37)) then local v179=v85[5 -3 ];local v180={v83[v179](v13(v83,v179 + 1 + 0 ,v85[14 -11 ]))};local v181=0;for v257=v179,v85[757 -((2075 -(1045 + 791)) + 514) ] do v181=v181 + (2 -1) + (0 -0) ;v83[v257]=v180[v181];end elseif (v85[1331 -(797 + 532) ]==v83[v85[3 + 1 ]]) then v77=v77 + 1 + 0 ;else v77=v85[6 -3 ];end elseif (v86>(1236 -(373 + (1334 -(351 + 154))))) then v83[v85[2]]=v61[v85[734 -(476 + 255) ]];else v83[v85[1132 -((1943 -(1281 + 293)) + 761) ]]();end elseif ((4120<=4260) and (v86<=(22 + 15))) then if ((v86==(65 -29)) or (883>4778)) then local v184=v85[3 -1 ];local v185=v85[4];local v186=v184 + (240 -(64 + 174)) ;local v187={v83[v184](v83[v184 + 1 ],v83[v186])};for v260=(2 -1) -0 ,v185 do v83[v186 + v260 ]=v187[v260];end local v188=v187[337 -(144 + 192) ];if v188 then local v281=216 -(42 + 174) ;while true do if ((v281==(0 + 0)) or (3620>=4891)) then v83[v186]=v188;v77=v85[3];break;end end else v77=v77 + 1 ;end else local v189=0;local v190;local v191;local v192;while true do if (v189==(0 + 0)) then v190=v74[v85[3]];v191=nil;v189=1 + 0 ;end if ((v189==1) or (2003>3834)) then v192={};v191=v10({},{__index=function(v309,v310) local v311=v192[v310];return v311[1][v311[1506 -(363 + 1141) ]];end,__newindex=function(v312,v313,v314) local v315=1580 -(1183 + 397) ;local v316;while true do if ((4258>937) and (v315==(0 -0))) then v316=v192[v313];v316[1 + 0 ][v316[2 + 0 ]]=v314;break;end end end});v189=2;end if (v189==(1977 -(1913 + 62))) then for v317=1 + 0 ,v85[10 -6 ] do v77=v77 + (1934 -(565 + 1368)) ;local v318=v73[v77];if (v318[3 -2 ]==(1675 -(1477 + 184))) then v192[v317-(1 -(1559 -(1381 + 178))) ]={v83,v318[3]};else v192[v317-(857 -(564 + 274 + 18)) ]={v61,v318[8 -5 ]};end v82[ #v82 + (305 -(244 + 60)) ]=v192;end v83[v85[2 + 0 + 0 ]]=v29(v190,v191,v62);break;end end end elseif (v86>38) then local v193=476 -(41 + 435) ;local v194;while true do if (v193==(1001 -(938 + 63))) then v194=v85[2 + 0 ];v83[v194](v13(v83,v194 + 1 ,v85[3]));break;end end else local v195=1125 -(400 + 536 + 189) ;local v196;local v197;local v198;local v199;while true do if (v195==(1 + 0)) then v78=(v198 + v196) -(1614 -((5395 -3830) + 48)) ;v199=0 + 0 ;v195=2;end if (v195==(1138 -(782 + 356))) then v196=v85[269 -(92 + 84 + 91) ];v197,v198=v76(v83[v196](v13(v83,v196 + (2 -1) ,v85[4 -1 ])));v195=1093 -(975 + 117) ;end if (v195==(1877 -((627 -(381 + 89)) + 1718))) then for v320=v196,v78 do local v321=0 + 0 + 0 ;while true do if ((v321==0) or (156>3913)) then v199=v199 + 1 ;v83[v320]=v197[v199];break;end end end break;end end end elseif (v86<=43) then if ((195==195) and (v86<=((99 + 46) -104))) then if ((v86==(136 -96)) or (4869<906)) then v61[v85[1021 -(697 + (549 -228)) ]]=v83[v85[5 -3 ]];elseif (v83[v85[(1159 -(1074 + 82)) -1 ]]==v83[v85[8 -4 ]]) then v77=v77 + 1 + 0 ;else v77=v85[5 -2 ];end elseif ((v86==((245 -133) -70)) or (1225>4228)) then local v202=v85[(3013 -(214 + 1570)) -(322 + 905) ];local v203={v83[v202](v13(v83,v202 + (1456 -(990 + 465)) ,v85[614 -(602 + 9) ]))};local v204=1189 -(449 + 740) ;for v263=v202,v85[(362 + 514) -(826 + 46) ] do local v264=0;while true do if (0==v264) then v204=v204 + (948 -(245 + 702)) ;v83[v263]=v203[v204];break;end end end else v83[v85[2]]();end elseif (v86<=(142 -97)) then if (v86==(15 + 29)) then local v205=0;local v206;local v207;while true do if (v205==(1899 -(114 + 146 + 1638))) then for v324=441 -(382 + 58) , #v82 do local v325=v82[v324];for v333=0 -(0 + 0) , #v325 do local v334=v325[v333];local v335=v334[(3 -2) + 0 ];local v336=v334[3 -1 ];if ((3328>2238) and (v335==v83) and (v336>=v206)) then local v348=(1726 -(1668 + 58)) -0 ;while true do if ((3839>1405) and (v348==(1205 -(902 + 303)))) then v207[v336]=v335[v336];v334[1 -0 ]=v207;break;end end end end end break;end if (v205==(0 -0)) then v206=v85[1 + 1 ];v207={};v205=1691 -(1121 + 569) ;end end else v83[v85[216 -(22 + 192) ]]={};end elseif ((3105>=1796) and ((v86==(729 -(483 + 200))) or (1293<=507))) then v83[v85[1465 -(1404 + 59) ]]=v85[8 -5 ];elseif v83[v85[(628 -(512 + 114)) -0 ]] then v77=v77 + (766 -((1220 -752) + 297)) ;else v77=v85[3];end elseif ((4379>=2131) and (v86<=(617 -(334 + (471 -243))))) then if (v86<=(177 -126)) then if ((v86<=(23 + 26)) or (2896<805)) then if ((3844>=2043) and (v86==(161 -(22 + 91)))) then local v211=v85[2];v83[v211]=v83[v211](v13(v83,v211 + 1 ,v85[6 -3 ]));elseif (v85[2 -0 ]==v83[v85[2 + 0 + (6 -4) ]]) then v77=v77 + (237 -(141 + 95)) ;else v77=v85[3 + 0 ];end elseif (v86==(2044 -(109 + 1885))) then v83[v85[4 -2 ]]=v83[v85[6 -3 ]][v83[v85[4]]];elseif (((2316==2316) and v83[v85[1 + 1 ]]) or (3232<=2731)) then v77=v77 + ((1471 -(1269 + 200)) -1) ;else v77=v85[3 + 0 ];end elseif (v86<=(28 + 25)) then if (v86==(72 -20)) then if ((4905==4905) and  not v83[v85[2]]) then v77=v77 + 1 + 0 ;else v77=v85[166 -(92 + 71) ];end else local v215=v85[(1 -0) + 1 ];v83[v215]=v83[v215](v13(v83,v215 + (1 -0) ,v78));end elseif (v86==(819 -(574 + (1006 -(98 + 717))))) then local v217=v85[2];v83[v217](v83[v217 + 1 ]);else v83[v85[828 -(802 + 24) ]]=v61[v85[3]];end elseif (v86<=59) then if ((v86<=57) or (4136>=4411)) then if ((v86>56) or (2958==4017)) then if ((1228>=813) and  not v83[v85[2 + 0 ]]) then v77=v77 + 1 ;else v77=v85[7 -4 ];end else local v220=v85[2 + 0 ];local v221={v83[v220](v83[v220 + (127 -(55 + 71)) ])};local v222=0 -0 ;for v265=v220,v85[1794 -(573 + 1217) ] do v222=v222 + ((2 -0) -1) ;v83[v265]=v221[v222];end end elseif (v86>(5 + 53)) then local v223=v85[2 -0 ];local v224=v83[v85[942 -(714 + 225) ]];v83[v223 + (2 -1) ]=v224;v83[v223]=v224[v85[5 -(1 -0) ]];else v83[v85[1 + 1 ]]=v83[v85[1 + 2 ]];end elseif (v86<=(88 -27)) then if (v86==(866 -(118 + 688))) then local v230=v85[50 -(20 + 5 + 23) ];local v231={v83[v230](v83[v230 + (1887 -(927 + 959)) ])};local v232=0 -0 ;for v268=v230,v85[736 -(16 + 716) ] do v232=v232 + (1 -0) ;v83[v268]=v231[v232];end else local v233=v85[2];do return v13(v83,v233,v233 + v85[1 + 2 ] );end end elseif (v86<=(159 -(11 + 86))) then if (v83[v85[4 -2 ]]==v85[289 -(38 + 137 + 110) ]) then v77=v77 + (2 -(2 -1)) ;else v77=v85[14 -11 ];end elseif (v86>(1859 -(503 + 1293))) then local v289=v85[5 -(9 -6) ];local v290=v83[v85[3 + 0 ]];v83[v289 + ((380 + 682) -(810 + 251)) ]=v290;v83[v289]=v290[v85[3 + 1 ]];else v83[v85[1 + 1 + 0 ]]=v83[v85[3 + 0 ]][v83[v85[4]]];end v77=v77 + (534 -(43 + 490)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
