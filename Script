--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v87=v2(v0(v30,16));if v19 then local v111=0;local v112;while true do if (v111==1) then return v112;end if (v111==0) then v112=v5(v87,v19);v19=nil;v111=1;end end else return v87;end end end);local function v20(v31,v32,v33) if v33 then local v88=(v31/((5 -3)^(v32-(2 -1))))%((3 -1)^(((v33-(2 -1)) -(v32-(620 -((2192 -(1523 + 114)) + 64)))) + (932 -(857 + 74)))) ;return v88-(v88%1) ;else local v89=0;local v90;while true do if (v89==0) then v90=(570 -(367 + 201))^(v32-(928 -(214 + 713))) ;return (((v31%(v90 + v90))>=v90) and (1 + (877 -(282 + 595)))) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + (2 -0) ;return (v36 * (1321 -(68 + 997))) + v35 ;end local function v23() local v37=1270 -(226 + (1929 -885)) ;local v38;local v39;local v40;local v41;while true do if (v37==0) then v38,v39,v40,v41=v1(v16,v18,v18 + 3 );v18=v18 + (17 -13) ;v37=118 -(32 + 85) ;end if (v37==(1 + 0)) then return (v41 * (3720433 + 13056783)) + (v40 * (66493 -(892 + 65))) + (v39 * (610 -354)) + v38 ;end end end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(351 -(87 + (281 -(10 + 8))))) then v45=1;v46=(v20(v44,(696 -515) -(67 + (555 -(416 + 26))) ,15 + 5 ) * ((4 -2)^(102 -70))) + v43 ;v42=2 + 0 ;end if (v42==3) then if (v47==(0 -(0 + 0))) then if (v46==(952 -(802 + 150))) then return v48 * (0 -0) ;else v47=(1 -0) -0 ;v45=0 + 0 ;end elseif (v47==2047) then return ((v46==0) and (v48 * ((998 -(915 + 82))/(0 -0)))) or (v48 * NaN) ;end return v8(v48,v47-(596 + 427) ) * (v45 + (v46/((2 -(438 -(145 + 293)))^52))) ;end if ((1187 -(1069 + 118))==v42) then v43=v23();v44=v23();v42=2 -1 ;end if (v42==(3 -1)) then v47=v20(v44,4 + 17 ,(484 -(44 + 386)) -23 );v48=((v20(v44,32)==(1 + 0)) and  -(792 -(368 + 423))) or 1 ;v42=9 -6 ;end end end local function v25(v49) local v50;if  not v49 then local v91=1486 -(998 + (2031 -1543)) ;while true do if (v91==(0 + 0 + 0)) then v49=v23();if (v49==(0 + 0)) then return "";end break;end end end v50=v3(v16,v18,(v18 + v49) -(773 -(201 + 571)) );v18=v18 + v49 ;local v51={};for v67=1139 -(116 + (3730 -2708)) , #v50 do v51[v67]=v2(v1(v3(v50,v67,v67)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return function(v92,v93,v94,v95,v96,v97,v98,v99) local v92=(function() return 0;end)();local v93=(function() return;end)();local v94=(function() return;end)();while true do if ( #"{"==v92) then if (v93== #"\\") then v94=(function() return v95()~=(438 -(262 + 176)) ;end)();elseif (v93==2) then v94=(function() return v96();end)();elseif (v93~= #"asd") then else v94=(function() return v97();end)();end v98[v99]=(function() return v94;end)();break;end if (v92~=0) then else local v118=(function() return 1721 -(345 + 1376) ;end)();local v119=(function() return;end)();while true do if (v118~=(688 -(198 + 490))) then else v119=(function() return 0 -0 ;end)();while true do if (v119==(2 -1)) then v92=(function() return  #"{";end)();break;end if (v119~=(1206 -(696 + 510))) then else v93=(function() return v95();end)();v94=(function() return nil;end)();v119=(function() return 1 -0 ;end)();end end break;end end end end return v92,v93,v94,v95,v96,v97,v98,v99;end;end)();local v53=(function() return function(v100,v101,v102) local v103=(function() return 0;end)();local v104=(function() return;end)();while true do if (v103~=(1262 -(1091 + 171))) then else v104=(function() return 0 + 0 ;end)();while true do if (v104==(0 -0)) then local v126=(function() return 0 -0 ;end)();while true do if (v126==(374 -(123 + 251))) then v100[v101-#"~" ]=(function() return v102();end)();return v100,v101,v102;end end end end break;end end end;end)();local v54=(function() return {};end)();local v55=(function() return {};end)();local v56=(function() return {};end)();local v57=(function() return {v54,v55,nil,v56};end)();local v58=(function() return v23();end)();local v59=(function() return {};end)();for v69= #"!",v58 do FlatIdent_7F35E,Type,Cons,v21,v24,v25,v59,v69=(function() return v52(FlatIdent_7F35E,Type,Cons,v21,v24,v25,v59,v69);end)();end v57[ #"91("]=(function() return v21();end)();for v70= #"\\",v23() do local v71=(function() return v21();end)();if (v20(v71, #",", #"|")~=(698 -(208 + 490))) then else local v107=(function() return 0;end)();local v108=(function() return;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v107==3) then if (v20(v109, #"-19", #"19(")~= #"{") then else v110[ #"0313"]=(function() return v59[v110[ #"?id="]];end)();end v54[v70]=(function() return v110;end)();break;end if (v107==(1 + 0)) then local v123=(function() return 0 + 0 ;end)();local v124=(function() return;end)();while true do if (v123==0) then v124=(function() return 836 -(660 + 176) ;end)();while true do if (v124==0) then v110=(function() return {v22(),v22(),nil,nil};end)();if (v108==(202 -(14 + 188))) then local v131=(function() return 675 -(534 + 141) ;end)();local v132=(function() return;end)();while true do if (v131~=(0 + 0)) then else v132=(function() return 0 + 0 ;end)();while true do if (v132==(0 + 0)) then v110[ #"-19"]=(function() return v22();end)();v110[ #".dev"]=(function() return v22();end)();break;end end break;end end elseif (v108== #".") then v110[ #"asd"]=(function() return v23();end)();elseif (v108==(3 -1)) then v110[ #"asd"]=(function() return v23() -(2^(25 -9)) ;end)();elseif (v108== #"xnx") then local v305=(function() return 0;end)();local v306=(function() return;end)();while true do if (v305==0) then v306=(function() return 0;end)();while true do if (v306==0) then v110[ #"-19"]=(function() return v23() -((5 -3)^16) ;end)();v110[ #".dev"]=(function() return v22();end)();break;end end break;end end end v124=(function() return 1 + 0 ;end)();end if (v124==1) then v107=(function() return 2 + 0 ;end)();break;end end break;end end end if (2==v107) then if (v20(v109, #"[", #",")~= #"[") then else v110[398 -(115 + 281) ]=(function() return v59[v110[4 -2 ]];end)();end if (v20(v109,2,2)~= #"{") then else v110[ #"xxx"]=(function() return v59[v110[ #"xnx"]];end)();end v107=(function() return 3 + 0 ;end)();end if (v107==(0 -0)) then local v125=(function() return 0;end)();while true do if (1==v125) then v107=(function() return 3 -2 ;end)();break;end if (v125~=(867 -(550 + 317))) then else v108=(function() return v20(v71,2 -0 , #"xnx");end)();v109=(function() return v20(v71, #"asd1",8 -2 );end)();v125=(function() return 2 -1 ;end)();end end end end end end for v72= #"\\",v23() do v55,v72,v28=(function() return v53(v55,v72,v28);end)();end return v57;end local function v29(v61,v62,v63) local v64=v61[286 -(134 + 151) ];local v65=v61[2];local v66=v61[1668 -(970 + 695) ];return function(...) local v73=v64;local v74=v65;local v75=v66;local v76=v27;local v77=1 -0 ;local v78= -((612 + 1379) -(525 + 57 + 1408));local v79={};local v80={...};local v81=v12("#",...) -1 ;local v82={};local v83={};for v105=0 -0 ,v81 do if (v105>=v75) then v79[v105-v75 ]=v80[v105 + (3 -2) ];else v83[v105]=v80[v105 + (1825 -(1195 + 629)) ];end end local v84=(v81-v75) + ((534 -(43 + 490)) -0) ;local v85;local v86;while true do local v106=241 -((920 -(711 + 22)) + 54) ;while true do if ((v106==0) or (1293<=507)) then v85=v73[v77];v86=v85[781 -(162 + 618) ];v106=1;end if ((654==654) and (v106==(1 + 0))) then if ((v86<=31) or (4986<=1574)) then if ((4426>172) and (v86<=(10 + 5))) then if (v86<=7) then if (((586>455) and (v86<=(6 -3))) or (2896<805)) then if (v86<=(1 -0)) then if ((2316==2316) and (v86>(0 + 0))) then do return;end else local v134=v85[2];v83[v134]=v83[v134](v13(v83,v134 + (1637 -(1373 + 263)) ,v78));end elseif (v86>(1002 -(451 + 549))) then v62[v85[1 + (7 -5) ]]=v83[v85[2 -0 ]];else v83[v85[2 -0 ]]=v83[v85[3]][v83[v85[1388 -(746 + 638) ]]];end elseif ((826==826) and (v86<=((861 -(240 + 619)) + 1 + 2))) then if (v86==(5 -1)) then local v140=341 -(218 + 123) ;local v141;local v142;local v143;while true do if ((v140==(1582 -(1535 + (72 -26)))) or (4019>4441)) then v143={};v142=v10({},{__index=function(v326,v327) local v328=v143[v327];return v328[1 + 0 ][v328[1 + 1 ]];end,__newindex=function(v329,v330,v331) local v332=0;local v333;while true do if ((2017<4261) and (v332==(560 -(306 + 254)))) then v333=v143[v330];v333[1][v333[1 + 1 ]]=v331;break;end end end});v140=3 -1 ;end if ((v140==2) or (2570==1533)) then for v334=1468 -(899 + 568) ,v85[3 + 1 ] do local v335=0 -0 ;local v336;while true do if (v335==(604 -(268 + 335))) then if ((4716>80) and (v336[291 -(60 + 230) ]==64)) then v143[v334-(573 -(426 + 146)) ]={v83,v336[814 -(569 + 242) ]};else v143[v334-(2 -(1745 -(1344 + 400))) ]={v62,v336[1254 -(721 + 530) ]};end v82[ #v82 + 1 ]=v143;break;end if (v335==(1271 -(945 + 326))) then v77=v77 + (2 -1) ;v336=v73[v77];v335=1 + 0 ;end end end v83[v85[2]]=v29(v141,v142,v63);break;end if ((v140==0) or (3507==3272)) then v141=v74[v85[3]];v142=nil;v140=701 -(271 + 429) ;end end else local v144=v85[(8 -6) + 0 ];local v145=v85[1504 -(1408 + 92) ];local v146=v144 + (1088 -(461 + 625)) ;local v147={v83[v144](v83[v144 + (3 -2) ],v83[v146])};for v241=1 + 0 ,v145 do v83[v146 + v241 ]=v147[v241];end local v148=v147[1740 -(404 + 1335) ];if v148 then v83[v146]=v148;v77=v85[1174 -(418 + (1159 -(183 + 223))) ];else v77=v77 + 1 + 0 ;end end elseif ((v86>(1 + (6 -1))) or (876>=3075)) then if ((4352>2554) and (v83[v85[1 + 0 + 1 ]]==v85[2 + 1 + 1 ])) then v77=v77 + (530 -(406 + 123)) ;else v77=v85[1772 -(1749 + 20) ];end else v83[v85[2]][v85[1 + (339 -(10 + 327)) ]]=v85[1326 -(1249 + 73) ];end elseif (v86<=(4 + 7)) then if ((v86<=(1154 -(325 + 141 + (1017 -(118 + 220))))) or (883==1460)) then if (v86==(19 -11)) then if ( not v83[v85[5 -3 ]] or (4406<4043) or (4619<=999)) then v77=v77 + (1901 -(106 + 1794)) ;else v77=v85[1 + 2 ];end else v83[v85[1 + 1 + 0 ]]=v62[v85[8 -5 ]];end elseif ((v86>(27 -17)) or (3410>4116)) then if ((v85[2]==v83[v85[118 -(4 + 110) ]]) or (903>=3059)) then v77=v77 + (585 -(57 + (976 -(108 + 341)))) ;else v77=v85[3];end else v83[v85[2]]=v85[1430 -(19 + 22 + 1386) ]~=(103 -(17 + 86)) ;end elseif (v86<=13) then if (v86>(9 + 3)) then local v154=v85[(12 -9) -1 ];local v155={};for v244=2 -1 , #v82 do local v245=v82[v244];for v287=166 -((1615 -(711 + 782)) + 44) , #v245 do local v288=v245[v287];local v289=v288[1 -(0 -0) ];local v290=v288[6 -4 ];if (((v289==v83) and (v290>=v154)) or (3976<2857)) then v155[v290]=v289[v290];v288[1]=v155;end end end else v77=v85[3 + (469 -(270 + 199)) ];end elseif (v86>(3 + 11)) then local v157=0 -0 ;local v158;local v159;local v160;while true do if ((v157==0) or (1889>=3383)) then v158=v85[67 -(30 + 35) ];v159={v83[v158](v83[v158 + (1258 -(1043 + 214)) ])};v157=3 -2 ;end if ((4930>2307) and (v157==(1213 -(323 + 889)))) then v160=0 -0 ;for v340=v158,v85[(2403 -(580 + 1239)) -(361 + 219) ] do v160=v160 + (321 -(53 + 267)) ;v83[v340]=v159[v160];end break;end end elseif v83[v85[2]] then v77=v77 + 1 + 0 ;else v77=v85[3];end elseif ((1892<=2734) and (v86<=(436 -(15 + (1183 -785))))) then if (v86<=(1001 -(18 + 964))) then if (v86<=17) then if ((v86>16) or (4046<1291)) then local v161=v85[2];local v162=v85[14 -10 ];local v163=v161 + 2 + 0 + 0 ;local v164={v83[v161](v83[v161 + 1 ],v83[v163])};for v246=851 -(20 + 830) ,v162 do v83[v163 + v246 ]=v164[v246];end local v165=v164[1];if (v165 or (4241==3545)) then v83[v163]=v165;v77=v85[3 + 0 ];else v77=v77 + (127 -(116 + 10)) ;end else do return v83[v85[1 + 0 + 1 + 0 ]];end end elseif (v86>(756 -(542 + 196))) then v83[v85[3 -1 ]]=v83[v85[3]][v85[(4 -2) + 2 + 0 ]];elseif (v83[v85[2 + 0 ]]==v83[v85[2 + 2 ]]) then v77=v77 + (2 -1) ;else v77=v85[7 -4 ];end elseif (((1923<2218) and (v86<=((2739 -(645 + 522)) -(1126 + 425)))) or (4048>4232)) then if ((2173>379) and (v86==(425 -(118 + 287)))) then local v168=v85[7 -(1795 -(1010 + 780)) ];v83[v168]=v83[v168]();else v83[v85[1123 -(118 + 1003 + 0) ]]=v83[v85[8 -5 ]][v85[381 -(142 + 235) ]];end elseif ((v86==(99 -77)) or (2591==3409)) then local v172=0 + 0 ;local v173;while true do if ((v172==(977 -(553 + 424))) or (1750>=3473)) then v173=v85[2];do return v13(v83,v173,v173 + v85[3] );end break;end end elseif ((3166==3166) and (v85[2]==v83[v85[4]])) then v77=v77 + (1 -(0 -0)) ;else v77=v85[3 + 0 ];end elseif ((4514>3324) and (v86<=(27 + 0))) then if (v86<=25) then if (v86>(14 + 10)) then do return v83[v85[1 + 1 ]];end else for v249=v85[2 + 0 ],v85[8 -5 ] do v83[v249]=nil;end end elseif ((v86==(56 -30)) or (208>=4828)) then do return;end else v83[v85[5 -3 ]][v85[6 -3 ]]=v85[2 + 2 ];end elseif (v86<=29) then if ((1763<3724) and (v86>(135 -107))) then v83[v85[2]]();else local v176=753 -(239 + 514) ;local v177;while true do if ((57<=2723) and ((0 + 0)==v176)) then v177=v85[2];v83[v177]=v83[v177](v13(v83,v177 + 1 ,v85[1332 -(797 + 532) ]));break;end end end elseif (v86>(22 + 8)) then for v251=v85[1 + 1 ],v85[3] do v83[v251]=nil;end elseif (v83[v85[4 -2 ]]==v85[1206 -(373 + 829) ]) then v77=v77 + (732 -(476 + 255)) ;else v77=v85[1133 -(369 + 761) ];end elseif ((v86<=47) or (1583>3567)) then if (v86<=((1859 -(1045 + 791)) + 16)) then if (v86<=(63 -28)) then if ((v86<=(61 -28)) or (1313==794)) then if ((v86>(270 -(64 + 174))) or (2070==443)) then local v178=v85[1 + 1 ];local v179,v180=v76(v83[v178](v13(v83,v178 + 1 ,v85[3 -0 ])));v78=(v180 + v178) -(337 -(144 + 192)) ;local v181=216 -(42 + 174) ;for v253=v178,v78 do v181=v181 + (2 -1) + 0 ;v83[v253]=v179[v181];end elseif (v83[v85[2]] or (2705==1393)) then v77=v77 + 1 ;else v77=v85[(4 -1) + (505 -(351 + 154)) ];end elseif (v86==(15 + 19)) then if (v83[v85[2]]==v83[v85[1508 -(363 + 1141) ]]) then v77=v77 + 1 ;else v77=v85[1583 -(1183 + 397) ];end else local v182=v74[v85[(1582 -(1281 + 293)) -5 ]];local v183;local v184={};v183=v10({},{__index=function(v256,v257) local v258=v184[v257];return v258[1][v258[268 -(28 + 238) ]];end,__newindex=function(v259,v260,v261) local v262=0 + 0 ;local v263;while true do if (v262==(0 + 0)) then v263=v184[v260];v263[1976 -(1913 + 62) ][v263[2 + 0 ]]=v261;break;end end end});for v264=2 -(1560 -(1381 + 178)) ,v85[1937 -(565 + 1368) ] do v77=v77 + (3 -2) ;local v265=v73[v77];if ((v265[1]==((1618 + 107) -(1477 + 149 + 35))) or (4601<61)) then v184[v264-(1 -0) ]={v83,v265[859 -(564 + 292) ]};else v184[v264-(1 -0) ]={v62,v265[307 -(244 + 60) ]};end v82[ #v82 + 1 + 0 ]=v184;end v83[v85[478 -(41 + 435) ]]=v29(v182,v183,v63);end elseif ((3174>2902) and (v86<=(1038 -(938 + 63)))) then if ((4120<=4260) and (v86==36)) then v62[v85[3 + 0 ]]=v83[v85[1127 -(400 + 536 + 189) ]];else local v188=v85[1 + 1 ];v83[v188](v13(v83,v188 + (3 -2) ,v85[1616 -(1565 + 48) ]));end elseif ((v86>(24 + 14)) or (1390>=4744)) then if ( not v83[v85[1140 -(782 + 356) ]] or (2003>3834)) then v77=v77 + ((139 + 129) -(176 + 91)) ;else v77=v85[7 -4 ];end else local v189=0 -0 ;local v190;while true do if ((v189==(1092 -(975 + (587 -(381 + 89))))) or (883>4778) or (156>3913)) then v190=v85[1877 -(157 + 1718) ];v83[v190](v83[v190 + 1 + 0 ]);break;end end end elseif (v86<=43) then if (v86<=(145 -104)) then if (v86==(136 -96)) then local v191=1018 -(697 + 321) ;local v192;while true do if ((195==195) and ((v191==0) or (3620>=4891))) then v192=v85[5 -3 ];v83[v192](v13(v83,v192 + ((1 + 0) -0) ,v85[(5 + 1) -3 ]));break;end end else v83[v85[2]]=v63[v85[2 + 1 ]];end elseif (v86==((133 -55) -36)) then local v195=0;local v196;local v197;while true do if ((4258>937) and ((0 -0)==v195)) then v196=v85[1229 -(322 + 905) ];v197=v83[v85[614 -(602 + (1165 -(1074 + 82))) ]];v195=1190 -(449 + 740) ;end if (v195==(873 -(826 + 46))) then v83[v196 + (948 -(245 + 702)) ]=v197;v83[v196]=v197[v85[4]];break;end end else local v198=v85[(12 -6) -4 ];local v199={v83[v198](v13(v83,v198 + 1 ,v85[1901 -(260 + 1638) ]))};local v200=440 -(382 + 58) ;for v267=v198,v85[12 -8 ] do v200=v200 + 1 ;v83[v267]=v199[v200];end end elseif (v86<=45) then if ((3105>=1796) and ((v86==(37 + 7)) or (4869<906))) then v83[v85[3 -1 ]]=v83[v85[8 -5 ]][v83[v85[1209 -(902 + 303) ]]];else v83[v85[3 -1 ]]=v83[v85[3]];end elseif (v86>(110 -64)) then v83[v85[1 + 1 ]]=v63[v85[1693 -(1121 + 569) ]];else local v207=v85[216 -(22 + 192) ];local v208,v209=v76(v83[v207](v13(v83,v207 + 1 ,v85[3])));v78=(v209 + v207) -(684 -(483 + 200)) ;local v210=1463 -(1404 + 59) ;for v270=v207,v78 do v210=v210 + (2 -1) ;v83[v270]=v208[v210];end end elseif ((4379>=2131) and (v86<=(73 -18))) then if ((3844>=2043) and ((v86<=51) or (1225>4228))) then if ((3328>2238) and (v86<=49)) then if (v86>(813 -(468 + 297))) then v83[v85[564 -(334 + 228) ]]=v85[3];else v83[v85[6 -4 ]]={};end elseif ((v86>(115 -65)) or (3232<=2731)) then local v214=0 -0 ;local v215;while true do if (v214==(0 + (1784 -(214 + 1570)))) then v215=v85[(1693 -(990 + 465)) -(141 + 95) ];v83[v215]=v83[v215](v13(v83,v215 + 1 ,v85[3]));break;end end else v83[v85[2 + 0 ]]=v85[3];end elseif (v86<=(136 -83)) then if (v86==(124 -72)) then local v218=v85[2];local v219=v83[v85[1 + 2 ]];v83[v218 + (2 -1) ]=v219;v83[v218]=v219[v85[3 + 1 ]];else local v223=v85[2 + 0 + 0 ];v83[v223](v83[v223 + (1 -0) ]);end elseif (v86>54) then local v224=v85[2 + 0 ];local v225={};for v273=164 -(41 + 51 + 71) , #v82 do local v274=0 + 0 ;local v275;while true do if (v274==(0 -0)) then v275=v82[v273];for v346=0, #v275 do local v347=765 -(574 + 191) ;local v348;local v349;local v350;while true do if (v347==(1 + 0)) then v350=v348[4 -2 ];if ((4905==4905) and (v349==v83) and (v350>=v224)) then local v362=0 + 0 ;while true do if ((v362==0) or (4136>=4411)) then v225[v350]=v349[v350];v348[850 -(248 + 6 + 595) ]=v225;break;end end end break;end if ((v347==(126 -(55 + 71))) or (2958==4017)) then v348=v275[v346];v349=v348[(3 -2) -0 ];v347=1791 -((2299 -(1668 + 58)) + 1217) ;end end end break;end end end else local v226=v85[5 -3 ];local v227={v83[v226](v83[v226 + (1 -0) ])};local v228=939 -(714 + 225) ;for v276=v226,v85[630 -(512 + 114) ] do v228=v228 + 1 ;v83[v276]=v227[v228];end end elseif (v86<=(172 -113)) then if (v86<=57) then if (v86==(77 -21)) then v83[v85[1 + 1 ]]={};else v77=v85[3 -0 ];end elseif ((1228>=813) and (v86>(864 -(118 + 688)))) then v83[v85[50 -(25 + 23) ]]=v62[v85[3]];else local v233=0 + (0 -0) ;local v234;while true do if (v233==(1886 -(927 + 959))) then v234=v85[2];v83[v234]=v83[v234]();break;end end end elseif (v86<=(205 -144)) then if (v86>60) then local v235=v85[(1517 -783) -(16 + 716) ];v83[v235]=v83[v235](v13(v83,v235 + (1 -0) ,v78));else v83[v85[99 -(11 + 86) ]]();end elseif (v86<=((525 -374) -89)) then local v237=v85[287 -(175 + 110) ];local v238={v83[v237](v13(v83,v237 + (2 -1) ,v85[3]))};local v239=0;for v279=v237,v85[19 -15 ] do v239=v239 + 1 ;v83[v279]=v238[v239];end elseif ((3839>1405) and (v86==(1859 -(503 + 602 + 691)))) then v83[v85[2]]=v85[8 -5 ]~=(0 + 0) ;else v83[v85[1063 -(810 + 251) ]]=v83[v85[3]];end v77=v77 + 1 + 0 ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
