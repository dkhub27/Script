--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v83=0;local v84;while true do if (v83==0) then v84=v2(v0(v30,16));if v19 then local v96=v5(v84,v19);v19=nil;return v96;else return v84;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v85=(v31/((5 -3)^(v32-1)))%((5 -3)^(((v33-1) -(v32-1)) + (1 -0))) ;return v85-(v85%(2 -1)) ;else local v86=(621 -(555 + 64))^(v32-(932 -(857 + 19 + 55))) ;return (((v31%(v86 + v86))>=v86) and ((90 + 479) -(367 + 201))) or (927 -(214 + (1590 -(282 + 595)))) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1639 -(1523 + 114)) );v18=v18 + 2 + 0 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37=1065 -(50 + 18 + 997) ;local v38;local v39;local v40;local v41;while true do if ((1271 -(226 + 1044))==v37) then return (v41 * 16777216) + (v40 * (285370 -219834)) + (v39 * (628 -372)) + v38 ;end if (v37==(117 -(24 + 8 + 85))) then v38,v39,v40,v41=v1(v16,v18,v18 + (11 -8) + 0 );v18=v18 + (354 -((1039 -(802 + 150)) + 263)) ;v37=1 + 0 ;end end end local function v24() local v42=0 -0 ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(0 -0)) then v43=v23();v44=v23();v42=1 + 0 ;end if (v42==(1000 -(915 + 82))) then if (v47==(0 -0)) then if (v46==(0 + 0)) then return v48 * (0 -0) ;else local v97=(4215 -3028) -(1069 + (1003 -(261 + 624))) ;while true do if (v97==((0 -0) -0)) then v47=(1081 -(1020 + 60)) -(859 -(814 + 45)) ;v45=0 + 0 ;break;end end end elseif (v47==(5043 -2996)) then return ((v46==(0 -0)) and (v48 * ((1 + (1423 -(630 + 793)))/(791 -(368 + 423))))) or (v48 * NaN) ;end return v8(v48,v47-(3214 -(7424 -5233)) ) * (v45 + (v46/((20 -(10 + 8))^(199 -147)))) ;end if (v42==(444 -((1969 -1553) + 26))) then v47=v20(v44,66 -45 ,14 + 17 );v48=((v20(v44,56 -24 )==(439 -(145 + 293))) and  -((24 + 407) -(44 + 386))) or ((526 + 961) -(998 + 193 + 295)) ;v42=1 + 2 ;end if (v42==(1 + 0)) then v45=773 -(201 + 571) ;v46=(v20(v44,1139 -(116 + 1022) ,(285 -202) -63 ) * (2^(19 + 13))) + v43 ;v42=7 -5 ;end end end local function v25(v49) local v50;if  not v49 then v49=v23();if (v49==(1747 -(760 + 987))) then return "";end end v50=v3(v16,v18,(v18 + v49) -(1914 -(1789 + 124)) );v18=v18 + v49 ;local v51={};for v66=1, #v50 do v51[v66]=v2(v1(v3(v50,v66,v66)));end return v6(v51);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v52=(function() return 0;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v68=(function() return 0 -0 ;end)();while true do if (v68~=(0 -0)) then else if (v52==(0 -0)) then local v94=(function() return 285 -(134 + 151) ;end)();while true do if (v94==(1665 -(970 + 695))) then v53=(function() return function(v111,v112,v113) local v114=(function() return 0;end)();while true do if (v114~=0) then else v111[v112-#":" ]=(function() return v113();end)();return v111,v112,v113;end end end;end)();v54=(function() return {};end)();v94=(function() return 1 -0 ;end)();end if (v94~=(1991 -(582 + 1408))) then else v55=(function() return {};end)();v52=(function() return 3 -2 ;end)();break;end end end if (v52==(3 -0)) then for v98= #" ",v23() do local v99=(function() return v21();end)();if (v20(v99, #"]", #"}")==(0 -0)) then local v101=(function() return 1824 -(1195 + 629) ;end)();local v102=(function() return;end)();local v103=(function() return;end)();local v104=(function() return;end)();local v105=(function() return;end)();while true do if (v101==1) then local v115=(function() return 0;end)();while true do if (v115==(1 -0)) then v101=(function() return 2;end)();break;end if (0==v115) then local v226=(function() return 241 -(187 + 54) ;end)();while true do if (v226==1) then v115=(function() return 781 -(162 + 618) ;end)();break;end if (v226==0) then v104=(function() return nil;end)();v105=(function() return nil;end)();v226=(function() return 1;end)();end end end end end if (v101==(0 + 0)) then local v116=(function() return 0;end)();local v117=(function() return;end)();while true do if (v116==(0 + 0)) then v117=(function() return 0;end)();while true do if (v117==1) then v101=(function() return 1;end)();break;end if (v117==(0 -0)) then v102=(function() return 0 -0 ;end)();v103=(function() return nil;end)();v117=(function() return 1 + 0 ;end)();end end break;end end end if (v101~=(1638 -(1373 + 263))) then else while true do if (v102~= #"nil") then else if (v20(v104, #"91(", #"xnx")~= #"|") then else v105[ #"?id="]=(function() return v59[v105[ #".com"]];end)();end v54[v98]=(function() return v105;end)();break;end if ( #":"~=v102) then else local v228=(function() return 0;end)();local v229=(function() return;end)();while true do if (0==v228) then v229=(function() return 1000 -(451 + 549) ;end)();while true do if (v229==0) then v105=(function() return {v22(),v22(),nil,nil};end)();if (v103==(0 -0)) then local v356=(function() return 0 -0 ;end)();local v357=(function() return;end)();while true do if (0~=v356) then else v357=(function() return 0;end)();while true do if (v357==0) then v105[ #"91("]=(function() return v22();end)();v105[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v103== #"{") then v105[ #"xxx"]=(function() return v23();end)();elseif (v103==(1386 -(746 + 638))) then v105[ #"nil"]=(function() return v23() -(2^16) ;end)();elseif (v103~= #"-19") then else local v370=(function() return 0;end)();local v371=(function() return;end)();while true do if ((0 + 0)==v370) then v371=(function() return 0 -0 ;end)();while true do if ((341 -(218 + 123))==v371) then v105[ #"xnx"]=(function() return v23() -((1583 -(1535 + 46))^(16 + 0)) ;end)();v105[ #".dev"]=(function() return v22();end)();break;end end break;end end end v229=(function() return 1 + 0 ;end)();end if (v229~=1) then else v102=(function() return 2;end)();break;end end break;end end end if (v102~=(560 -(306 + 254))) then else local v230=(function() return 0;end)();while true do if (v230~=(1 + 0)) then else v102=(function() return  #"[";end)();break;end if (v230~=(0 -0)) then else v103=(function() return v20(v99,2, #"xxx");end)();v104=(function() return v20(v99, #"http",6);end)();v230=(function() return 1468 -(899 + 568) ;end)();end end end if (v102==2) then local v231=(function() return 0;end)();local v232=(function() return;end)();while true do if (v231~=0) then else v232=(function() return 0;end)();while true do if (v232~=(1 + 0)) then else v102=(function() return  #"-19";end)();break;end if (v232~=(0 -0)) then else if (v20(v104, #"~", #"]")== #"~") then v105[2]=(function() return v59[v105[2]];end)();end if (v20(v104,605 -(268 + 335) ,2)== #"~") then v105[ #"19("]=(function() return v59[v105[ #"nil"]];end)();end v232=(function() return 291 -(60 + 230) ;end)();end end break;end end end end break;end end end end for v100= #"|",v23() do v55,v100,v28=(function() return v53(v55,v100,v28);end)();end return v57;end v68=(function() return 1;end)();end if (v68==(573 -(426 + 146))) then if (v52~=1) then else v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v58=(function() return v23();end)();v52=(function() return 2;end)();end if (v52==(1458 -(282 + 1174))) then local v95=(function() return 0;end)();while true do if (v95==0) then v59=(function() return {};end)();for v107= #"\\",v58 do local v108=(function() return 0;end)();local v109=(function() return;end)();local v110=(function() return;end)();while true do if (v108==(812 -(569 + 242))) then if (v109== #"|") then v110=(function() return v21()~=0 ;end)();elseif (v109==(5 -3)) then v110=(function() return v24();end)();elseif (v109== #"91(") then v110=(function() return v25();end)();end v59[v107]=(function() return v110;end)();break;end if (0==v108) then v109=(function() return v21();end)();v110=(function() return nil;end)();v108=(function() return 1;end)();end end end v95=(function() return 1;end)();end if (v95==(1 + 0)) then v57[ #"xnx"]=(function() return v21();end)();v52=(function() return 1027 -(706 + 318) ;end)();break;end end end break;end end end end local function v29(v60,v61,v62) local v63=v60[1252 -(721 + 530) ];local v64=v60[1273 -(945 + 326) ];local v65=v60[7 -4 ];return function(...) local v69=v63;local v70=v64;local v71=v65;local v72=v27;local v73=1 + 0 ;local v74= -(1 + 0);local v75={};local v76={...};local v77=v12("#",...) -(1 + 0) ;local v78={};local v79={};for v87=(598 + 902) -(1408 + 92) ,v77 do if (v87>=v71) then v75[v87-v71 ]=v76[v87 + (1087 -((1154 -693) + 625)) ];else v79[v87]=v76[v87 + ((1 + 0) -0) ];end end local v80=(v77-v71) + (1157 -(1074 + 82)) ;local v81;local v82;while true do v81=v69[v73];v82=v81[(667 + 622) -(993 + 295) ];if (v82<=(1815 -(214 + 1570))) then if ((v82<=(1 + 11 + 3)) or (461>2811)) then if (v82<=(1178 -(418 + 753))) then if (v82<=(2 + 1)) then if (v82<=(1 + 0 + 0)) then if (v82==(0 + 0)) then local v120=0 + 0 ;local v121;while true do if (v120==(529 -(406 + 123))) then v121=v81[1771 -(1749 + 20) ];v79[v121]=v79[v121](v13(v79,v121 + 1 + 0 + 0 ,v81[629 -(512 + 114) ]));break;end end else v79[v81[5 -3 ]]=v81[1325 -(1249 + 73) ];end elseif (v82==(1 + 1)) then local v124=0;local v125;local v126;local v127;while true do if (v124==(1146 -(466 + 679))) then v127=0 + (1414 -(1001 + 413)) ;for v302=v125,v81[9 -5 ] do local v303=0 -0 ;while true do if (v303==(1900 -(106 + 1794))) then v127=v127 + 1 + 0 ;v79[v302]=v126[v127];break;end end end break;end if (v124==(1469 -(1269 + (445 -245)))) then v125=v81[1 + 1 ];v126={v79[v125](v13(v79,v125 + (816 -(98 + 717)) ,v81[7 -4 ]))};v124=115 -(4 + (803 -(627 + 66))) ;end end else v79[v81[2 -0 ]]=v81[587 -(57 + 527) ]~=((4251 -2824) -(41 + 1386)) ;end elseif (v82<=(108 -((619 -(512 + 90)) + 86))) then if (v82==(3 + 1)) then v73=v81[6 -3 ];else for v233=v81[5 -3 ],v81[169 -(122 + 44) ] do v79[v233]=nil;end end elseif ((1122<=3910) and (v82==6)) then local v130=v81[1 + 1 ];v79[v130]=v79[v130]();else local v132=v81[2 -0 ];local v133={};for v235=3 -2 , #v78 do local v236=v78[v235];for v259=0 + 0 , #v236 do local v260=1433 -((2703 -(1665 + 241)) + 636) ;local v261;local v262;local v263;while true do if (v260==(0 -0)) then v261=v236[v259];v262=v261[1 + 0 ];v260=1 -0 ;end if (v260==(2 -1)) then v263=v261[67 -(30 + 35) ];if (((v262==v79) and (v263>=v132)) or (4322<3616)) then local v349=0 + 0 ;while true do if (v349==(1257 -((1760 -(373 + 344)) + 214))) then v133[v263]=v262[v263];v261[3 -2 ]=v133;break;end end end break;end end end end end elseif (v82<=(1223 -(323 + 889))) then if ((12<4208) and (v82<=(23 -14))) then if ((v82==(588 -(361 + 219))) or (2990<=2980)) then local v134=320 -(53 + 267) ;local v135;while true do if (v134==(0 + 0)) then v135=v81[2];v79[v135]=v79[v135](v13(v79,v135 + (414 -(15 + 398)) ,v81[985 -(18 + 964) ]));break;end end else v79[v81[7 -5 ]]=v62[v81[2 + 1 ]];end elseif (v82==(7 + 3)) then if (v79[v81[852 -(20 + 830) ]]==v81[4 + 0 ]) then v73=v73 + (127 -(53 + 63 + 10)) ;else v73=v81[3];end else v79[v81[1 + 1 ]]={};end elseif (v82<=(751 -(542 + 196))) then if (v82==(25 -13)) then local v139=0 + 0 ;local v140;local v141;local v142;while true do if (v139==(1 + 1)) then for v304=1 + 0 ,v81[2 + 2 ] do v73=v73 + (2 -1) ;local v305=v69[v73];if (v305[1 -0 ]==(38 -23)) then v142[v304-(1552 -(1126 + 425)) ]={v79,v305[11 -8 ]};else v142[v304-(1122 -(118 + 1003)) ]={v61,v305[2 + 1 ]};end v78[ #v78 + (4 -3) ]=v142;end v79[v81[2 + 0 + 0 ]]=v29(v140,v141,v62);break;end if ((v139==(0 + (0 -0))) or (2575>=4275)) then v140=v70[v81[239 -(46 + 190) ]];v141=nil;v139=96 -(51 + 44) ;end if (v139==(1 + 0)) then v142={};v141=v10({},{__index=function(v307,v308) local v309=1317 -(1114 + 203) ;local v310;while true do if ((v309==(977 -(553 + 424))) or (3626<=1306)) then v310=v142[v308];return v310[727 -(228 + 498) ][v310[3 -1 ]];end end end,__newindex=function(v311,v312,v313) local v314=v142[v312];v314[1 + 0 ][v314[2 + 0 ]]=v313;end});v139=2 + 0 ;end end elseif ((1368<3780) and  not v79[v81[2 + 0 + 0 ]]) then v73=v73 + 1 + 0 ;else v73=v81[1272 -(231 + 1038) ];end elseif (v82>(8 + 6)) then v79[v81[4 -(4 -2) ]]=v79[v81[7 -4 ]];else v79[v81[4 -2 ]]=v79[v81[1 + 2 ]][v79[v81[10 -6 ]]];end elseif ((v82<=((1 + 110) -88)) or (3169==2273)) then if (v82<=(772 -(239 + 514))) then if (v82<=(6 + 11)) then if (v82==(1345 -(797 + 532))) then local v147=v70[v81[(1239 -(298 + 938)) + 0 ]];local v148;local v149={};v148=v10({},{__index=function(v237,v238) local v239=v149[v238];return v239[1 -0 ][v239[6 -4 ]];end,__newindex=function(v240,v241,v242) local v243=0 + 0 ;local v244;while true do if (v243==(0 -0)) then v244=v149[v241];v244[1203 -(373 + 829) ][v244[2]]=v242;break;end end end});for v245=732 -(476 + 131 + 124) ,v81[1134 -(361 + 8 + 761) ] do local v246=0 + 0 ;local v247;while true do if (v246==(1 + 0)) then if (v247[1 -0 ]==(28 -13)) then v149[v245-(239 -(64 + 52 + 122)) ]={v79,v247[339 -(144 + 192) ]};else v149[v245-(217 -(3 + 39 + 174)) ]={v61,v247[2 + 1 ]};end v78[ #v78 + ((292 + 1213) -(363 + 1141)) ]=v149;break;end if ((2481<=3279) and (v246==0)) then v73=v73 + (2 -1) ;v247=v69[v73];v246=2 -1 ;end end end v79[v81[(160 + 1422) -((4517 -3334) + (694 -(36 + 261))) ]]=v29(v147,v148,v62);else v79[v81[5 -3 ]]=v79[v81[(9 -3) -3 ]][v81[(3184 -(34 + 1334)) -(1293 + 200 + 319) ]];end elseif (v82==(14 + 4 + 0)) then do return;end elseif ((v79[v81[2]]==v79[v81[3 + 1 ]]) or (1063<=877)) then v73=v73 + (1 -0) ;else v73=v81[1978 -((3196 -(1035 + 248)) + 62) ];end elseif (v82<=(14 + 7)) then if (v82>(52 -32)) then v79[v81[1 + 1 ]]=v81[1936 -(565 + 1368) ]~=((21 -(20 + 1)) -0) ;else local v154=v81[1663 -(1477 + 96 + 88) ];local v155,v156=v72(v79[v154](v13(v79,v154 + (1 -(319 -(134 + 185))) ,v81[3 + 0 ])));v74=(v156 + v154) -1 ;local v157=1858 -(673 + 1185) ;for v248=v154,v74 do local v249=0 -0 ;while true do if ((2314==2314) and (v249==(856 -(564 + 292)))) then v157=v157 + ((1134 -(549 + 584)) -0) ;v79[v248]=v155[v157];break;end end end end elseif (v82>(66 -44)) then local v158=v81[306 -(244 + 60) ];local v159={v79[v158](v13(v79,v158 + (477 -(41 + 435)) ,v81[1004 -(938 + 63) ]))};local v160=0;for v250=v158,v81[4 + 0 ] do local v251=0 -0 ;while true do if (v251==0) then v160=v160 + ((3865 -2739) -(936 + 189)) ;v79[v250]=v159[v160];break;end end end else do return;end end elseif (v82<=(9 + 18)) then if ((924>=477) and (v82<=(1638 -(1565 + 48)))) then if (v82==(15 + 9)) then local v161=1138 -((1750 -(478 + 490)) + 356) ;local v162;while true do if (v161==(267 -(176 + 91))) then v162=v81[4 -2 ];v79[v162](v79[v162 + (1 -(0 + 0)) ]);break;end end elseif v79[v81[1094 -(975 + 117) ]] then v73=v73 + (1876 -(157 + 1718)) ;else v73=v81[3 + 0 ];end elseif (v82==(92 -66)) then if  not v79[v81[6 -4 ]] then v73=v73 + (1019 -(697 + 321)) ;else v73=v81[2 + 1 ];end else local v163=v81[5 -3 ];local v164={v79[v163](v79[v163 + (2 -1) ])};local v165=0;for v252=v163,v81[2 + 2 ] do local v253=0 -0 ;while true do if ((1813<=3778) and (v253==(0 -0))) then v165=v165 + (1228 -((1701 -(1055 + 324)) + 905)) ;v79[v252]=v164[v165];break;end end end end elseif ((4150==4150) and (v82<=(1369 -(1093 + 247)))) then if (v82>(639 -(602 + 8 + 1))) then local v166=0 + 0 ;local v167;while true do if (v166==(1189 -(449 + 740))) then v167=v81[874 -(826 + 46) ];v79[v167](v79[v167 + (948 -(245 + 702)) ]);break;end end else local v168=v81[6 -4 ];do return v13(v79,v168,v168 + v81[8 -(1 + 4) ] );end end elseif (v82==((107 -80) + 3)) then if ((432<=3007) and (v81[1 + 1 ]==v79[v81[1902 -(260 + 1638) ]])) then v73=v73 + (441 -((1296 -914) + 58)) ;else v73=v81[9 -6 ];end else local v169=0 + 0 ;local v170;while true do if (v169==(0 + 0)) then v170=v81[3 -1 ];v79[v170]=v79[v170](v13(v79,v170 + (1 -0) ,v74));break;end end end elseif ((v82<=(139 -92)) or (408>2721)) then if (v82<=39) then if ((v82<=(1240 -(902 + 303))) or (3418<2497)) then if ((1735<2169) and (v82<=33)) then if ((3890>=3262) and (v82==(69 -37))) then v79[v81[(5 -3) + 0 ]][v81[6 -3 ]]=v81[1 + 3 ];else local v173=1690 -(1121 + 569) ;local v174;local v175;local v176;while true do if (v173==((540 -325) -(22 + 192))) then v176=683 -(483 + 200) ;for v326=v174,v81[1467 -(1404 + 59) ] do v176=v176 + (2 -1) ;v79[v326]=v175[v176];end break;end if (v173==(0 -0)) then v174=v81[767 -(468 + 297) ];v175={v79[v174](v79[v174 + (3 -2) ])};v173=2 -1 ;end end end elseif (v82==(61 -27)) then local v177=v81[1 + 1 ];local v178=v79[v81[1 + 2 ]];v79[v177 + 1 + 0 ]=v178;v79[v177]=v178[v81[240 -(141 + 95) ]];else v79[v81[2 + 0 ]]();end elseif (v82<=(94 -57)) then if (v82==((304 -225) -43)) then v79[v81[4 -2 ]]=v79[v81[10 -7 ]][v79[v81[4]]];else v79[v81[2]]();end elseif ((v82==(9 + 29)) or (4356>=4649)) then v61[v81[8 -5 ]]=v79[v81[2 + 0 ]];else local v186=v81[2 + 0 ];local v187=v81[5 -1 ];local v188=v186 + 1 + 1 ;local v189={v79[v186](v79[v186 + 1 + 0 ],v79[v188])};for v254=164 -(92 + 71) ,v187 do v79[v188 + v254 ]=v189[v254];end local v190=v189[1 + 0 ];if v190 then local v270=0 + 0 ;while true do if (v270==(0 -0)) then v79[v188]=v190;v73=v81[(6 -4) + 1 ];break;end end else v73=v73 + (766 -(574 + 145 + 46)) ;end end elseif (v82<=(36 + 7)) then if ((3904==3904) and (v82<=(1841 -(884 + 916)))) then if ((v82==(83 -43)) or (2860>=3789)) then do return v79[v81[4 -2 ]];end else local v191=v81[2 + (0 -0) ];v79[v191](v13(v79,v191 + (654 -(232 + (1109 -(364 + 324)))) ,v81[852 -(254 + 595) ]));end elseif (v82==42) then for v257=v81[128 -(55 + 71) ],v81[3 -(0 -0) ] do v79[v257]=nil;end elseif (v79[v81[1792 -(573 + (2920 -1703)) ]]==v79[v81[10 -6 ]]) then v73=v73 + 1 + 0 ;else v73=v81[4 -1 ];end elseif (v82<=(1498 -(221 + 445 + 787))) then if ((v82>(469 -(360 + 65))) or (1086>4449)) then v61[v81[3 + 0 ]]=v79[v81[2]];else local v194=0;local v195;while true do if (v194==(939 -(714 + 225))) then v195=v81[5 -3 ];v79[v195]=v79[v195]();break;end end end elseif (v82>(36 + 10)) then v79[v81[2 -0 ]]=v61[v81[1 + (8 -6) ]];else v73=v81[3 -0 ];end elseif ((4981>546) and (v82<=(861 -(118 + 688)))) then if (v82<=(232 -(92 + 89))) then if (v82<=(97 -((40 -15) + 23))) then if (v82==(10 + 38)) then v79[v81[1888 -(927 + 959) ]]=v62[v81[2 + (2 -1) ]];else v79[v81[(1274 -(1249 + 19)) -4 ]]=v79[v81[735 -(15 + 1 + 716) ]][v81[7 -3 ]];end elseif ((v82==((571 -424) -(11 + 86))) or (2366<=8)) then local v203=v81[4 -(1088 -(686 + 400)) ];v79[v203](v13(v79,v203 + (286 -(175 + 110)) ,v81[1 + 2 + 0 ]));else local v204=v81[4 -2 ];local v205=v79[v81[1247 -(485 + (988 -(73 + 156))) ]];v79[v204 + (4 -3) ]=v205;v79[v204]=v205[v81[1800 -(503 + 1293) ]];end elseif (v82<=(147 -94)) then if ((v82>(38 + 14)) or (2590==2864)) then if v79[v81[1063 -(810 + 251) ]] then v73=v73 + 1 + 0 ;else v73=v81[1 + 2 ];end elseif (v81[1 + 1 ]==v79[v81[4 + 0 ]]) then v73=v73 + 1 ;else v73=v81[3 + 0 ];end elseif ((v82==(843 -(766 + 23))) or (2624>4149)) then if (v79[v81[535 -(1 + 42 + 490) ]]==v81[737 -(711 + 22) ]) then v73=v73 + ((814 -(721 + 90)) -2) ;else v73=v81[(1 + 9) -7 ];end else v79[v81[861 -(240 + 619) ]]=v61[v81[1 + 2 ]];end elseif ((v82<=(93 -34)) or (2618>=4495)) then if (v82<=(4 + 53)) then if ((v82==(1800 -(1344 + 400))) or (2485>=3131)) then local v211=405 -(255 + 150) ;local v212;local v213;local v214;local v215;while true do if (((2 + 0)==v211) or (2804<=2785)) then for v329=v212,v74 do local v330=0 -0 ;while true do if (((0 + 0)==v330) or (4571==3415)) then v215=v215 + (4 -3) ;v79[v329]=v213[v215];break;end end end break;end if (v211==(1149 -(556 + 592))) then v74=(v214 + v212) -(3 -2) ;v215=1739 -(404 + 1335) ;v211=408 -(183 + 223) ;end if ((v211==(0 -0)) or (4441>4787)) then v212=v81[2 + 0 ];v213,v214=v72(v79[v212](v13(v79,v212 + 1 + 0 ,v81[340 -(10 + 327) ])));v211=740 -(396 + 343) ;end end else local v216=v81[1 + 1 ];v79[v216]=v79[v216](v13(v79,v216 + 1 + 0 ,v74));end elseif ((1920==1920) and (v82==(396 -(118 + 220)))) then v79[v81[1391 -(135 + 1254) ]]=v81[11 -(478 -(224 + 246)) ];else v79[v81[1 + 1 ]]=v79[v81[452 -(108 + 341) ]];end elseif (v82<=(28 + 33)) then if (v82>((409 -156) -193)) then local v222=1493 -((1308 -597) + 782) ;local v223;local v224;while true do if (v222==(0 -(0 + 0))) then v223=v81[471 -(270 + 199) ];v224={};v222=1 + 0 ;end if (v222==(1820 -(580 + 30 + 1209))) then for v331=2 -(1 + 0) , #v78 do local v332=v78[v331];for v339=(0 -0) + 0 , #v332 do local v340=v332[v339];local v341=v340[(3 -2) + 0 ];local v342=v340[2 + 0 ];if ((v341==v79) and (v342>=v223)) then local v353=1464 -(157 + 1307) ;while true do if ((v353==(1859 -(821 + 1038))) or (647==4477)) then v224[v342]=v341[v342];v340[1 + 0 ]=v224;break;end end end end end break;end end else do return v79[v81[4 -2 ]];end end elseif (v82<=(7 + 55)) then v79[v81[2 + 0 ]]={};elseif (v82>(1230 -(645 + 522))) then v79[v81[1792 -(1010 + (1293 -(203 + 310))) ]][v81[3 + 0 ]]=v81[19 -15 ];else local v277=v81[5 -3 ];local v278=v81[1840 -(1045 + 791) ];local v279=v277 + ((1997 -(1238 + 755)) -2) ;local v280={v79[v277](v79[v277 + (506 -(351 + 154)) ],v79[v279])};for v299=(111 + 1464) -((2815 -(709 + 825)) + 293) ,v278 do v79[v279 + v299 ]=v280[v299];end local v281=v280[267 -(28 + 238) ];if ((3819==3819) and v281) then local v333=0 -0 ;while true do if ((1559 -(1381 + 178))==v333) then v79[v279]=v281;v73=v81[3];break;end end else v73=v73 + (2 -1) ;end end v73=v73 + (1 -0) + 0 ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
