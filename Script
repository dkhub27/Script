--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v87=v5(v81,v19);v19=nil;return v87;else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -1))))%(2^(((v33-(1 -0)) -(v32-(2 -(1 + 0)))) + (620 -((1432 -(282 + 595)) + 64)))) ;return v82-(v82%(932 -(857 + 74))) ;else local v83=568 -(367 + 201) ;local v84;while true do if (v83==(927 -(214 + 713))) then v84=(1639 -(1523 + 114))^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and 1) or 0 ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + 2 + 0 );v18=v18 + 2 ;return (v36 * (364 -108)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + (1068 -(68 + 997)) );v18=v18 + (1274 -(226 + 1044)) ;return (v40 * ((16200264 + 56854510) -(56278515 -(892 + 65)))) + (v39 * (65653 -(32 + 85))) + (v38 * (251 + 5)) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=2 -1 ;local v44=(v20(v42,1 -0 ,(7 + 29) -16 ) * ((352 -(87 + 263))^32)) + v41 ;local v45=v20(v42,(356 -155) -(67 + 113) ,23 + 8 );local v46=((v20(v42,78 -46 )==(1 + 0 + 0)) and  -(792 -(368 + 423))) or (3 -2) ;if (v45==(952 -(802 + 150))) then if (v44==(0 -0)) then return v46 * (0 -(0 -0)) ;else v45=1 + 0 ;v43=997 -(915 + 82) ;end elseif (v45==((5814 -(10 + 8)) -3749)) then return ((v44==(0 + 0)) and (v46 * ((1 -(0 -0))/(1187 -(1069 + 118))))) or (v46 * NaN) ;end return v8(v46,v45-1023 ) * (v43 + (v44/(((446 -(416 + 26)) -(6 -4))^(113 -61)))) ;end local function v25(v47) local v48;if  not v47 then v47=v23();if (v47==(0 + 0)) then return "";end end v48=v3(v16,v18,(v18 + v47) -(1 -0) );v18=v18 + v47 ;local v49={};for v64=431 -(44 + 386) , #v48 do v49[v64]=v2(v1(v3(v48,v64,v64)));end return v6(v49);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v50=(function() return 1335 -(178 + 1157) ;end)();local v51=(function() return;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();while true do local v66=(function() return 0;end)();while true do if (v66==(0 + 0)) then if ((1 -0)==v50) then v55=(function() return {v52,v53,nil,v54};end)();v56=(function() return v23();end)();v57=(function() return {};end)();for v96= #"[",v56 do local v97=(function() return 0 -0 ;end)();local v98=(function() return;end)();local v99=(function() return;end)();local v100=(function() return;end)();while true do if (v97~=(242 -(187 + 54))) then else v100=(function() return nil;end)();while true do if (v98~=(0 + 0)) then else local v119=(function() return 0;end)();while true do if (v119==0) then local v156=(function() return 0 -0 ;end)();while true do if (v156==(3 -2)) then v119=(function() return 375 -(123 + 251) ;end)();break;end if (v156~=(0 -0)) then else v99=(function() return v21();end)();v100=(function() return nil;end)();v156=(function() return 699 -(208 + 490) ;end)();end end end if ((1 + 0)~=v119) then else v98=(function() return 1 + 0 ;end)();break;end end end if ((1 -0)~=v98) then else if (v99== #",") then v100=(function() return v21()~=(836 -(660 + 176)) ;end)();elseif (v99==(1 + 1)) then v100=(function() return v24();end)();elseif (v99== #"gha") then v100=(function() return v25();end)();end v57[v96]=(function() return v100;end)();break;end end break;end if (v97==(202 -(14 + 188))) then local v108=(function() return 675 -(534 + 141) ;end)();while true do if (v108~=(0 + 0)) then else v98=(function() return 0 + 0 ;end)();v99=(function() return nil;end)();v108=(function() return 1;end)();end if (v108~=(1 -0)) then else v97=(function() return 1;end)();break;end end end end end v50=(function() return 2;end)();end if (v50==2) then v55[ #"gha"]=(function() return v21();end)();for v101= #" ",v23() do local v102=(function() return v21();end)();if (v20(v102, #"!", #"!")~=(0 + 0)) then else local v104=(function() return 0 -0 ;end)();local v105=(function() return;end)();local v106=(function() return;end)();local v107=(function() return;end)();while true do if (v104==(1 -0)) then local v114=(function() return 0;end)();local v115=(function() return;end)();while true do if (v114==0) then v115=(function() return 1384 -(746 + 638) ;end)();while true do if (v115~=(0 + 0)) then else local v189=(function() return 0 -0 ;end)();while true do if ((1 -0)==v189) then v115=(function() return 2 -1 ;end)();break;end if (v189==0) then v107=(function() return {v22(),v22(),nil,nil};end)();if (v105==(341 -(218 + 123))) then local v214=(function() return 0;end)();local v215=(function() return;end)();while true do if (v214~=0) then else v215=(function() return 0;end)();while true do if (v215==(0 + 0)) then v107[ #"19("]=(function() return v22();end)();v107[ #"asd1"]=(function() return v22();end)();break;end end break;end end elseif (v105== #",") then v107[ #"91("]=(function() return v23();end)();elseif (v105==2) then v107[ #"xnx"]=(function() return v23() -(2^(412 -(115 + 281))) ;end)();elseif (v105== #"asd") then local v222=(function() return 0 -0 ;end)();while true do if (v222~=(0 + 0)) then else v107[ #"-19"]=(function() return v23() -((2 + 0)^(576 -(306 + 254))) ;end)();v107[ #"0836"]=(function() return v22();end)();break;end end end v189=(function() return 2 -1 ;end)();end end end if (v115==(3 -2)) then v104=(function() return 1469 -(899 + 568) ;end)();break;end end break;end end end if (v104~=(867 -(550 + 317))) then else local v116=(function() return 0;end)();local v117=(function() return;end)();while true do if (v116~=(0 -0)) then else v117=(function() return 0;end)();while true do if (v117==(603 -(268 + 335))) then v105=(function() return v20(v102,2 -0 , #"xnx");end)();v106=(function() return v20(v102, #"http",6);end)();v117=(function() return 2 -1 ;end)();end if (v117==1) then v104=(function() return 573 -(426 + 146) ;end)();break;end end break;end end end if (2~=v104) then else if (v20(v106, #"\\", #"~")== #"{") then v107[2]=(function() return v57[v107[287 -(134 + 151) ]];end)();end if (v20(v106,1667 -(970 + 695) ,2)== #"~") then v107[ #"xxx"]=(function() return v57[v107[ #"-19"]];end)();end v104=(function() return 1 + 2 ;end)();end if (v104~=3) then else if (v20(v106, #"91(", #"gha")~= #"[") then else v107[ #"asd1"]=(function() return v57[v107[ #"?id="]];end)();end v52[v101]=(function() return v107;end)();break;end end end end for v103= #"|",v23() do v53,v103,v28=(function() return v51(v53,v103,v28);end)();end return v55;end v66=(function() return 1 -0 ;end)();end if (v66==(1991 -(582 + 1408))) then if (v50==0) then local v95=(function() return 0;end)();while true do if (v95~=(5 -3)) then else v50=(function() return 1 + 0 ;end)();break;end if (v95~=(3 -2)) then else v53=(function() return {};end)();v54=(function() return {};end)();v95=(function() return 1026 -(706 + 318) ;end)();end if (v95~=0) then else v51=(function() return function(v109,v110,v111) local v112=(function() return 0 -0 ;end)();local v113=(function() return;end)();while true do if (v112==(1251 -(721 + 530))) then v113=(function() return 0 -0 ;end)();while true do if (v113==(1824 -(1195 + 629))) then v109[v110-#"!" ]=(function() return v111();end)();return v109,v110,v111;end end break;end end end;end)();v52=(function() return {};end)();v95=(function() return 2 -1 ;end)();end end end break;end end end end local function v29(v58,v59,v60) local v61=v58[1 + 0 + 0 ];local v62=v58[702 -(271 + 429) ];local v63=v58[4 -(1 + 0) ];return function(...) local v67=v61;local v68=v62;local v69=v63;local v70=v27;local v71=1 + 0 ;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -1 ;local v76={};local v77={};for v85=1086 -((789 -328) + 625) ,v75 do if (v85>=v69) then v73[v85-v69 ]=v74[v85 + (1289 -(993 + 295)) ];else v77[v85]=v74[v85 + (1157 -(1074 + 82)) + 0 ];end end local v78=(v75-v69) + (3 -(3 -1)) ;local v79;local v80;while true do local v86=1171 -(418 + 753) ;while true do if ((0 + 0 + 0)==v86) then v79=v67[v71];v80=v79[1 -0 ];v86=2 -1 ;end if ((v86==(1 + 0)) or (1643<=329)) then if (v80<=(3 + 0 + 17)) then if (v80<=(23 -14)) then if (v80<=(1231 -((2106 -(214 + 1570)) + 905))) then if (v80<=(1 + 0)) then if (v80>(0 + 0)) then v77[v79[1435 -(797 + 636) ]]();else local v124=529 -((1971 -1565) + 123) ;local v125;local v126;while true do if (v124==(1770 -(1749 + 20))) then v77[v125 + (1456 -(990 + 465)) + 0 ]=v126;v77[v125]=v126[v79[1326 -(1249 + 73) ]];break;end if (v124==(0 + 0 + 0)) then v125=v79[1147 -(203 + 263 + 679) ];v126=v77[v79[1901 -(260 + 1638) ]];v124=(2 + 0) -(3 -2) ;end end end elseif ((2500==2500) and (v80<=(6 -4))) then local v127=0 + 0 ;local v128;while true do if (v127==(0 -0)) then v128=v79[1902 -(106 + 1794) ];v77[v128]=v77[v128](v13(v77,v128 + 1 ,v72));break;end end elseif (v80>(5 -2)) then v77[v79[1 + 1 ]]={};elseif (v79[1 + 1 ]==v77[v79[11 -7 ]]) then v71=v71 + (2 -(1727 -(1668 + 58))) ;else v71=v79[1 + 2 ];end elseif (v80<=(16 -10)) then if (v80>(119 -(4 + 110))) then do return;end else v77[v79[586 -(57 + 527) ]]=v77[v79[1430 -((667 -(512 + 114)) + 1386) ]][v77[v79[1467 -(1404 + (153 -94)) ]]];end elseif ((v80<=(19 -(11 + 1))) or (2174>4763)) then v77[v79[105 -(17 + 86) ]]=v77[v79[3 -(0 -0) ]][v79[3 + 1 ]];elseif (v80==(17 -9)) then local v163=0;local v164;while true do if ((2877>240) and (v163==(0 -0))) then v164=v79[6 -4 ];v77[v164](v13(v77,v164 + (167 -((424 -302) + 44)) ,v79[5 -(1 + 1) ]));break;end end elseif v77[v79[6 -(2 + 2) ]] then v71=v71 + (327 -(192 + 134)) + 0 ;else v71=v79[3 + 0 ];end elseif (v80<=(3 + 11)) then if (v80<=(21 -10)) then if ((v80>(24 -14)) or (2896<805)) then v77[v79[67 -(30 + 35) ]]();else v77[v79[(1 + 4) -3 ]]=v77[v79[3 + 0 ]][v79[(2537 -(316 + 960)) -(1043 + 187 + 27) ]];end elseif (v80<=(45 -33)) then for v157=v79[1214 -(323 + 889) ],v79[7 -4 ] do v77[v157]=nil;end elseif (v80>((23 -16) + 4 + 2)) then v77[v79[582 -(361 + 219) ]]=v79[323 -(53 + 267) ]~=(0 + 0) ;elseif (v77[v79[2 + 0 + 0 ]]==v79[9 -(5 + 0) ]) then v71=v71 + (414 -(15 + 398)) ;else v71=v79[985 -(18 + 964) ];end elseif (v80<=((240 -177) -46)) then if ((2316==2316) and (v80<=(9 + 6))) then if  not v77[v79[2]] then v71=v71 + 1 + 0 ;else v71=v79[853 -(20 + 830) ];end elseif ((v80>(13 + 3)) or (2570==1533)) then local v167=v79[128 -(116 + (561 -(83 + 468))) ];v77[v167](v77[v167 + 1 ]);else local v168=0 + (1806 -(1202 + 604)) ;local v169;while true do if (v168==((3445 -2707) -(542 + (325 -129)))) then v169=v79[3 -(1995 -(109 + 1885)) ];v77[v169]=v77[v169](v13(v77,v169 + 1 + (325 -(45 + 280)) ,v72));break;end end end elseif (v80<=(10 + 8)) then local v135=v79[(909 + 32) -(714 + 225) ];v77[v135](v13(v77,v135 + 1 + 0 ,v79[7 -4 ]));elseif ((v80==(48 -(1498 -(1269 + 200)))) or (883==1460)) then local v170=1551 -(1126 + 425) ;local v171;local v172;local v173;local v174;while true do if ((v170==2) or (4619<=999)) then for v212=v171,v72 do local v213=405 -(118 + 287) ;while true do if (((0 -0)==v213) or (3410>4116)) then v174=v174 + (49 -(25 + 23)) ;v77[v212]=v172[v174];break;end end end break;end if (((1122 -(118 + 1003))==v170) or (903>=3059)) then v72=(v173 + v171) -(2 -1) ;v174=377 -(142 + 235) ;v170=734 -(14 + 2 + 716) ;end if (((0 -0)==v170) or (3976<2857)) then v171=v79[2];v172,v173=v70(v77[v171](v13(v77,v171 + 1 + 0 + 0 ,v79[980 -(553 + (812 -388)) ])));v170=1 -(0 + 0) ;end end else local v175=v79[2 + 0 ];local v176=v77[v79[3 + 0 ]];v77[v175 + 1 + 0 ]=v176;v77[v175]=v176[v79[2 + 2 ]];end elseif (v80<=(18 + 3 + 9)) then if ((4930>2307) and (v80<=((99 -45) -(1940 -(340 + 1571))))) then if (v80<=(60 -38)) then if (v80==((822 -(98 + 717)) + 14)) then v71=v79[6 -3 ];else v77[v79[1 + 1 ]]=v79[14 -11 ]~=(753 -(239 + (1340 -(802 + 24)))) ;end elseif (v80<=(9 + 6 + 8)) then local v138=v79[1331 -(797 + 532) ];local v139,v140=v70(v77[v138](v13(v77,v138 + 1 + 0 ,v79[862 -(240 + 619) ])));v72=(v140 + v138) -(1 + 0) ;local v141=0 -0 ;for v159=v138,v72 do local v160=0 + 0 ;while true do if ((1744 -(1344 + (2172 -(1733 + 39))))==v160) then v141=v141 + (2 -(2 -1)) ;v77[v159]=v139[v141];break;end end end elseif ((v80>((2260 -(125 + 909)) -(373 + 829))) or (4046<1291)) then v77[v79[2 + 0 ]]=v60[v79[12 -9 ]];else v71=v79[734 -(476 + 255) ];end elseif (v80<=(1766 -(404 + 1335))) then if (v80==((3104 -(1096 + 852)) -(369 + 761))) then if (v79[2 + 0 ]==v77[v79[4 -0 ]]) then v71=v71 + (1 -0) ;else v71=v79[5 -2 ];end else v77[v79[240 -(64 + 174) ]]=v60[v79[1 + 2 ]];end elseif (v80<=(40 -12)) then v77[v79[2]]=v77[v79[3]];elseif ((v80==((164 + 201) -(144 + 192))) or (4241==3545)) then if v77[v79[2]] then v71=v71 + (217 -(42 + 174)) ;else v71=v79[(3 -0) + 0 ];end elseif ((v77[v79[2 + 0 ]]==v79[(2 -0) + 2 ]) or (4048>4232)) then v71=v71 + (450 -(108 + (430 -89))) ;else v71=v79[2 + 1 ];end elseif (v80<=(1539 -(363 + 1141))) then if ((v80<=(1612 -(175 + 1008 + 397))) or (1750>=3473)) then if (v80==(94 -63)) then v77[v79[(515 -(409 + 103)) -1 ]]=v77[v79[(239 -(46 + 190)) + 0 ]];else v77[v79[2 + 0 + 0 ]][v79[1978 -(1913 + 62) ]]=v79[3 + 1 ];end elseif (v80<=(87 -54)) then v77[v79[1935 -(565 + 1368) ]][v79[11 -8 ]]=v79[1665 -((1572 -(51 + 44)) + 184) ];elseif (v80==((13 + 33) -(1329 -(1114 + 203)))) then if ((3166==3166) and  not v77[v79[2]]) then v71=v71 + 1 + 0 ;else v71=v79[1170 -(645 + 522) ];end else v77[v79[858 -(564 + 292) ]]=v77[v79[3 + 0 ]][v77[v79[6 -2 ]]];end elseif (v80<=(114 -76)) then if ((1763<3724) and (v80<=(1872 -(1045 + 791)))) then v77[v79[4 -2 ]]=v79[307 -(244 + 10 + 50) ];elseif ((57<=2723) and (v80==(29 + 8))) then for v197=v79[1576 -(1281 + 64 + 229) ],v79[(1332 -853) -((767 -(228 + 498)) + 435) ] do v77[v197]=nil;end else do return;end end elseif (v80<=(1040 -(938 + 63))) then local v154=0 + 0 ;local v155;while true do if (v154==((0 -0) + 0)) then v155=v79[2];v77[v155](v77[v155 + (1126 -(936 + 41 + 148)) ]);break;end end elseif ((v80>(14 + 26)) or (2070==443)) then v77[v79[1615 -(1565 + 48) ]]={};else v77[v79[1 + 1 + 0 ]]=v79[1141 -(782 + 356) ];end v71=v71 + (268 -(176 + 91)) ;break;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
