local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then local v80=0;while true do if (v80==0) then v19=v0(v3(v30,1,1));return "";end end else local v81=0;local v82;while true do if (v81==0) then v82=v2(v0(v30,16));if v19 then local v101=0;local v102;while true do if (v101==1) then return v102;end if (v101==0) then v102=v5(v82,v19);v19=nil;v101=1;end end else return v82;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v83=0 -0 ;local v84;while true do if (v83==0) then v84=(v31/((5 -(1640 -(1523 + 114)))^(v32-1)))%((3 -1)^(((v33-(2 -1)) -(v32-((883 -263) -(499 + 56 + 64)))) + (932 -(857 + 74)))) ;return v84-(v84%(569 -(367 + 201))) ;end end else local v85=927 -(214 + 713) ;local v86;while true do if (v85==(0 + 0)) then v86=2^(v32-(1 + 0)) ;return (((v31%(v86 + v86))>=v86) and (878 -(282 + 595))) or 0 ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (1067 -(68 + 997)) );v18=v18 + (1272 -(226 + 1044)) ;return (v36 * 256) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + ((28 -16) -9) );v18=v18 + (121 -(32 + 85)) ;return (v40 * (16441815 + 335401)) + (v39 * (14533 + 51003)) + (v38 * (1213 -(892 + 65))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=1 -0 ;local v44=(v20(v42,1 -0 ,370 -(87 + 263) ) * (2^32)) + v41 ;local v45=v20(v42,201 -((146 -79) + 20 + 93) ,(40 -17) + 8 + 0 );local v46=((v20(v42,78 -46 )==(1 + 0)) and  -(3 -2)) or 1 ;if (v45==(952 -(802 + 150))) then if (v44==(0 -(791 -(368 + 423)))) then return v46 * 0 ;else v45=1 -0 ;v43=0 + 0 ;end elseif (v45==2047) then return ((v44==(997 -((2875 -1960) + 82))) and (v46 * (((20 -(10 + 8)) -1)/(0 + 0)))) or (v46 * NaN) ;end return v8(v46,v45-(1344 -321) ) * (v43 + (v44/((1189 -(1069 + (453 -335)))^(117 -65)))) ;end local function v25(v47) local v48=442 -(416 + 26) ;local v49;local v50;while true do if (v48==0) then v49=nil;if  not v47 then v47=v23();if (v47==(0 -0)) then return "";end end v48=1 + 0 ;end if ((1 -0)==v48) then v49=v3(v16,v18,(v18 + v47) -(439 -(145 + 293)) );v18=v18 + v47 ;v48=432 -(44 + 386) ;end if (v48==((2626 -(116 + 1022)) -(998 + 488))) then v50={};for v90=1 + 0 , #v49 do v50[v90]=v2(v1(v3(v49,v90,v90)));end v48=3 + 0 ;end if ((775 -(201 + 571))==v48) then return v6(v50);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v65=(function() return 0;end)();while true do if (v65~=(1941 -(550 + 1391))) then else if (v51==(0 -0)) then local v96=(function() return 0;end)();local v97=(function() return;end)();while true do if (v96~=(0 -0)) then else v97=(function() return 0;end)();while true do if (v97~=(1785 -(599 + 1185))) then else v54=(function() return {};end)();v51=(function() return 1 + 0 ;end)();break;end if (v97==(0 + 0)) then v52=(function() return function(v333,v334,v335) local v336=(function() return 0;end)();local v337=(function() return;end)();while true do if (v336==(574 -(507 + 67))) then v337=(function() return 1749 -(1013 + 736) ;end)();while true do if ((0 + 0)==v337) then local v493=(function() return 0;end)();while true do if (v493~=(0 -0)) then else local v496=(function() return 0 -0 ;end)();while true do if ((867 -(550 + 317))==v496) then v333[v334-#"[" ]=(function() return v335();end)();return v333,v334,v335;end end end end end end break;end end end;end)();v53=(function() return {};end)();v97=(function() return 1 -0 ;end)();end end break;end end end if (2==v51) then local v98=(function() return 0 -0 ;end)();local v99=(function() return;end)();while true do if (v98==(0 -0)) then v99=(function() return 285 -(134 + 151) ;end)();while true do if (v99==1) then v56[ #"xnx"]=(function() return v21();end)();v51=(function() return 1668 -(970 + 695) ;end)();break;end if (v99==(0 -0)) then v58=(function() return {};end)();for v308= #"\\",v57 do local v309=(function() return 1990 -(582 + 1408) ;end)();local v310=(function() return;end)();local v311=(function() return;end)();local v312=(function() return;end)();while true do if (v309~=(0 -0)) then else v310=(function() return 0 -0 ;end)();v311=(function() return nil;end)();v309=(function() return 3 -2 ;end)();end if (v309~=1) then else v312=(function() return nil;end)();while true do if (v310==1) then if (v311== #",") then v312=(function() return v21()~=(1824 -(1195 + 629)) ;end)();elseif (v311==(2 -0)) then v312=(function() return v24();end)();elseif (v311== #"91(") then v312=(function() return v25();end)();end v58[v308]=(function() return v312;end)();break;end if (v310~=0) then else local v486=(function() return 0;end)();local v487=(function() return;end)();while true do if (0~=v486) then else v487=(function() return 0;end)();while true do if ((241 -(187 + 54))~=v487) then else local v500=(function() return 0;end)();while true do if (v500~=(780 -(162 + 618))) then else v311=(function() return v21();end)();v312=(function() return nil;end)();v500=(function() return 1;end)();end if (v500~=1) then else v487=(function() return 1;end)();break;end end end if ((1 + 0)==v487) then v310=(function() return 1;end)();break;end end break;end end end end break;end end end v99=(function() return 1;end)();end end break;end end end v65=(function() return 1 + 0 ;end)();end if (1~=v65) then else if (v51==(6 -3)) then for v103= #"~",v23() do local v104=(function() return v21();end)();if (v20(v104, #"}", #"{")==(0 -0)) then local v106=(function() return 0;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (2==v106) then if (v20(v108, #"\\", #"!")== #",") then v109[2]=(function() return v58[v109[2]];end)();end if (v20(v108,2,1 + 1 )== #"~") then v109[ #"-19"]=(function() return v58[v109[ #"asd"]];end)();end v106=(function() return 1639 -(1373 + 263) ;end)();end if (v106==(1000 -(451 + 549))) then local v111=(function() return 0;end)();local v112=(function() return;end)();while true do if (v111~=(0 + 0)) then else v112=(function() return 0;end)();while true do if (v112==(0 -0)) then v107=(function() return v20(v104,2 -0 , #"91(");end)();v108=(function() return v20(v104, #".dev",1390 -(746 + 638) );end)();v112=(function() return 1 + 0 ;end)();end if ((1 -0)==v112) then v106=(function() return 1;end)();break;end end break;end end end if (v106~=(342 -(218 + 123))) then else local v113=(function() return 0;end)();local v114=(function() return;end)();while true do if (0==v113) then v114=(function() return 1581 -(1535 + 46) ;end)();while true do if ((0 + 0)==v114) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==0) then local v494=(function() return 0;end)();while true do if (v494==0) then v109[ #"-19"]=(function() return v22();end)();v109[ #"asd1"]=(function() return v22();end)();break;end end elseif (v107== #"!") then v109[ #"91("]=(function() return v23();end)();elseif (v107==2) then v109[ #"91("]=(function() return v23() -(2^(3 + 13)) ;end)();elseif (v107== #"xxx") then local v502=(function() return 560 -(306 + 254) ;end)();local v503=(function() return;end)();while true do if (v502==(0 + 0)) then v503=(function() return 0 -0 ;end)();while true do if (v503==0) then v109[ #"-19"]=(function() return v23() -((1469 -(899 + 568))^16) ;end)();v109[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v114=(function() return 1;end)();end if (v114~=(1 + 0)) then else v106=(function() return 2;end)();break;end end break;end end end if (v106~=(7 -4)) then else if (v20(v108, #"gha", #"asd")== #"!") then v109[ #"xnxx"]=(function() return v58[v109[ #"0313"]];end)();end v53[v103]=(function() return v109;end)();break;end end end end for v105= #"~",v23() do v54,v105,v28=(function() return v52(v54,v105,v28);end)();end return v56;end if (v51==(604 -(268 + 335))) then local v100=(function() return 290 -(60 + 230) ;end)();while true do if (v100==1) then v57=(function() return v23();end)();v51=(function() return 2;end)();break;end if (v100~=0) then else v55=(function() return {};end)();v56=(function() return {v53,v54,nil,v55};end)();v100=(function() return 1 + 0 ;end)();end end end break;end end end end local function v29(v59,v60,v61) local v62=v59[1457 -(282 + 1174) ];local v63=v59[813 -(569 + 242) ];local v64=v59[8 -5 ];return function(...) local v66=v62;local v67=v63;local v68=v64;local v69=v27;local v70=1;local v71= -(1 + 0);local v72={};local v73={...};local v74=v12("#",...) -(1025 -(706 + 318)) ;local v75={};local v76={};for v87=(1092 + 159) -(345 + 376 + 530) ,v74 do if (v87>=v68) then v72[v87-v68 ]=v73[v87 + (2 -1) ];else v76[v87]=v73[v87 + 1 ];end end local v77=(v74-v68) + 1 ;local v78;local v79;while true do v78=v66[v70];v79=v78[1272 -(945 + 326) ];if (v79<=(49 -29)) then if ((v79<=(9 + 0)) or (1131>3620)) then if ((v79<=(704 -(271 + 429))) or (1355==2800)) then if ((1959>262) and (v79<=(1 + 0))) then if (v79>0) then v76[v78[1502 -(176 + 1232 + 92) ]]=v76[v78[1089 -(461 + 625) ]];else v76[v78[(1967 -677) -(993 + 295) ]]=v60[v78[1 + 2 ]];end elseif ((v79<=(1173 -(418 + 753))) or (1839>=3774)) then v76[v78[1 + (1245 -(485 + 759)) ]]();elseif (v79==(1 + (4 -2))) then if ((2811==2811) and v76[v78[1 + 1 ]]) then v70=v70 + 1 + 0 ;else v70=v78[(1721 -(442 + 747)) -(406 + (1258 -(832 + 303))) ];end else local v341=1769 -(1749 + 20) ;local v342;local v343;local v344;local v345;local v346;while true do if (v341==(948 -(88 + 858))) then v76[v346]=v345[v78[1 + 3 ]];v70=v70 + ((404 + 919) -(1249 + 73)) ;v78=v66[v70];v76[v78[1 + 1 + 0 ]]=v76[v78[1148 -(466 + 679) ]];v70=v70 + (2 -1) ;v341=8 -5 ;end if ((2146>1122) and (v341==(1901 -(106 + 1794)))) then v70=v70 + 1 ;v78=v66[v70];v346=v78[1 + 1 ];v345=v76[v78[1 + 2 ]];v76[v346 + (2 -1) ]=v345;v341=5 -(1 + 2) ;end if (v341==0) then v342=nil;v343,v344=nil;v345=nil;v346=nil;v76[v78[116 -(4 + 110) ]]=v61[v78[587 -((846 -(766 + 23)) + 527) ]];v341=1428 -((202 -161) + 1386) ;end if ((v341==(108 -(17 + 86))) or (56==3616)) then v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[3 -1 ]]();v70=v70 + ((2 -0) -1) ;v78=v66[v70];v341=172 -(122 + 44) ;end if (v341==((28 -17) -4)) then v78=v66[v70];v70=v78[9 -6 ];break;end if ((4 + 0)==v341) then for v482=v346,v71 do v342=v342 + 1 + 0 ;v76[v482]=v343[v342];end v70=v70 + (1 -(0 -0)) ;v78=v66[v70];v346=v78[2];v76[v346]=v76[v346](v13(v76,v346 + (66 -((1103 -(1036 + 37)) + 35)) ,v71));v341=4 + 1 ;end if (v341==6) then v76[v78[1259 -(1043 + 214) ]]=v78[(8 + 3) -8 ]~=0 ;v70=v70 + (1213 -(323 + 889)) ;v78=v66[v70];v60[v78[7 -4 ]]=v76[v78[582 -(361 + 219) ]];v70=v70 + (321 -(53 + 267)) ;v341=2 + 5 ;end if ((v341==(416 -(15 + 398))) or (2421<622)) then v78=v66[v70];v346=v78[(1915 -931) -(18 + 964) ];v343,v344=v69(v76[v346](v13(v76,v346 + (3 -2) ,v78[2 + 1 + 0 ])));v71=(v344 + v346) -(1481 -(641 + 839)) ;v342=0;v341=3 + 1 ;end end end elseif (v79<=(856 -((933 -(910 + 3)) + 830))) then if (v79>(4 + 1)) then local v120=v78[2];v76[v120]=v76[v120]();else local v122;local v123;local v124;local v125;v76[v78[128 -(116 + 10) ]]=v76[v78[(2 -1) + 2 ]];v70=v70 + (739 -(542 + 196)) ;v78=v66[v70];v125=v78[(1687 -(1466 + 218)) -1 ];v124=v76[v78[3]];v76[v125 + 1 + 0 ]=v124;v76[v125]=v124[v78[3 + 1 + 0 ]];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[(1152 -(556 + 592)) -2 ]]=v78[(3 + 4) -4 ];v70=v70 + (1552 -(1126 + 425)) ;v78=v66[v70];v125=v78[2];v123={v76[v125](v13(v76,v125 + (3 -2) ,v78[1124 -(118 + 1003) ]))};v122=0 -0 ;for v313=v125,v78[381 -(142 + 235) ] do local v314=0 -0 ;while true do if (v314==(0 + 0)) then v122=v122 + (978 -(553 + 424)) ;v76[v313]=v123[v122];break;end end end v70=v70 + ((809 -(329 + 479)) -(854 -(174 + 680))) ;v78=v66[v70];v70=v78[3 + (0 -0) ];end elseif (v79<=7) then local v138=v78[2 + 0 ];local v139=v76[v78[2 + 1 ]];v76[v138 + 1 ]=v139;v76[v138]=v139[v78[4]];elseif ((1009<=1130) and (v79>8)) then v76[v78[1 + (1 -0) ]]=v76[v78[3]][v76[v78[3 + 1 ]]];else local v349=v78[4 -2 ];do return v13(v76,v349,v349 + v78[7 -4 ] );end end elseif (v79<=((23 + 8) -17)) then if (v79<=(4 + 7)) then if (v79>(749 -(396 + 343))) then local v143=v67[v78[14 -11 ]];local v144;local v145={};v144=v10({},{__index=function(v315,v316) local v317=753 -(239 + 514) ;local v318;while true do if (v317==0) then v318=v145[v316];return v318[1 + 0 ][v318[1331 -(797 + 532) ]];end end end,__newindex=function(v319,v320,v321) local v322=v145[v320];v322[1 + 0 ][v322[2]]=v321;end});for v324=1 + 0 ,v78[9 -5 ] do v70=v70 + (1203 -(373 + 829)) ;local v325=v66[v70];if (v325[732 -(476 + 255) ]==(1131 -(369 + 761))) then v145[v324-((1478 -(29 + 1448)) + 0) ]={v76,v325[5 -2 ]};else v145[v324-(1 -0) ]={v60,v325[3 -0 ]};end v75[ #v75 + (337 -(144 + 192)) ]=v145;end v76[v78[218 -(42 + 116 + 58) ]]=v29(v143,v144,v61);else local v147=0 + 0 ;local v148;while true do if (v147==(0 + 0)) then v148=v78[1 + (1528 -(389 + 1138)) ];v76[v148](v13(v76,v148 + ((2079 -(102 + 472)) -(363 + 1141)) ,v78[3]));break;end end end elseif (v79<=(1592 -(1183 + 397))) then v60[v78[8 -5 ]]=v76[v78[2 + 0 ]];elseif ((2758<2980) and (v79>(10 + 3))) then local v350=v78[2];local v351={v76[v350](v76[v350 + 1 ])};local v352=0;for v416=v350,v78[3 + 1 ] do v352=v352 + (2 -1) ;v76[v416]=v351[v352];end else local v353=0;local v354;while true do if ((v353==(1933 -(565 + 1368))) or (86>=3626)) then v354=nil;v76[v78[7 -5 ]]=v76[v78[1664 -(1394 + 83 + 184) ]][v78[4]];v70=v70 + (1 -0) ;v353=1;end if ((2395==2395) and (v353==(3 + 0 + 0))) then v78=v66[v70];v354=v78[858 -(564 + 292) ];v76[v354](v13(v76,v354 + (1 -0) ,v78[8 -5 ]));v353=308 -(244 + 60) ;end if (v353==(2 + 0)) then v78=v66[v70];v76[v78[478 -(41 + 406 + 29) ]]=v76[v78[1004 -(938 + 63) ]];v70=v70 + 1 + 0 ;v353=1128 -(936 + 189) ;end if (v353==4) then v70=v70 + 1 + 0 ;v78=v66[v70];v70=v78[3];break;end if ((3780>2709) and (v353==(1614 -(1565 + 48)))) then v78=v66[v70];v76[v78[2 + (1545 -(320 + 1225)) ]]=v76[v78[1141 -(782 + 356) ]];v70=v70 + 1 ;v353=269 -(176 + (161 -70)) ;end end end elseif ((v79<=(43 -26)) or (237>=2273)) then if (v79<=(22 -7)) then local v151=v78[1094 -(975 + 117) ];local v152={};for v327=1876 -(157 + 1718) , #v75 do local v328=0 + 0 ;local v329;while true do if (v328==(0 -0)) then v329=v75[v327];for v478=0 -0 , #v329 do local v479=v329[v478];local v480=v479[1019 -(697 + 321) ];local v481=v479[2 + 0 ];if (((v480==v76) and (v481>=v151)) or (2040<=703)) then v152[v481]=v480[v481];v479[1]=v152;end end break;end end end elseif (v79>(43 -27)) then for v419=v78[2],v78[5 -2 ] do v76[v419]=nil;end else v70=v78[6 -3 ];end elseif ((3279<=3967) and (v79<=(8 + 10))) then v76[v78[2]]=v76[v78[5 -2 ]][v78[4]];elseif (v79>(50 -31)) then do return v76[v78[1229 -(322 + 905) ]];end elseif (v76[v78[613 -(602 + 9) ]]==v76[v78[1193 -(449 + 740) ]]) then v70=v70 + (873 -(826 + 46)) ;else v70=v78[950 -((1709 -(157 + 1307)) + 702) ];end elseif (v79<=30) then if (v79<=(78 -53)) then if (v79<=(8 + (1873 -(821 + 1038)))) then if (v79==((4787 -2868) -(260 + 1638))) then local v155=v78[(49 + 393) -((678 -296) + 58) ];local v156,v157=v69(v76[v155](v13(v76,v155 + 1 ,v78[3])));v71=(v157 + v155) -(3 -2) ;local v158=0 + 0 ;for v330=v155,v71 do v158=v158 + 1 ;v76[v330]=v156[v158];end else do return;end end elseif ((v79<=(46 -23)) or (1988==877)) then v76[v78[5 -(2 + 1) ]][v78[1208 -((2235 -1333) + 303) ]]=v78[(1034 -(834 + 192)) -(1 + 3) ];elseif (v79>(57 -33)) then local v356;v76[v78[1 + 1 ]]=v78[3];v70=v70 + ((435 + 1256) -(1121 + 569)) ;v78=v66[v70];v356=v78[216 -(22 + 192) ];v76[v356](v76[v356 + 1 ]);v70=v70 + ((15 + 669) -(483 + 200)) ;v78=v66[v70];v76[v78[1465 -(1404 + 59) ]]=v76[v78[3]];v70=v70 + (2 -1) ;v78=v66[v70];v76[v78[2 -0 ]]();v70=v70 + (766 -(468 + 297)) ;v78=v66[v70];v70=v78[3];elseif ((4291>1912) and (v76[v78[564 -(334 + 228) ]]==v78[4])) then v70=v70 + (3 -2) ;else v70=v78[6 -3 ];end elseif ((2003<2339) and (v79<=27)) then if (v79>(46 -20)) then local v161;local v162;v76[v78[(1 -0) + 1 ]]=v78[(543 -(300 + 4)) -(141 + 95) ];v70=v70 + 1 ;v78=v66[v70];v162=v78[2 + 0 ];v76[v162](v76[v162 + 1 ]);v70=v70 + 1 ;v78=v66[v70];v76[v78[4 -2 ]]=v61[v78[(2 + 4) -3 ]];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[(13 -8) -3 ]]=v76[v78[(365 -(112 + 250)) + 0 ]][v78[3 + 1 ]];v70=v70 + (1 -(0 + 0)) ;v78=v66[v70];v76[v78[2 + 0 ]]=v76[v78[166 -(92 + 71) ]][v78[9 -5 ]];v70=v70 + 1 + 0 ;v78=v66[v70];v162=v78[2 -(0 + 0) ];v161=v76[v78[3]];v76[v162 + 1 ]=v161;v76[v162]=v161[v78[769 -(574 + 191) ]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2 + 0 ]]=v78[3];v70=v70 + 1 ;v78=v66[v70];v162=v78[2];v76[v162](v13(v76,v162 + (2 -1) ,v78[2 + 1 ]));v70=v70 + (850 -(254 + 595)) ;v78=v66[v70];v70=v78[3];else local v180=126 -(55 + 71) ;local v181;while true do if (v180==((0 + 0) -0)) then v181=v78[(1341 + 451) -(573 + 1217) ];v76[v181](v76[v181 + (2 -1) ]);break;end end end elseif ((432==432) and (v79<=(3 + 25))) then local v182;local v183;v183=v78[2 -(0 + 0) ];v182=v76[v78[3]];v76[v183 + (940 -(714 + 225)) ]=v182;v76[v183]=v182[v78[11 -7 ]];v70=v70 + (1 -0) ;v78=v66[v70];v76[v78[1 + 1 ]]=v60[v78[3 -0 ]];v70=v70 + 1 ;v78=v66[v70];v183=v78[2];v76[v183]=v76[v183](v13(v76,v183 + ((600 + 207) -(118 + 688)) ,v78[51 -(25 + 23) ]));v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[1888 -(927 + 959) ]]=v76[v78[10 -7 ]];v70=v70 + 1 ;v78=v66[v70];v76[v78[734 -(16 + (2130 -(1001 + 413))) ]]=v61[v78[5 -2 ]];v70=v70 + (98 -(11 + 86)) ;v78=v66[v70];v76[v78[4 -2 ]]=v76[v78[3]][v78[4]];v70=v70 + 1 ;v78=v66[v70];v76[v78[287 -(175 + 110) ]]=v76[v78[6 -3 ]][v78[4]];v70=v70 + (4 -3) ;v78=v66[v70];v76[v78[1798 -(503 + 1293) ]]=v76[v78[8 -5 ]][v78[3 + (2 -1) ]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[1064 -(810 + 251) ];v70=v70 + 1 + 0 ;v78=v66[v70];v70=v78[3];elseif ((v79==(9 + 20)) or (1145>=1253)) then v76[v78[(884 -(244 + 638)) + 0 ]]=v78[3];elseif ((3418>2118) and (v78[535 -(43 + 490) ]==v76[v78[737 -(711 + 22) ]])) then v70=v70 + (3 -2) ;else v70=v78[3];end elseif (v79<=(894 -(240 + 619))) then if (v79<=(8 + 24)) then if ((3066<=3890) and (v79==(48 -17))) then v76[v78[1 + 1 ]]={};else v76[v78[1746 -(1344 + 400) ]]=v78[408 -(255 + 150) ]~=(0 + 0) ;end elseif ((v79<=(18 + 15)) or (2998>=3281)) then v76[v78[8 -6 ]][v78[9 -6 ]]=v78[1743 -(404 + 1335) ];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[(1102 -(627 + 66)) -((545 -362) + 223) ]]=v78[4 -0 ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[1 + 1 ]][v78[340 -((612 -(512 + 90)) + 327) ]]=v78[3 + 1 ];v70=v70 + (339 -(118 + 220)) ;v78=v66[v70];v76[v78[1 + 1 ]][v78[452 -(108 + 341) ]]=v78[2 + 2 ];v70=v70 + (1907 -(1665 + 241)) ;v78=v66[v70];v76[v78[8 -(723 -(373 + 344)) ]][v78[(675 + 821) -(711 + 782) ]]=v78[4];v70=v70 + (1 -0) ;v78=v66[v70];v76[v78[471 -(72 + 198 + (524 -325)) ]][v78[1 + 2 ]]=v78[4];v70=v70 + (1820 -(580 + 1239)) ;v78=v66[v70];v76[v78[2]][v78[8 -5 ]]=v78[4 + 0 ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[1 + (1 -0) ]][v78[7 -4 ]]=v78[3 + 1 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[1171 -(645 + 522) ];v70=v70 + (1791 -(1010 + 780)) ;v78=v66[v70];v76[v78[2 + 0 ]][v78[14 -11 ]]=v78[11 -7 ];v70=v70 + ((2936 -(35 + 1064)) -(1045 + 791)) ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[4];v70=v70 + (2 -1) ;v78=v66[v70];v76[v78[2 -0 ]][v78[3]]=v78[509 -(256 + 95 + 154) ];v70=v70 + 1 ;v78=v66[v70];v76[v78[1576 -(1281 + 293) ]][v78[269 -(28 + 238) ]]=v78[8 -4 ];v70=v70 + (1560 -(1381 + (380 -202))) ;v78=v66[v70];v76[v78[2 + 0 ]][v78[3 + 0 + 0 ]]=v78[4];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2]][v78[10 -7 ]]=v78[3 + 1 ];v70=v70 + (471 -(381 + 89)) ;v78=v66[v70];v76[v78[2 + 0 ]][v78[3]]=v78[4];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2]][v78[4 -1 ]]=v78[4];v70=v70 + (1157 -((2310 -(298 + 938)) + (1341 -(233 + 1026)))) ;v78=v66[v70];v76[v78[3 -1 ]][v78[1787 -(214 + 1570) ]]=v78[1459 -(990 + 465) ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2]][v78[2 + 1 ]]=v78[1670 -(636 + 1030) ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2 + 0 ]][v78[(11 + 0) -8 ]]=v78[1730 -(1668 + 58) ];v70=v70 + (627 -(512 + 114)) ;v78=v66[v70];v76[v78[5 -3 ]][v78[(2 + 3) -2 ]]=v78[13 -9 ];v70=v70 + 1 + 0 + 0 ;v78=v66[v70];v76[v78[1 + 1 ]][v78[3 + 0 ]]=v78[13 -9 ];v70=v70 + (1995 -(109 + 1885)) ;v78=v66[v70];v76[v78[1471 -(1269 + 200) ]][v78[3]]=v78[7 -3 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[817 -(98 + 717) ]][v78[829 -(802 + (245 -(55 + 166))) ]]=v78[1 + 3 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[5 -2 ]]=v78[4 -0 ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2 + 0 ]][v78[1 + 2 ]]=v78[1 + 3 ];v70=v70 + (2 -1) ;v78=v66[v70];v76[v78[6 -4 ]][v78[2 + 1 ]]=v78[2 + 2 ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2 + 0 ]][v78[2 + 1 + 0 ]]=v78[1437 -(797 + 636) ];v70=v70 + (4 -3) ;v78=v66[v70];v76[v78[1621 -(1427 + 192) ]][v78[2 + 1 ]]=v78[8 -4 ];v70=v70 + (3 -2) + 0 ;v78=v66[v70];v76[v78[(298 -(36 + 261)) + 1 ]][v78[329 -(192 + 134) ]]=v78[4];v70=v70 + (1277 -(316 + 960)) ;v78=v66[v70];v76[v78[2 + (0 -0) ]][v78[3 + 0 ]]=v78[4 + 0 ];v70=v70 + (3 -2) ;v78=v66[v70];v76[v78[553 -(83 + 468) ]][v78[1809 -(1202 + 604) ]]=v78[18 -14 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[2 -(1368 -(34 + 1334)) ]][v78[8 -5 ]]=v78[329 -(45 + 280) ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2]][v78[3 + 0 ]]=v78[4];v70=v70 + 1 + 0 + 0 ;v78=v66[v70];v76[v78[2]][v78[2 + 1 + 0 ]]=v78[1 + 3 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[3 -1 ]][v78[1914 -(340 + 1571) ]]=v78[2 + 2 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[1774 -(1733 + 39) ]][v78[3]]=v78[10 -6 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[1036 -(125 + 909) ]][v78[1951 -(1096 + 852) ]]=v78[2 + 2 ];v70=v70 + (1 -0) ;v78=v66[v70];v76[v78[2 + (1283 -(1035 + 248)) ]][v78[515 -(409 + 103) ]]=v78[4];v70=v70 + (237 -(46 + 190)) ;v78=v66[v70];v76[v78[2]][v78[98 -(51 + (65 -(20 + 1))) ]]=v78[2 + 2 ];v70=v70 + (1318 -(1114 + 203)) ;v78=v66[v70];v76[v78[2]][v78[729 -(228 + 498) ]]=v78[4];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2]][v78[3]]=v78[3 + 1 + 0 ];v70=v70 + (664 -(174 + (808 -(134 + 185)))) ;v78=v66[v70];v76[v78[5 -3 ]][v78[(3041 -(549 + 584)) -(830 + 1075) ]]=v78[4];v70=v70 + (525 -(303 + 221)) ;v78=v66[v70];v76[v78[1271 -(231 + 1038) ]][v78[3]]=v78[4];v70=v70 + (686 -(314 + 371)) + 0 ;v78=v66[v70];v76[v78[6 -4 ]][v78[1165 -(171 + 991) ]]=v78[16 -12 ];v70=v70 + (2 -1) ;v78=v66[v70];v76[v78[4 -2 ]][v78[(971 -(478 + 490)) + 0 ]]=v78[4];v70=v70 + (3 -2) ;v78=v66[v70];v76[v78[(3 + 2) -3 ]][v78[4 -1 ]]=v78[12 -(1180 -(786 + 386)) ];v70=v70 + (1249 -(111 + 1137)) ;v78=v66[v70];v76[v78[160 -(91 + 67) ]][v78[8 -5 ]]=v78[1 + 3 ];v70=v70 + (524 -(423 + 100)) ;v78=v66[v70];v76[v78[1 + 1 ]][v78[(22 -15) -4 ]]=v78[3 + 1 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[(2152 -(1055 + 324)) -(326 + 445) ]][v78[13 -(1350 -(1093 + 247)) ]]=v78[4];v70=v70 + (2 -1) ;v78=v66[v70];v76[v78[2]][v78[(6 + 0) -3 ]]=v78[715 -(530 + 181) ];v70=v70 + 1 ;v78=v66[v70];v76[v78[883 -(614 + 267) ]][v78[35 -(19 + 13) ]]=v78[6 -2 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[4 -2 ]][v78[1 + 2 ]]=v78[11 -7 ];v70=v70 + 1 ;v78=v66[v70];v76[v78[1 + 1 ]][v78[11 -8 ]]=v78[4];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]][v78[4 -1 ]]=v78[7 -3 ];v70=v70 + (1813 -(1293 + 519)) ;v78=v66[v70];v76[v78[3 -1 ]][v78[7 -4 ]]=v78[7 -3 ];v70=v70 + (4 -3) ;v78=v66[v70];v76[v78[2]][v78[6 -(9 -6) ]]=v78[3 + (2 -1) ];v70=v70 + 1 + (0 -0) ;v78=v66[v70];v76[v78[4 -2 ]][v78[1 + 2 ]]=v78[2 + 2 ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[1098 -(709 + 387) ]][v78[3]]=v78[1862 -(673 + 1185) ];v70=v70 + (2 -1) ;v78=v66[v70];v76[v78[6 -4 ]][v78[4 -1 ]]=v78[3 + 1 ];v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2 -(0 + 0) ]][v78[1 + 2 ]]=v78[7 -3 ];v70=v70 + ((3 -2) -(0 -0)) ;v78=v66[v70];v76[v78[1882 -(337 + 109 + 1434) ]][v78[3]]=v78[1287 -(1040 + 243) ];v70=v70 + (2 -1) ;v78=v66[v70];v76[v78[2]]=v76[v78[1850 -(559 + 1288) ]];v70=v70 + (1932 -(609 + (3380 -2058))) ;v78=v66[v70];v76[v78[456 -(13 + 441) ]]=v78[3];v70=v70 + (3 -2) ;v78=v66[v70];v76[v78[5 -3 ]]=v78[14 -11 ];v70=v70 + 1 + (688 -(364 + 324)) ;v78=v66[v70];v70=v78[10 -7 ];elseif (v79>34) then v76[v78[(2 -1) + 1 ]]=v61[v78[2 + 1 ]];else local v367=v78[5 -3 ];local v368=v78[3 + 1 ];local v369=v367 + (3 -1) ;local v370={v76[v367](v76[v367 + 1 + 0 ],v76[v369])};for v422=1,v368 do v76[v369 + v422 ]=v370[v422];end local v371=v370[1];if (v371 or (4649<=2632)) then local v437=0;while true do if (v437==0) then v76[v369]=v371;v70=v78[3 + 0 ];break;end end else v70=v70 + 1 + 0 ;end end elseif ((v79<=(38 + 0 + 0)) or (3860>4872)) then if ((v79<=(469 -(153 + 280))) or (3998==2298)) then local v302=0 -(0 -0) ;local v303;local v304;local v305;while true do if ((0 + 0)==v302) then v303=v78[1 + 1 ];v304={v76[v303](v13(v76,v303 + 1 + 0 ,v78[3 + 0 ]))};v302=1;end if ((1 -0)==v302) then v305=0 + (0 -0) ;for v438=v303,v78[671 -(89 + 578) ] do v305=v305 + 1 ;v76[v438]=v304[v305];end break;end end elseif ((v79>(27 + 10)) or (8>=2739)) then local v372;local v373;v76[v78[3 -1 ]]=v78[1052 -((1840 -(1249 + 19)) + 477) ];v70=v70 + 1 + 0 ;v78=v66[v70];v373=v78[2];v76[v373](v76[v373 + 1 + 0 ]);v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[2]]=v61[v78[3 + 0 ]];v70=v70 + (87 -(84 + 2)) ;v78=v66[v70];v76[v78[2 -0 ]]=v76[v78[3]][v78[3 + 1 ]];v70=v70 + (843 -(497 + 345)) ;v78=v66[v70];v76[v78[1 + 1 ]]=v76[v78[1 + 2 ]][v78[15 -11 ]];v70=v70 + ((2420 -(686 + 400)) -(605 + 728)) ;v78=v66[v70];v373=v78[2];v372=v76[v78[3 + 0 ]];v76[v373 + 1 ]=v372;v76[v373]=v372[v78[8 -4 ]];v70=v70 + 1 ;v78=v66[v70];v76[v78[2]]=v78[1 + 2 ];v70=v70 + (3 -2) ;v78=v66[v70];v373=v78[2 + 0 ];v76[v373](v13(v76,v373 + (2 -1) ,v78[3 + 0 ]));v70=v70 + (490 -(457 + 26 + 6)) ;v78=v66[v70];v76[v78[1 + 1 ]]=v78[1405 -(832 + 570) ];v70=v70 + 1 ;v78=v66[v70];v70=v78[3 + 0 ];else local v392=v78[1 + 1 ];v76[v392]=v76[v392](v13(v76,v392 + (3 -2) ,v78[2 + 1 ]));end elseif (v79<=(835 -(588 + 208))) then local v306=v78[2];v76[v306]=v76[v306](v13(v76,v306 + (2 -1) ,v71));elseif (v79==((2069 -(73 + 156)) -(884 + 916))) then if  not v76[v78[3 -1 ]] then v70=v70 + 1 + 0 ;else v70=v78[3];end else local v394;local v395,v396;local v397;local v398;v76[v78[655 -(232 + 2 + 419) ]]=v61[v78[3]];v70=v70 + (1890 -(1569 + 320)) ;v78=v66[v70];v398=v78[1 + 1 ];v397=v76[v78[3]];v76[v398 + (812 -(721 + 90)) + 0 ]=v397;v76[v398]=v397[v78[(1 + 12) -9 ]];v70=v70 + (606 -((1025 -709) + 289)) ;v78=v66[v70];v76[v78[2]]=v78[3];v70=v70 + (2 -1) ;v78=v66[v70];v76[v78[1 + (471 -(224 + 246)) ]]=v78[4 -1 ]~=(1453 -(666 + 787)) ;v70=v70 + (426 -(360 + 65)) ;v78=v66[v70];v398=v78[2 + 0 ];v395,v396=v69(v76[v398](v13(v76,v398 + (255 -(79 + 175)) ,v78[4 -1 ])));v71=(v396 + v398) -1 ;v394=0 + 0 ;for v426=v398,v71 do v394=v394 + (2 -1) ;v76[v426]=v395[v394];end v70=v70 + (1 -0) ;v78=v66[v70];v398=v78[2];v76[v398]=v76[v398](v13(v76,v398 + (900 -(503 + 396)) ,v71));v70=v70 + (182 -(92 + 89)) ;v78=v66[v70];v76[v78[3 -1 ]]();v70=v70 + 1 + 0 ;v78=v66[v70];v76[v78[(3 -1) + 0 + 0 ]]=v61[v78[3]];v70=v70 + 1 + 0 ;v78=v66[v70];if ((2590==2590) and v76[v78[7 -5 ]]) then v70=v70 + 1 ;else v70=v78[1 + 0 + 2 ];end end v70=v70 + (2 -1) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
