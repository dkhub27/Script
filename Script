--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v80=0;local v81;while true do if (v80==0) then v81=v2(v0(v30,16));if v19 then local v95=v5(v81,v19);v19=nil;return v95;else return v81;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -1))))%((1 + 1)^(((v33-(1 + 0)) -(v32-(1 -0))) + (1638 -(1523 + 114)))) ;return v82-(v82%1) ;else local v83=(4 -2)^(v32-(620 -((1825 -(226 + 1044)) + 64))) ;return (((v31%(v83 + v83))>=v83) and (932 -(857 + 74))) or (568 -(367 + (875 -674))) ;end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35,v36=v1(v16,v18,v18 + (119 -(32 + 85)) );v18=v18 + 2 ;return (v36 * (251 + 5)) + v35 ;end local function v23() local v37,v38,v39,v40=v1(v16,v18,v18 + 1 + 2 );v18=v18 + (961 -(892 + 65)) ;return (v40 * (40022563 -23245347)) + (v39 * 65536) + (v38 * (472 -(395 -179))) + v37 ;end local function v24() local v41=v23();local v42=v23();local v43=351 -(87 + 263) ;local v44=(v20(v42,181 -(67 + 0 + (904 -(368 + 423))) ,15 + 5 ) * ((4 -2)^(24 + 8))) + v41 ;local v45=v20(v42,83 -62 ,983 -(802 + 150) );local v46=((v20(v42,85 -53 )==(1 -0)) and  -(1 + 0)) or (998 -(915 + 82)) ;if (v45==0) then if (v44==(0 -(0 -0))) then return v46 * (0 + 0) ;else v45=1 -0 ;v43=0;end elseif (v45==(3234 -(1069 + 118))) then return ((v44==0) and (v46 * ((2 -1)/(0 -0)))) or (v46 * NaN) ;end return v8(v46,v45-((196 -(10 + 8)) + 845) ) * (v43 + (v44/(2^(92 -40)))) ;end local function v25(v47) local v48=0 + 0 ;local v49;local v50;while true do if (v48==(0 -0)) then v49=nil;if  not v47 then v47=v23();if (v47==0) then return "";end end v48=443 -(416 + 26) ;end if (v48==(9 -6)) then return v6(v50);end if (v48==(1 + 1)) then v50={};for v87=(773 -(201 + 571)) -0 , #v49 do v50[v87]=v2(v1(v3(v49,v87,v87)));end v48=441 -(145 + (1431 -(116 + 1022))) ;end if (v48==(431 -(44 + 386))) then v49=v3(v16,v18,(v18 + v47) -(1487 -(998 + 488)) );v18=v18 + v47 ;v48=(4 -3) + 1 + 0 ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0 -0 ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v65=(function() return 0;end)();while true do if (v65==(241 -(187 + 54))) then if (v51==0) then local v93=(function() return 780 -(162 + 618) ;end)();while true do if (v93~=1) then else v54=(function() return {};end)();v55=(function() return {};end)();v93=(function() return 2;end)();end if (v93==(0 -0)) then v52=(function() return function(v105,v106,v107) local v108=(function() return 0 + 0 ;end)();while true do if (v108==(374 -(123 + 251))) then local v152=(function() return 0;end)();while true do if (v152==(0 -0)) then v105[v106-#"[" ]=(function() return v107();end)();return v105,v106,v107;end end end end end;end)();v53=(function() return {};end)();v93=(function() return 4 -3 ;end)();end if (v93~=2) then else v51=(function() return 1 -0 ;end)();break;end end end if (v51==2) then v56[ #"19("]=(function() return v21();end)();for v96= #"~",v23() do local v97=(function() return 0;end)();local v98=(function() return;end)();while true do if (v97==(698 -(208 + 490))) then v98=(function() return v21();end)();if (v20(v98, #",", #"|")==(1636 -(1373 + 263))) then local v109=(function() return 0;end)();local v110=(function() return;end)();local v111=(function() return;end)();local v112=(function() return;end)();while true do if (v109==3) then if (v20(v111, #"91(", #"xxx")== #"[") then v112[ #"0836"]=(function() return v58[v112[ #"?id="]];end)();end v53[v96]=(function() return v112;end)();break;end if (v109==1) then local v176=(function() return 0 + 0 ;end)();local v177=(function() return;end)();while true do if (v176~=0) then else v177=(function() return 0 + 0 ;end)();while true do if (v177==(837 -(660 + 176))) then v109=(function() return 2 -0 ;end)();break;end if (v177~=(0 -0)) then else local v214=(function() return 0;end)();while true do if (v214==(1 + 0)) then v177=(function() return 203 -(14 + 188) ;end)();break;end if (v214==(0 + 0)) then v112=(function() return {v22(),v22(),nil,nil};end)();if (v110==(0 -0)) then local v216=(function() return 341 -(218 + 123) ;end)();while true do if (v216~=(675 -(534 + 141))) then else v112[ #"-19"]=(function() return v22();end)();v112[ #"xnxx"]=(function() return v22();end)();break;end end elseif (v110== #"\\") then v112[ #"asd"]=(function() return v23();end)();elseif (v110==(1 + 1)) then v112[ #"xxx"]=(function() return v23() -((2 + 0)^(15 + 1)) ;end)();elseif (v110~= #"asd") then else local v221=(function() return 0;end)();local v222=(function() return;end)();while true do if (v221~=(560 -(306 + 254))) then else v222=(function() return 0 + 0 ;end)();while true do if (v222~=0) then else v112[ #"-19"]=(function() return v23() -((3 -1)^16) ;end)();v112[ #".dev"]=(function() return v22();end)();break;end end break;end end end v214=(function() return 1;end)();end end end end break;end end end if (v109==(2 + 0)) then if (v20(v111, #".", #"~")~= #"!") then else v112[2 + 0 ]=(function() return v58[v112[3 -1 ]];end)();end if (v20(v111,2 -0 ,4 -2 )~= #">") then else v112[ #"-19"]=(function() return v58[v112[ #"asd"]];end)();end v109=(function() return 606 -(268 + 335) ;end)();end if (v109==(0 -0)) then local v178=(function() return 0 + 0 ;end)();local v179=(function() return;end)();while true do if (v178==0) then v179=(function() return 0 + 0 ;end)();while true do if (v179~=(396 -(115 + 281))) then else local v215=(function() return 0;end)();while true do if ((0 -0)==v215) then v110=(function() return v20(v98,2, #"91(");end)();v111=(function() return v20(v98, #".com",5 + 1 );end)();v215=(function() return 1;end)();end if (v215==(2 -1)) then v179=(function() return 3 -2 ;end)();break;end end end if (v179~=(868 -(550 + 317))) then else v109=(function() return 1 -0 ;end)();break;end end break;end end end end end break;end end end for v99= #">",v23() do v54,v99,v28=(function() return v52(v54,v99,v28);end)();end return v56;end v65=(function() return 2 -1 ;end)();end if (v65~=(1 -0)) then else if (v51~=(2 -1)) then else v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v58=(function() return {};end)();for v100= #"{",v57 do local v101=(function() return 0;end)();local v102=(function() return;end)();local v103=(function() return;end)();local v104=(function() return;end)();while true do if ((1025 -(706 + 318))==v101) then v104=(function() return nil;end)();while true do if (v102==(1665 -(970 + 695))) then local v149=(function() return 0 -0 ;end)();local v150=(function() return;end)();while true do if (v149~=0) then else v150=(function() return 1251 -(721 + 530) ;end)();while true do if (v150~=(1272 -(945 + 326))) then else v102=(function() return 1991 -(582 + 1408) ;end)();break;end if (v150~=(0 -0)) then else v103=(function() return v21();end)();v104=(function() return nil;end)();v150=(function() return 1 -0 ;end)();end end break;end end end if (v102~=1) then else if (v103== #"\\") then v104=(function() return v21()~=(0 -0) ;end)();elseif (v103==(2 + 0)) then v104=(function() return v24();end)();elseif (v103~= #"asd") then else v104=(function() return v25();end)();end v58[v100]=(function() return v104;end)();break;end end break;end if (v101~=(1824 -(1195 + 629))) then else v102=(function() return 0;end)();v103=(function() return nil;end)();v101=(function() return 1501 -(1408 + 92) ;end)();end end end v51=(function() return 1088 -(461 + 625) ;end)();end break;end end end end local function v29(v59,v60,v61) local v62=v59[1];local v63=v59[3 -1 ];local v64=v59[(1761 -(381 + 89)) -(993 + 295) ];return function(...) local v66=v62;local v67=v63;local v68=v64;local v69=v27;local v70=1 + 0 + 0 ;local v71= -(1 -0);local v72={};local v73={...};local v74=v12("#",...) -(1 + 0) ;local v75={};local v76={};for v84=0 + 0 + 0 + 0 ,v74 do if (v84>=v68) then v72[v84-v68 ]=v73[v84 + ((2038 -848) -(449 + 346 + 394)) ];else v76[v84]=v73[v84 + 1 + 0 ];end end local v77=(v74-v68) + 1 + 0 ;local v78;local v79;while true do v78=v66[v70];v79=v78[3 -2 ];if ((3916>3328) and (v79<=(549 -(406 + 123)))) then if (v79<=(1778 -(1749 + 20))) then if (v79<=(444 -(382 + 58))) then if ((2500<3839) and (v79<=(1 + 0))) then if (v79>(1433 -(797 + 636))) then v76[v78[(2480 -(1074 + 82)) -((2736 -1487) + 73) ]]=v78[2 + 1 ]~=(1145 -(466 + 679)) ;else v76[v78[5 -(1622 -(1427 + 192)) ]]=v76[v78[1787 -(214 + 1570) ]][v76[v78[(4 + 5) -5 ]]];end elseif (v79<=(3 -1)) then local v116=0;local v117;local v118;local v119;local v120;while true do if (v116==(0 -0)) then v117=v78[5 -3 ];v118,v119=v69(v76[v117](v13(v76,v117 + (1901 -(106 + 1794)) ,v78[3])));v116=(1456 -(990 + 465)) + 0 ;end if (v116==((283 + 402) -(219 + 264 + 200))) then for v196=v117,v71 do v120=v120 + (1464 -((1730 -(192 + 134)) + 59)) ;v76[v196]=v118[v120];end break;end if ((507==507) and (v116==(1 + 0 + 0))) then v71=(v119 + v117) -(2 -(1 + 0)) ;v120=0 -0 ;v116=2;end end elseif (v79==(117 -((1280 -(316 + 960)) + 110))) then if ((240<=3165) and (v78[586 -(57 + 527) ]==v76[v78[1431 -((161 -120) + 1386) ]])) then v70=v70 + (104 -(17 + 86)) ;else v70=v78[3 + 0 ];end else v76[v78[(2 + 1) -1 ]]={};end elseif (v79<=(17 -11)) then if (v79==(171 -(122 + 44))) then v76[v78[2 -0 ]]={};else v76[v78[(5 + 1) -4 ]]=v76[v78[3 + 0 ]];end elseif (v79<=(2 + 5)) then local v124=v78[3 -1 ];v76[v124](v76[v124 + 1 ]);elseif (v79>(73 -(30 + 35))) then v76[v78[2 + 0 + 0 ]][v78[1260 -(1043 + 214) ]]=v78[15 -11 ];elseif ((834>=805) and v76[v78[1214 -((2049 -(1668 + 58)) + 889) ]]) then v70=v70 + (2 -1) ;else v70=v78[583 -(361 + 219) ];end elseif ((v79<=(334 -(53 + 267))) or (3812<2316)) then if ((v79<=(3 + 8)) or (2652<=1533)) then if ((v79==((1049 -(512 + 114)) -(15 + 398))) or (3598<1460)) then v76[v78[984 -(18 + (3685 -2721)) ]]=v76[v78[(562 -(83 + 468)) -8 ]][v78[3 + 1 ]];else local v127=0 + 0 ;local v128;while true do if (v127==(850 -((1826 -(1202 + 604)) + (3874 -3044)))) then v128=v78[2 + 0 ];v76[v128](v76[v128 + (127 -(116 + 10)) ]);break;end end end elseif ((v79<=(1 + 11)) or (4116<1192)) then local v129=738 -(542 + 196) ;local v130;while true do if ((v129==(0 -0)) or (3377<=903)) then v130=v78[128 -(55 + 71) ];v76[v130]=v76[v130](v13(v76,v130 + (1 -0) + 0 ,v71));break;end end elseif (v79>((44 -28) -3)) then local v156=0 + (0 -0) ;local v157;while true do if (v156==(0 + 0)) then v157=v78[(326 -(45 + 280)) + 1 ];v76[v157](v13(v76,v157 + ((1 -0) -0) ,v78[3]));break;end end else for v184=v78[4 -2 ],v78[7 -4 ] do v76[v184]=nil;end end elseif ((3976>=439) and (v79<=(49 -32))) then if (v79<=(1566 -(1126 + 425))) then v76[v78[407 -(114 + 4 + 287) ]]=v76[v78[11 -(7 + 1) ]][v78[(411 + 714) -(118 + 1003) ]];elseif (v79>(46 -30)) then do return;end else v76[v78[(210 + 169) -(142 + 235) ]]=v78[51 -(25 + (79 -56)) ]~=(0 + 0 + 0) ;end elseif ((3752==3752) and (v79<=((15 + 66) -63))) then if (v78[1 + 1 ]==v76[v78[736 -(16 + 716) ]]) then v70=v70 + (978 -(553 + 424)) ;else v70=v78[3];end elseif (v79==(35 -16)) then v76[v78[(3 -1) + 0 ]]=v61[v78[3 + 0 ]];else v76[v78[2 + 0 ]]=v78[6 -3 ];end elseif (v79<=(13 + 17)) then if (v79<=(3 + 12 + 10)) then if ((4046>2695) and (v79<=(47 -25))) then if ((v79==(58 -(33 + 4))) or (3545==3197)) then v76[v78[4 -2 ]][v78[1 + 2 ]]=v78[19 -15 ];else v70=v78[756 -(239 + (1733 -1219)) ];end elseif (v79<=(9 + 14)) then do return;end elseif (v79==(1353 -(797 + 532))) then if ((2394>373) and (v76[v78[2 + 0 ]]==v78[2 + 2 ])) then v70=v70 + ((2645 -(340 + 1571)) -(711 + 22)) ;else v70=v78[11 -8 ];end else v76[v78[4 -2 ]]();end elseif ((4155<=4232) and (v79<=(1229 -(148 + 225 + (2601 -(1733 + 39)))))) then if (v79==(7 + 19)) then v76[v78[1996 -(109 + 1885) ]]=v76[v78[(2203 -(1269 + 200)) -((912 -436) + 255) ]][v76[v78[1134 -((1013 -644) + 761) ]]];else local v138=v78[2 + 0 ];v76[v138]=v76[v138](v13(v76,v138 + ((816 -(98 + 717)) -0) ,v71));end elseif (v79<=(52 -24)) then if ( not v76[v78[240 -((2012 -(1096 + 852)) + (1000 -(802 + 24))) ]] or (3581==3473)) then v70=v70 + 1 + (0 -0) ;else v70=v78[3 -0 ];end elseif (v79==(365 -(144 + 192))) then if v76[v78[218 -(42 + 174) ]] then v70=v70 + 1 + 0 ;else v70=v78[3 + 0 ];end else local v165=v78[1 + 1 ];v76[v165](v13(v76,v165 + (1505 -(363 + 1141)) ,v78[(1998 -415) -(1183 + 397) ]));end elseif (v79<=(106 -(11 + 60))) then if ((4995>3348) and (v79<=(24 + 8))) then if (v79>(19 + 5 + 7)) then v76[v78[340 -(118 + 220) ]]=v76[v78[1978 -(1913 + 11 + 51) ]];else local v142=0;local v143;local v144;while true do if ((v142==(0 + 0)) or (754>3724)) then v143=v78[5 -(1 + 2) ];v144=v76[v78[(5385 -3449) -(565 + 614 + 754) ]];v142=1;end if ((217>=57) and (v142==1)) then v76[v143 + (3 -2) ]=v144;v76[v143]=v144[v78[1665 -(1477 + (613 -429)) ]];break;end end end elseif (v79<=(44 -11)) then if ((v76[v78[2 + (0 -0) ]]==v78[860 -(564 + 292) ]) or (2070>=4037)) then v70=v70 + (1 -0) ;else v70=v78[8 -5 ];end elseif ((2705==2705) and (v79>(102 -68))) then for v191=v78[306 -(244 + 59 + 1) ],v78[3 + 0 ] do v76[v191]=nil;end elseif  not v76[v78[478 -(41 + 435) ]] then v70=v70 + 1 ;else v70=v78[3];end elseif (v79<=(24 + 14)) then if (v79<=(1037 -(938 + 63))) then v76[v78[(2304 -(409 + 103)) -(362 + 648 + 780) ]]=v61[v78[3 + 0 ]];elseif ((61==61) and (v79>((474 + 688) -(936 + 189)))) then local v167=0 -0 ;local v168;local v169;while true do if ((1 + 0)==v167) then v76[v168 + ((1850 -(46 + 190)) -(1565 + (143 -(51 + 44)))) ]=v169;v76[v168]=v169[v78[3 + 1 ]];break;end if (v167==0) then v168=v78[1140 -(782 + 356) ];v169=v76[v78[508 -(351 + 154) ]];v167=268 -(176 + 91) ;end end else local v170=v78[(2 + 2) -2 ];local v171,v172=v69(v76[v170](v13(v76,v170 + (1 -0) ,v78[1095 -(975 + 117) ])));v71=(v172 + v170) -(2 -1) ;local v173=1559 -(1381 + 178) ;for v193=v170,v71 do v173=v173 + 1 ;v76[v193]=v171[v173];end end elseif ((v79<=(1914 -(157 + 1718))) or (699>=1296)) then v76[v78[2 + 0 ]]=v78[10 -7 ];elseif (v79==(18 + 22)) then v70=v78[10 -7 ];else v76[v78[1020 -(697 + (1638 -(1114 + 203))) ]]();end v70=v70 + (2 -1) ;end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
