local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v81=v2(v0(v30,16));if v19 then local v87=0;local v88;while true do if (v87==1) then return v88;end if (v87==0) then v88=v5(v81,v19);v19=nil;v87=1;end end else return v81;end end end);local function v20(v31,v32,v33) if v33 then local v82=(v31/((5 -3)^(v32-(2 -(1 + 0)))))%((3 -1)^(((v33-1) -(v32-(2 -1))) + (620 -(555 + 64)))) ;return v82-(v82%(932 -(857 + (105 -31)))) ;else local v83=568 -(367 + 201) ;local v84;while true do if (v83==(927 -(214 + 713))) then v84=(1 + 1)^(v32-(1 + 0)) ;return (((v31%(v84 + v84))>=v84) and (878 -(282 + 595))) or (1637 -(1523 + 114)) ;end end end end local function v21() local v34=1065 -(68 + 997) ;local v35;while true do if (v34==1) then return v35;end if (v34==(1270 -(226 + 1024 + 20))) then v35=v1(v16,v18,v18);v18=v18 + (4 -(1 + 2)) ;v34=118 -(32 + 85) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + (959 -(892 + 65)) );v18=v18 + (3 -1) ;return (v37 * (469 -213)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + ((260 + 93) -(87 + 263)) );v18=v18 + ((731 -547) -((1019 -(802 + 150)) + 113)) ;return (v41 * (12302277 + 4474939)) + (v40 * (160901 -95365)) + (v39 * 256) + v38 ;end local function v24() local v42=0 -(1138 -(116 + 1022)) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(5 -2)) then if (v47==((0 -0) + 0)) then if (v46==(997 -(538 + 377 + 82))) then return v48 * (0 -0) ;else local v101=(0 -0) + 0 ;while true do if (v101==(0 -0)) then v47=1188 -(1069 + 118) ;v45=0 -(0 -0) ;break;end end end elseif (v47==(4477 -2430)) then return ((v46==(0 + 0)) and (v48 * (((860 -(814 + 45)) -0)/(0 + 0)))) or (v48 * NaN) ;end return v8(v48,v47-(1814 -(368 + 423)) ) * (v45 + (v46/((6 -4)^(70 -(10 + 8))))) ;end if (v42==2) then v47=v20(v44,80 -59 ,31);v48=((v20(v44,474 -(416 + 26) )==1) and  -1) or (3 -2) ;v42=2 + 1 ;end if (v42==(1 -0)) then v45=439 -((357 -212) + 293) ;v46=(v20(v44,431 -(44 + 386) ,2 + 18 ) * (2^(1518 -(998 + 488)))) + v43 ;v42=1 + 1 ;end if (v42==(0 + 0)) then v43=v23();v44=v23();v42=773 -(201 + 571) ;end end end local function v25(v49) local v50=0 + 0 ;local v51;local v52;while true do if (v50==(888 -(261 + 624))) then return v6(v52);end if (v50==0) then v51=nil;if  not v49 then local v95=0 -0 ;while true do if (v95==(1080 -(1020 + 60))) then v49=v23();if (v49==(1423 -(630 + 793))) then return "";end break;end end end v50=3 -(1915 -(1789 + 124)) ;end if (v50==2) then v52={};for v89=4 -3 , #v51 do v52[v89]=v2(v1(v3(v51,v89,v89)));end v50=769 -(745 + 21) ;end if (v50==(1 + 0 + 0)) then v51=v3(v16,v18,(v18 + v49) -(3 -2) );v18=v18 + v49 ;v50=1749 -(760 + 987) ;end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();while true do local v66=(function() return 1767 -(308 + 1459) ;end)();while true do if ((0 -0)==v66) then if (v53== #"|") then local v98=(function() return 0 -0 ;end)();local v99=(function() return;end)();while true do if (v98==0) then v99=(function() return 0 -0 ;end)();while true do if (v99==(869 -(550 + 317))) then v53=(function() return 2;end)();break;end if (v99==1) then for v116= #"]",v58 do local v117=(function() return 0;end)();local v118=(function() return;end)();local v119=(function() return;end)();local v120=(function() return;end)();while true do if (v117~=1) then else v120=(function() return nil;end)();while true do if (v118~=(0 -0)) then else v119=(function() return v21();end)();v120=(function() return nil;end)();v118=(function() return 1;end)();end if (v118~=1) then else if (v119== #"<") then v120=(function() return v21()~=0 ;end)();elseif (v119==(2 -0)) then v120=(function() return v24();end)();elseif (v119== #"xxx") then v120=(function() return v25();end)();end v59[v116]=(function() return v120;end)();break;end end break;end if (0==v117) then v118=(function() return 0 -0 ;end)();v119=(function() return nil;end)();v117=(function() return 1;end)();end end end v57[ #"91("]=(function() return v21();end)();v99=(function() return 287 -(134 + 151) ;end)();end if (0==v99) then v58=(function() return v23();end)();v59=(function() return {};end)();v99=(function() return 1666 -(970 + 695) ;end)();end end break;end end end if (v53==(0 -0)) then local v100=(function() return 0;end)();while true do if (v100~=(1990 -(582 + 1408))) then else v54=(function() return {};end)();v55=(function() return {};end)();v100=(function() return 3 -2 ;end)();end if (v100==1) then v56=(function() return {};end)();v57=(function() return {v54,v55,nil,v56};end)();v100=(function() return 2 -0 ;end)();end if (v100==(7 -5)) then v53=(function() return  #"<";end)();break;end end end v66=(function() return 1825 -(1195 + 629) ;end)();end if (v66~=1) then else if (v53==(2 -0)) then for v102= #"|",v23() do local v103=(function() return v21();end)();if (v20(v103, #" ", #"!")==(241 -(187 + 54))) then local v106=(function() return 780 -(162 + 618) ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106==2) then if (v20(v108, #":", #"[")~= #"~") then else v109[2 + 0 ]=(function() return v59[v109[2]];end)();end if (v20(v108,2 + 0 ,2)== #"]") then v109[ #"asd"]=(function() return v59[v109[ #"asd"]];end)();end v106=(function() return 3;end)();end if (v106==(6 -3)) then if (v20(v108, #"19(", #"nil")~= #"}") then else v109[ #"0313"]=(function() return v59[v109[ #".com"]];end)();end v54[v102]=(function() return v109;end)();break;end if (v106~=1) then else local v112=(function() return 0 -0 ;end)();local v113=(function() return;end)();while true do if (v112==0) then v113=(function() return 0 + 0 ;end)();while true do if (1==v113) then v106=(function() return 1638 -(1373 + 263) ;end)();break;end if (0~=v113) then else local v233=(function() return 0;end)();while true do if (v233==(1000 -(451 + 549))) then v109=(function() return {v22(),v22(),nil,nil};end)();if (v107==(0 -0)) then local v327=(function() return 0;end)();local v328=(function() return;end)();while true do if (v327~=(0 -0)) then else v328=(function() return 1384 -(746 + 638) ;end)();while true do if (v328~=(0 + 0)) then else v109[ #"19("]=(function() return v22();end)();v109[ #"0836"]=(function() return v22();end)();break;end end break;end end elseif (v107== #",") then v109[ #"nil"]=(function() return v23();end)();elseif (v107==2) then v109[ #"-19"]=(function() return v23() -(2^16) ;end)();elseif (v107~= #"xnx") then else local v363=(function() return 0;end)();while true do if (v363~=(0 -0)) then else v109[ #"asd"]=(function() return v23() -((343 -(218 + 123))^(1597 -(1535 + 46))) ;end)();v109[ #"?id="]=(function() return v22();end)();break;end end end v233=(function() return 1 + 0 ;end)();end if (v233==(1 + 0)) then v113=(function() return 1;end)();break;end end end end break;end end end if (v106~=0) then else local v114=(function() return 560 -(306 + 254) ;end)();local v115=(function() return;end)();while true do if (v114~=(0 + 0)) then else v115=(function() return 0 -0 ;end)();while true do if (v115==0) then v107=(function() return v20(v103,2, #"nil");end)();v108=(function() return v20(v103, #"xnxx",1473 -(899 + 568) );end)();v115=(function() return 1 + 0 ;end)();end if (v115~=(2 -1)) then else v106=(function() return 1;end)();break;end end break;end end end end end end for v104= #" ",v23() do v55[v104-#">" ]=(function() return v28();end)();end return v57;end break;end end end end local function v29(v60,v61,v62) local v63=v60[604 -(268 + 335) ];local v64=v60[2 + 0 ];local v65=v60[3 + 0 ];return function(...) local v67=v63;local v68=v64;local v69=v65;local v70=v27;local v71=291 -(60 + 230) ;local v72= -1;local v73={};local v74={...};local v75=v12("#",...) -(1 + 0) ;local v76={};local v77={};for v85=1456 -(282 + 1174) ,v75 do if ((12<4208) and (v85>=v69)) then v73[v85-v69 ]=v74[v85 + (812 -(423 + 146 + 242)) ];else v77[v85]=v74[v85 + (1456 -((2404 -(1001 + 413)) + 465)) ];end end local v78=(v75-v69) + (2 -1) ;local v79;local v80;while true do local v86=0 + 0 ;while true do if (v86==(1 + 0)) then if ((v80<=(1055 -(706 + 318))) or (2990<=2980)) then if (v80<=(1741 -(1668 + 58))) then if ((v80<=((2805 -1547) -(721 + 530))) or (2575>=4275)) then if (v80<=3) then if (v80<=(2 -1)) then if (v80==(1271 -(945 + (1208 -(244 + 638))))) then do return v77[v79[4 -2 ]];end else local v124=v79[(695 -(627 + 66)) + 0 ];v77[v124]=v77[v124](v13(v77,v124 + ((2088 -1387) -((873 -(512 + 90)) + 429)) ,v79[3 + 0 ]));end elseif ((v80==(1502 -(1408 + 92))) or (3626<=1306)) then if (v77[v79[1088 -(461 + 625) ]]==v79[4 + 0 ]) then v71=v71 + (1907 -(1665 + 241)) ;else v71=v79[1291 -(993 + 295) ];end else v77[v79[1 + (718 -(373 + 344)) ]]();end elseif (v80<=(1176 -(418 + 753))) then if (v80>4) then v77[v79[1 + 1 ]]=v62[v79[1 + 2 ]];else local v128=v79[3 -1 ];v77[v128]=v77[v128](v13(v77,v128 + 1 + 0 ,v72));end elseif (v80==(2 + 4)) then v77[v79[531 -(406 + 123) ]]=v79[1772 -(789 + 960 + 20) ]~=(0 + 0) ;else local v131=v79[1324 -(1249 + 73) ];v77[v131]=v77[v131](v13(v77,v131 + 1 + 0 ,v72));end elseif ((1368<3780) and (v80<=(1156 -(466 + 679)))) then if ((v80<=(2 + 7)) or (3169==2273)) then if (v80==(3 + 5)) then local v133=v79[(10 -6) -2 ];local v134=v77[v79[8 -5 ]];v77[v133 + (1901 -(106 + 1794)) ]=v134;v77[v133]=v134[v79[13 -9 ]];else local v138=v68[v79[1 + 2 ]];local v139;local v140={};v139=v10({},{__index=function(v234,v235) local v236=0 + 0 ;local v237;while true do if ((2481<=3279) and (v236==(0 -0))) then v237=v140[v235];return v237[2 -1 ][v237[116 -(4 + 110) ]];end end end,__newindex=function(v238,v239,v240) local v241=584 -(57 + 527) ;local v242;while true do if (v241==(1427 -(41 + 1386))) then v242=v140[v239];v242[104 -(17 + 86) ][v242[1621 -(1427 + 192) ]]=v240;break;end end end});for v243=(1100 -(35 + 1064)) + 0 ,v79[8 -4 ] do local v244=0 -0 ;local v245;while true do if ((v244==((0 + 0) -0)) or (1063<=877)) then v71=v71 + 1 + 0 ;v245=v67[v71];v244=167 -(122 + 44) ;end if ((2314==2314) and (v244==(327 -(192 + 134)))) then if (v245[(2731 -1454) -(316 + 960) ]==(25 -10)) then v140[v243-(3 -2) ]={v77,v245[1 + 2 ]};else v140[v243-(1807 -(1202 + 604)) ]={v61,v245[3 + 0 ]};end v76[ #v76 + (1258 -(1043 + 214)) ]=v140;break;end end end v77[v79[2]]=v29(v138,v139,v62);end elseif (v80==(37 -27)) then v77[v79[(5 + 1209) -(323 + 889) ]]=v77[v79[7 -4 ]][v79[(1820 -(298 + 938)) -(361 + 219) ]];else v61[v79[323 -(53 + 267) ]]=v77[v79[1 + 1 ]];end elseif (v80<=(8 + 5)) then if (v80==(425 -((1274 -(233 + 1026)) + 398))) then v77[v79[984 -(18 + 964) ]][v79[11 -(1674 -(636 + 1030)) ]]=v79[3 + 1 ];else local v148=v79[2 + 0 ];v77[v148]=v77[v148](v13(v77,v148 + (851 -(20 + 830)) ,v79[1037 -(125 + 909) ]));end elseif (v80==(11 + 3)) then local v150=126 -(116 + 10) ;local v151;local v152;local v153;while true do if (v150==(1 + 0)) then v153=0 + 0 + 0 ;for v301=v151,v79[742 -(542 + 196) ] do v153=v153 + 1 ;v77[v301]=v152[v153];end break;end if (v150==(0 -0)) then v151=v79[1 + 1 ];v152={v77[v151](v13(v77,v151 + (513 -(409 + 103)) ,v79[239 -(46 + 190) ]))};v150=1 + 0 ;end end else v77[v79[4 -(2 + 0) ]]=v77[v79[7 -(2 + 2) ]];end elseif ((924>=477) and (v80<=(1574 -(1126 + 425)))) then if ((1813<=3778) and (v80<=((29 + 395) -(118 + 287)))) then if (v80<=(66 -49)) then if (v80>(1137 -(118 + 1003))) then if (v79[(226 -(55 + 166)) -3 ]==v77[v79[11 -7 ]]) then v71=v71 + (378 -(28 + 114 + 235)) ;else v71=v79[527 -(31 + 272 + 221) ];end else local v156=0 -0 ;local v157;while true do if (v156==(0 + 0)) then v157=v79[(4445 -3281) -(171 + 991) ];v77[v157](v13(v77,v157 + (4 -3) ,v79[7 -4 ]));break;end end end elseif (v80>(4 + 14)) then v77[v79[2 + 0 ]]={};elseif (v77[v79[979 -(553 + 424) ]]==v77[v79[(304 -(36 + 261)) -3 ]]) then v71=v71 + (3 -2) ;else v71=v79[3 + (0 -0) ];end elseif (v80<=(21 + 0)) then if (v80==(12 + 8)) then if  not v77[v79[6 -4 ]] then v71=v71 + 1 + 0 ;else v71=v79[2 + 1 ];end else local v159=v79[4 -2 ];v77[v159]=v77[v159]();end elseif (v80==(60 -38)) then for v246=v79[4 -2 ],v79[(1369 -(34 + 1334)) + 2 ] do v77[v246]=nil;end else v77[v79[9 -7 ]]=v61[v79[(291 + 465) -(239 + 514) ]];end elseif (v80<=(10 + 17)) then if (v80<=(1354 -(797 + 532))) then if ((4150==4150) and (v80==(14 + 4 + 6))) then v77[v79[1 + 1 ]]=v77[v79[6 -3 ]][v79[1206 -(373 + 829) ]];else local v165=v79[733 -(476 + 255) ];local v166={v77[v165](v13(v77,v165 + (1131 -(369 + 761)) ,v79[714 -(530 + 181) ]))};local v167=0 + 0 ;for v248=v165,v79[6 -2 ] do v167=v167 + (1 -0) ;v77[v248]=v166[v167];end end elseif (v80==(264 -(64 + 174))) then v61[v79[1 + 2 ]]=v77[v79[2 -0 ]];else local v170=336 -(144 + 192) ;local v171;local v172;local v173;local v174;while true do if ((432<=3007) and (1==v170)) then v72=(v173 + v171) -(217 -(42 + 174)) ;v174=0 -0 ;v170=2 + 0 ;end if (v170==(2 + 0)) then for v304=v171,v72 do local v305=0 -0 ;while true do if (v305==(0 + 0)) then v174=v174 + (1505 -(363 + 1141)) ;v77[v304]=v172[v174];break;end end end break;end if (v170==(0 -0)) then v171=v79[1582 -(1183 + 397) ];v172,v173=v70(v77[v171](v13(v77,v171 + (2 -1) ,v79[1 + 2 ])));v170=1 + (1283 -(1035 + 248)) ;end end end elseif ((v80<=29) or (408>2721)) then if (v80>((42 -(20 + 1)) + 7)) then v77[v79[1977 -(1913 + 62) ]]=v61[v79[1 + 2 ]];else local v177=0 + 0 + 0 ;local v178;local v179;local v180;local v181;while true do if (v177==(5 -3)) then for v306=v178,v72 do local v307=1933 -(565 + 1368) ;while true do if (v307==(0 -0)) then v181=v181 + (1662 -(1477 + 184)) ;v77[v306]=v179[v181];break;end end end break;end if (v177==(1 -0)) then v72=(v180 + v178) -(3 -2) ;v181=0 + 0 ;v177=858 -(564 + 292) ;end if (v177==(319 -(134 + 185))) then v178=v79[(1135 -(549 + 584)) -0 ];v179,v180=v70(v77[v178](v13(v77,v178 + 1 ,v79[8 -5 ])));v177=(990 -(314 + 371)) -(244 + 60) ;end end end elseif (v80>(8 + (75 -53))) then local v182=0 -0 ;local v183;while true do if ((v182==(0 + 0)) or (3418<2497)) then v183=v79[478 -(41 + 435) ];v77[v183](v77[v183 + (1002 -(938 + 63)) ]);break;end end else local v184=v79[2 + 0 ];local v185=v79[1129 -(936 + (1157 -(478 + 490))) ];local v186=v184 + 1 + 0 + 1 ;local v187={v77[v184](v77[v184 + (1932 -(609 + 1322)) ],v77[v186])};for v251=1614 -(1565 + 48) ,v185 do v77[v186 + v251 ]=v187[v251];end local v188=v187[3 -2 ];if ((1735<2169) and v188) then local v264=0 + 0 ;while true do if (v264==(1172 -(786 + 386))) then v77[v186]=v188;v71=v79[1141 -(782 + 356) ];break;end end else v71=v71 + (4 -3) ;end end elseif (v80<=(314 -((569 -393) + 91))) then if ((3890>=3262) and (v80<=(101 -62))) then if (v80<=(51 -16)) then if ((v80<=(1125 -(975 + 117))) or (4356>=4649)) then if ((3904==3904) and (v80>(1907 -(157 + 1718)))) then if  not v77[v79[2 + 0 ]] then v71=v71 + (3 -2) ;else v71=v79[10 -7 ];end else local v189=(2397 -(1055 + 324)) -(697 + (1661 -(1093 + 247))) ;local v190;local v191;while true do if (v189==(0 -0)) then v190=v79[3 -(1 + 0) ];v191=v77[v79[1 + 2 ]];v189=2 -1 ;end if (v189==((3 -2) + 0)) then v77[v190 + (1 -0) ]=v191;v77[v190]=v191[v79[10 -(20 -14) ]];break;end end end elseif ((v80>(1261 -((916 -594) + 905))) or (2860>=3789)) then local v192=611 -(602 + 9) ;local v193;local v194;local v195;while true do if ((v192==(1190 -(449 + 740))) or (1086>4449)) then v195=872 -(826 + 46) ;for v308=v193,v79[3 + 1 ] do local v309=0 + 0 ;while true do if (v309==(0 + 0)) then v195=v195 + (948 -(245 + 702)) ;v77[v308]=v194[v195];break;end end end break;end if ((4981>546) and (v192==(0 -0))) then v193=v79[1 + 1 ];v194={v77[v193](v77[v193 + (1899 -(260 + 1638)) ])};v192=441 -(382 + 21 + 37) ;end end else do return;end end elseif (v80<=(118 -81)) then if (v80>(1085 -(572 + 477))) then local v196=v79[2 + 0 ];v77[v196](v13(v77,v196 + 1 + 0 ,v79[5 -2 ]));elseif v77[v79[5 -3 ]] then v71=v71 + (1206 -(902 + 303)) ;else v71=v79[3];end elseif ((v80>(83 -45)) or (2366<=8)) then for v254=v79[4 -(7 -5) ],v79[1 + 2 ] do v77[v254]=nil;end else v77[v79[1692 -(1121 + 569) ]]=v77[v79[217 -(22 + (661 -469)) ]][v77[v79[687 -(365 + 118 + 200) ]]];end elseif (v80<=(1506 -(1404 + 59))) then if (v80<=(112 -71)) then if (v80>(53 -13)) then v77[v79[767 -(468 + 297) ]]=v62[v79[7 -4 ]];else v77[v79[564 -(334 + 228) ]]=v79[10 -7 ];end elseif (v80>(96 -54)) then local v203=0 -0 ;local v204;local v205;local v206;while true do if (v203==(1 + 0)) then v206={};v205=v10({},{__index=function(v310,v311) local v312=0;local v313;while true do if ((v312==(236 -(141 + 95))) or (2590==2864)) then v313=v206[v311];return v313[1 + 0 ][v313[4 -2 ]];end end end,__newindex=function(v314,v315,v316) local v317=v206[v315];v317[2 -1 ][v317[2]]=v316;end});v203=1 + (689 -(364 + 324)) ;end if ((0 -0)==v203) then v204=v68[v79[3 + 0 ]];v205=nil;v203=1 + 0 ;end if (((5 -3) -0)==v203) then for v319=3 -2 ,v79[3 + 1 ] do v71=v71 + (164 -(92 + 71)) ;local v320=v67[v71];if (v320[1 + 0 ]==(811 -(588 + 208))) then v206[v319-(2 -(2 -1)) ]={v77,v320[768 -(574 + 191) ]};else v206[v319-(1 + 0) ]={v61,v320[2 + 1 ]};end v76[ #v76 + (850 -(254 + 595)) ]=v206;end v77[v79[1 + 1 ]]=v29(v204,v205,v62);break;end end elseif (v77[v79[128 -(55 + 71) ]]==v77[v79[5 -1 ]]) then v71=v71 + (1791 -(573 + 1217)) ;else v71=v79[8 -5 ];end elseif (v80<=45) then if (v80>(4 + 40)) then if v77[v79[1 + 1 ]] then v71=v71 + (1 -0) ;else v71=v79[942 -(714 + 225) ];end elseif (v77[v79[2 + 0 ]]==v79[(45 -34) -7 ]) then v71=v71 + ((1 -0) -0) ;else v71=v79[1 + (5 -3) ];end elseif ((v80>(72 -26)) or (2624>4149)) then v71=v79[3 + 0 ];else local v208=v79[2 -0 ];v77[v208]=v77[v208]();end elseif (v80<=(861 -(118 + 688))) then if (v80<=(99 -(25 + 23))) then if ((v80<=(10 + 39)) or (2618>=4495)) then if (v80>(92 -44)) then v77[v79[(3156 -(1249 + 19)) -(927 + 959) ]]=v79[10 -7 ]~=((661 + 71) -(16 + (2786 -2070))) ;elseif (v79[(1089 -(686 + 400)) -1 ]==v77[v79[8 -4 ]]) then v71=v71 + 1 + 0 ;else v71=v79[100 -(9 + 2 + 86) ];end elseif ((v80>(121 -71)) or (2485>=3131)) then v77[v79[5 -3 ]][v79[288 -(175 + 110) ]]=v79[9 -5 ];else local v213=0 -0 ;local v214;local v215;local v216;while true do if (v213==(1797 -(503 + 1293))) then v216=(229 -(73 + 156)) -0 ;for v322=v214,v79[3 + 1 ] do local v323=1061 -(810 + 2 + 249) ;while true do if ((v323==((811 -(721 + 90)) + 0)) or (2804<=2785)) then v216=v216 + 1 + 0 ;v77[v322]=v215[v216];break;end end end break;end if (v213==(0 + 0)) then v214=v79[2 + 0 + 0 ];v215={v77[v214](v77[v214 + (734 -(711 + 22)) ])};v213=3 -2 ;end end end elseif ((v80<=(71 -18)) or (4571==3415)) then if (v80==(911 -(240 + 619))) then v77[v79[1 + 1 ]]=v77[v79[4 -1 ]][v77[v79[1 + 3 ]]];else local v219=v79[1746 -(1344 + 400) ];do return v13(v77,v219,v219 + v79[(660 -252) -(255 + 150) ] );end end elseif (v80==(43 + 11)) then local v220=v79[2];local v221=v79[3 + 1 ];local v222=v220 + (8 -6) ;local v223={v77[v220](v77[v220 + 1 + 0 ],v77[v222])};for v256=1740 -(404 + 1335) ,v221 do v77[v222 + v256 ]=v223[v256];end local v224=v223[407 -(183 + 223) ];if v224 then v77[v222]=v224;v71=v79[7 -4 ];else v71=v71 + (1 -(0 + 0)) ;end else v77[v79[1 + 1 ]]={};end elseif (v80<=(1207 -(556 + 592))) then if (v80<=(38 + 1 + 18)) then if (v80==(21 + 35)) then v77[v79[(249 + 90) -(10 + 327) ]]=v77[v79[3 + 0 ]];else v71=v79[341 -(118 + 220) ];end elseif (v80>((39 -19) + 38)) then local v229=449 -(108 + 341) ;local v230;while true do if ((v229==(0 + 0)) or (4441>4787)) then v230=v79[741 -(396 + 343) ];v77[v230](v77[v230 + (4 -3) ]);break;end end else v77[v79[1 + 1 ]]();end elseif (v80<=(1554 -(711 + 782))) then if ((1920==1920) and (v80>(115 -55))) then do return;end else v77[v79[7 -5 ]]=v79[472 -(270 + 199) ];end elseif (v80<=(21 + 41)) then do return v77[v79[1821 -(580 + 1239) ]];end elseif ((v80>(637 -(102 + 472))) or (647==4477)) then local v273=0 -0 ;local v274;local v275;while true do if (v273==((0 -0) + 0)) then v274=v79[1 + (514 -(203 + 310)) ];v275={};v273=1 + 0 ;end if ((3819==3819) and (v273==(2 -(1994 -(1238 + 755))))) then for v333=1 + 0 , #v76 do local v334=1167 -(645 + 522) ;local v335;while true do if (((1464 -(157 + 1307))==v334) or (1466>4360)) then v335=v76[v333];for v354=1790 -(1010 + 780) , #v335 do local v355=v335[v354];local v356=v355[(130 + 1730) -(821 + 1038) ];local v357=v355[(1536 -(709 + 825)) + 0 ];if ((v356==v77) and (v357>=v274)) then local v364=0 -0 ;while true do if (v364==(0 -0)) then v275[v357]=v356[v357];v355[1 + 0 ]=v275;break;end end end end break;end end end break;end end else local v276=v79[3 -1 ];local v277={};for v293=1837 -(1045 + 791) , #v76 do local v294=0 -0 ;local v295;while true do if ((v294==(0 -0)) or (14>994)) then v295=v76[v293];for v346=505 -(351 + 154) , #v295 do local v347=0 + (0 -0) ;local v348;local v349;local v350;while true do if ((401<=734) and (v347==(1575 -(1281 + 293)))) then v350=v348[(1170 -(196 + 668)) -((1184 -884) + 4) ];if ((v349==v77) and (v350>=v276)) then local v365=266 -(28 + 238) ;while true do if (v365==(0 -0)) then v277[v350]=v349[v350];v348[2 -1 ]=v277;break;end end end break;end if (((1559 -(1381 + 178))==v347) or (2167>=3426)) then v348=v295[v346];v349=v348[1 + (0 -0) ];v347=(834 -(171 + 662)) + 0 ;end end end break;end end end end v71=v71 + 1 + 0 ;break;end if (v86==(0 + 0)) then v79=v67[v71];v80=v79[3 -2 ];v86=1 + 0 ;end end end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
