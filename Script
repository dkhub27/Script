--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.7) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==79) then v19=v0(v3(v30,1,1));return "";else local v82=0;local v83;while true do if (v82==0) then v83=v2(v0(v30,16));if v19 then local v99=v5(v83,v19);v19=nil;return v99;else return v83;end break;end end end end);local function v20(v31,v32,v33) if v33 then local v84=(v31/((5 -3)^(v32-(1 + 0))))%(((21 -16) -3)^(((v33-1) -(v32-1)) + (1 -0))) ;return v84-(v84%(2 -1)) ;else local v85=(621 -(555 + (181 -(32 + 85))))^(v32-(1 -(0 + 0))) ;return (((v31%(v85 + v85))>=v85) and (932 -(857 + 74))) or (568 -(367 + 201)) ;end end local function v21() local v34=0;local v35;while true do if (v34==(1 + 0)) then return v35;end if (v34==((180 -(67 + 113)) -0)) then v35=v1(v16,v18,v18);v18=v18 + (1 -0) ;v34=958 -(892 + 65) ;end end end local function v22() local v36,v37=v1(v16,v18,v18 + 2 );v18=v18 + 2 + 0 ;return (v37 * (628 -372)) + v36 ;end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + 3 + 0 );v18=v18 + (15 -11) ;return (v41 * (16778168 -(802 + 150))) + (v40 * (176444 -(80729 + 30179))) + (v39 * (464 -208)) + v38 ;end local function v24() local v42=997 -(915 + 82) ;local v43;local v44;local v45;local v46;local v47;local v48;while true do if (v42==(2 -1)) then v45=1 + (0 -0) ;v46=(v20(v44,1 -0 ,1207 -(1069 + 118) ) * (2^(72 -40))) + v43 ;v42=(2 + 1) -1 ;end if (v42==(1 + 2)) then if (v47==0) then if (v46==(0 -0)) then return v48 * 0 ;else v47=1;v45=0 + 0 ;end elseif (v47==((10360 -7522) -(368 + 423))) then return ((v46==0) and (v48 * ((3 -2)/(18 -(10 + 8))))) or (v48 * NaN) ;end return v8(v48,v47-(3934 -2911) ) * (v45 + (v46/(2^(494 -(416 + 26))))) ;end if (v42==(0 -0)) then v43=v23();v44=v23();v42=1 + 0 ;end if (v42==(3 -1)) then v47=v20(v44,459 -(145 + 293) ,461 -(44 + 386) );v48=((v20(v44,1518 -(998 + 488) )==((3 -2) + 0)) and  -(1 + 0)) or (773 -((1060 -(814 + 45)) + 571)) ;v42=1141 -((285 -169) + 1022) ;end end end local function v25(v49) local v50=0 + 0 ;local v51;local v52;while true do if (v50==(1 + 1)) then v52={};for v89=886 -(261 + 624) , #v51 do v52[v89]=v2(v1(v3(v51,v89,v89)));end v50=3;end if (v50==(0 -0)) then v51=nil;if  not v49 then v49=v23();if (v49==0) then return "";end end v50=(5118 -4037) -(1020 + 60) ;end if (v50==(1424 -(630 + 793))) then v51=v3(v16,v18,(v18 + v49) -1 );v18=v18 + v49 ;v50=6 -4 ;end if (v50==3) then return v6(v52);end end end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v53=(function() return 0;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();local v59=(function() return;end)();local v60=(function() return;end)();while true do local v67=(function() return 0 + 0 ;end)();while true do if (v67==(0 + 0)) then if (v53==(1837 -(274 + 1561))) then local v95=(function() return 0;end)();while true do if (v95~=(1 + 0)) then else v58[ #"19("]=(function() return v21();end)();v53=(function() return 8 -5 ;end)();break;end if ((1769 -(1749 + 20))~=v95) then else v60=(function() return {};end)();for v105= #",",v59 do local v106=(function() return 0 + 0 ;end)();local v107=(function() return;end)();local v108=(function() return;end)();local v109=(function() return;end)();while true do if (v106~=(0 + 0)) then else local v143=(function() return 1322 -(1249 + 73) ;end)();while true do if (v143~=(242 -(187 + 54))) then else v106=(function() return 781 -(162 + 618) ;end)();break;end if (v143==(0 + 0)) then v107=(function() return 0 + 0 ;end)();v108=(function() return nil;end)();v143=(function() return 1;end)();end end end if (v106~=(1 -0)) then else v109=(function() return nil;end)();while true do if (v107~=(0 -0)) then else local v202=(function() return 0 -0 ;end)();while true do if (v202==(1900 -(106 + 1794))) then v108=(function() return v21();end)();v109=(function() return nil;end)();v202=(function() return 1 -0 ;end)();end if (v202~=(1 + 0)) then else v107=(function() return 1 + 0 ;end)();break;end end end if ((1637 -(1373 + 263))==v107) then if (v108== #">") then v109=(function() return v21()~=(1000 -(451 + 549)) ;end)();elseif (v108==(5 -3)) then v109=(function() return v24();end)();elseif (v108~= #"nil") then else v109=(function() return v25();end)();end v60[v105]=(function() return v109;end)();break;end end break;end end end v95=(function() return 1 + 0 ;end)();end end end if (v53~=(4 -1)) then else for v100= #",",v23() do local v101=(function() return 0 -0 ;end)();local v102=(function() return;end)();while true do if (v101==(1384 -(746 + 638))) then v102=(function() return v21();end)();if (v20(v102, #"!", #"|")~=0) then else local v110=(function() return 0;end)();local v111=(function() return;end)();local v112=(function() return;end)();local v113=(function() return;end)();while true do if (v110==(1 + 1)) then if (v20(v112, #"[", #"<")== #"|") then v113[2 -0 ]=(function() return v60[v113[343 -(218 + 123) ]];end)();end if (v20(v112,1583 -(1535 + 46) ,2 + 0 )== #" ") then v113[ #"gha"]=(function() return v60[v113[ #"nil"]];end)();end v110=(function() return 1 + 2 ;end)();end if (v110==(561 -(306 + 254))) then local v186=(function() return 0;end)();while true do if ((0 + 0)==v186) then local v210=(function() return 0 -0 ;end)();while true do if ((0 -0)~=v210) then else v113=(function() return {v22(),v22(),nil,nil};end)();if (v111==(1467 -(899 + 568))) then local v215=(function() return 0;end)();local v216=(function() return;end)();while true do if (0==v215) then v216=(function() return 0 + 0 ;end)();while true do if (v216==(0 -0)) then v113[ #"91("]=(function() return v22();end)();v113[ #"0313"]=(function() return v22();end)();break;end end break;end end elseif (v111== #"]") then v113[ #"xnx"]=(function() return v23();end)();elseif (v111==2) then v113[ #"xxx"]=(function() return v23() -((4 -2)^(619 -(268 + 335))) ;end)();elseif (v111== #"91(") then local v222=(function() return 290 -(60 + 230) ;end)();local v223=(function() return;end)();while true do if (v222==0) then v223=(function() return 572 -(426 + 146) ;end)();while true do if (v223==(1257 -(1043 + 214))) then v113[ #"-19"]=(function() return v23() -((7 -5)^(1228 -(323 + 889))) ;end)();v113[ #"http"]=(function() return v22();end)();break;end end break;end end end v210=(function() return 1;end)();end if (v210==1) then v186=(function() return 1 + 0 ;end)();break;end end end if (v186~=(1457 -(282 + 1174))) then else v110=(function() return 582 -(361 + 219) ;end)();break;end end end if (v110~=3) then else if (v20(v112, #"xnx", #"nil")== #"]") then v113[ #"asd1"]=(function() return v60[v113[ #"0836"]];end)();end v55[v100]=(function() return v113;end)();break;end if (v110==(811 -(569 + 242))) then local v188=(function() return 0 -0 ;end)();while true do if (v188~=1) then else v110=(function() return 1 + 0 ;end)();break;end if (v188==(1024 -(706 + 318))) then v111=(function() return v20(v102,1 + 1 , #"-19");end)();v112=(function() return v20(v102, #".com",1257 -(721 + 530) );end)();v188=(function() return 414 -(15 + 398) ;end)();end end end end end break;end end end for v103= #"{",v23() do v56,v103,v28=(function() return v54(v56,v103,v28);end)();end return v58;end v67=(function() return 983 -(18 + 964) ;end)();end if ((1272 -(945 + 326))==v67) then if (v53~=0) then else local v96=(function() return 0 -0 ;end)();local v97=(function() return;end)();while true do if (v96~=(0 + 0)) then else v97=(function() return 0 + 0 ;end)();while true do if (v97~=(701 -(271 + 429))) then else v56=(function() return {};end)();v53=(function() return 1 + 0 ;end)();break;end if (v97==0) then v54=(function() return function(v148,v149,v150) local v151=(function() return 0 + 0 ;end)();local v152=(function() return;end)();while true do if (v151~=(1500 -(1408 + 92))) then else v152=(function() return 1086 -(461 + 625) ;end)();while true do if (v152~=0) then else local v213=(function() return 1288 -(993 + 295) ;end)();local v214=(function() return;end)();while true do if ((126 -(116 + 10))==v213) then v214=(function() return 0;end)();while true do if (v214==(0 + 0)) then v148[v149-#"," ]=(function() return v150();end)();return v148,v149,v150;end end break;end end end end break;end end end;end)();v55=(function() return {};end)();v97=(function() return 1 + 0 ;end)();end end break;end end end if (v53==(1172 -(418 + 753))) then local v98=(function() return 0 + 0 ;end)();while true do if (v98==(1 -0)) then v59=(function() return v23();end)();v53=(function() return 1 + 1 ;end)();break;end if (0==v98) then v57=(function() return {};end)();v58=(function() return {v55,v56,nil,v57};end)();v98=(function() return 1 + 0 ;end)();end end end break;end end end end local function v29(v61,v62,v63) local v64=v61[2 -1 ];local v65=v61[2 + 0 ];local v66=v61[7 -4 ];return function(...) local v68=v64;local v69=v65;local v70=v66;local v71=v27;local v72=1552 -(1126 + 425) ;local v73= -(406 -(118 + 287));local v74={};local v75={...};local v76=v12("#",...) -(1122 -(118 + (2622 -(1427 + 192)))) ;local v77={};local v78={};for v86=0 -0 ,v76 do if (v86>=v70) then v74[v86-v70 ]=v75[v86 + (378 -(142 + 235)) ];else v78[v86]=v75[v86 + (4 -(2 + 1)) ];end end local v79=(v76-v70) + (940 -(714 + 225)) ;local v80;local v81;while true do v80=v68[v72];v81=v80[2 -1 ];if ((2877>240) and (v81<=(27 -7))) then if (v81<=((2 -1) + 8)) then if (v81<=(5 -1)) then if ((v81<=1) or (2896<805)) then if (v81>(0 + 0 + 0)) then v78[v80[50 -(25 + 23) ]]=v63[v80[1 + 2 ]];else v78[v80[1888 -(927 + 959) ]]=v78[v80[980 -(553 + 424) ]][v78[v80[7 -3 ]]];end elseif (v81<=(2 + 0)) then local v118=732 -(16 + 325 + 391) ;local v119;while true do if (v118==((326 -(192 + 134)) + 0)) then v119=v80[2 + 0 ];v78[v119](v78[v119 + 1 + (1276 -(316 + 960)) ]);break;end end elseif (v81==(288 -(175 + 110))) then local v153=v80[2 + 0 + 0 ];v78[v153]=v78[v153](v13(v78,v153 + 1 ,v73));else v78[v80[4 -2 ]]=v80[7 -(4 + 0) ];end elseif (v81<=6) then if ((2316==2316) and (v81==(11 -6))) then if  not v78[v80[1 + 1 ]] then v72=v72 + (4 -3) ;else v72=v80[756 -(221 + 18 + 514) ];end else do return;end end elseif (v81<=(3 + 4)) then local v120=v80[1331 -(797 + 532) ];local v121=v78[v80[3 + 0 ]];v78[v120 + 1 + 0 ]=v121;v78[v120]=v121[v80[9 -5 ]];elseif (v81==(1210 -(373 + 829))) then v78[v80[733 -(476 + 255) ]]=v80[1133 -(369 + 761) ]~=(0 + (0 -0)) ;else v72=v80[5 -2 ];end elseif (v81<=(26 -(563 -(83 + 468)))) then if (v81<=(3 + 8)) then if (v81>(248 -(64 + 174))) then if v78[v80[1 + 1 ]] then v72=v72 + (1745 -(1344 + 400)) ;else v72=v80[(1809 -(1202 + 604)) -0 ];end else v78[v80[338 -(144 + 192) ]]=v80[3 + 0 ];end elseif ((v81<=(228 -(42 + 174))) or (2570==1533)) then for v144=v80[2],v80[2 + 1 ] do v78[v144]=nil;end elseif ((v81>(10 + 3)) or (883==1460)) then v78[v80[2 + 0 ]]=v78[v80[2 + 1 ]][v80[4]];else v78[v80[1506 -(363 + 1141) ]]=v78[v80[3]];end elseif (v81<=(1597 -(1183 + 397))) then if ((v81<=((210 -165) -30)) or (4619<=999)) then local v127=v80[2 + (0 -0) ];v78[v127](v13(v78,v127 + 1 + 0 ,v80[1978 -(1913 + 62) ]));elseif (v81==(6 + 10)) then v78[v80[2]]=v78[v80[2 + 1 ]];else local v167=v80[5 -3 ];local v168,v169=v71(v78[v167](v13(v78,v167 + (1934 -(565 + (3787 -2419))) ,v80[(336 -(45 + 280)) -8 ])));v73=(v169 + v167) -(1662 -(1477 + 184)) ;local v170=(0 + 0) -0 ;for v190=v167,v73 do v170=v170 + 1 + 0 ;v78[v190]=v168[v170];end end elseif ((v81<=(9 + 9)) or (3410>4116)) then for v146=v80[858 -(564 + 292) ],v80[4 -(1 + 0) ] do v78[v146]=nil;end elseif (v81==(56 -37)) then v78[v80[(112 + 194) -(244 + 60) ]]=v63[v80[472 -(270 + 199) ]];else local v173=v80[2 + 0 ];local v174,v175=v71(v78[v173](v13(v78,v173 + ((1008 + 812) -(580 + 1239)) ,v80[479 -(41 + 435) ])));v73=(v175 + v173) -(1002 -(938 + 12 + 51)) ;local v176=0 + 0 ;for v193=v173,v73 do local v194=1125 -((1733 -797) + 189) ;while true do if (v194==(0 + 0)) then v176=v176 + (1614 -(1565 + 48)) ;v78[v193]=v174[v176];break;end end end end elseif ((v81<=(19 + 11)) or (903>=3059)) then if (v81<=(1163 -(782 + 356))) then if (v81<=(289 -(176 + 91))) then if (v81==(54 -33)) then if ((v78[v80[2 -0 ]]==v80[(3007 -(340 + 1571)) -(975 + 47 + 70) ]) or (3976<2857)) then v72=v72 + (1876 -((1929 -(1733 + 39)) + 1718)) ;else v72=v80[(8 -5) + 0 ];end else local v128=0 -0 ;local v129;local v130;while true do if (v128==(3 -2)) then v78[v129 + 1 ]=v130;v78[v129]=v130[v80[11 -7 ]];break;end if ((4930>2307) and ((1836 -(1045 + (1825 -(125 + 909))))==v128)) then v129=v80[1020 -((2645 -(1096 + 852)) + 321) ];v130=v78[v80[7 -4 ]];v128=1;end end end elseif ((v81<=(528 -(351 + 154))) or (4046<1291)) then v72=v80[5 -2 ];elseif (v81==(54 -30)) then if ((v80[(121 + 147) -((39 -11) + 238) ]==v78[v80[(8 + 0) -4 ]]) or (4241==3545)) then v72=v72 + 1 + 0 ;else v72=v80[5 -2 ];end else v78[v80[5 -3 ]]={};end elseif (v81<=(1254 -(322 + 905))) then if ((v81>(12 + 14)) or (4048>4232)) then v78[v80[613 -((1114 -(409 + 103)) + 9) ]][v80[1192 -(449 + 740) ]]=v80[474 -(381 + 89) ];else v78[v80[238 -(46 + 190) ]]=v80[875 -(826 + 46) ]~=(947 -(245 + 702)) ;end elseif (v81<=(88 -60)) then v78[v80[1 + 1 ]]=v78[v80[1901 -(260 + 1638) ]][v80[444 -((477 -(51 + 44)) + 58) ]];elseif ((v81==(92 -63)) or (1750>=3473)) then v78[v80[2 + 0 ]]();elseif ((3166==3166) and (v80[(1 + 2) -1 ]==v78[v80[11 -7 ]])) then v72=v72 + (1206 -(902 + 303)) ;else v72=v80[5 -2 ];end elseif (v81<=(35 + 0)) then if (v81<=(76 -44)) then if ((1763<3724) and (v81>(1757 -(1668 + 58)))) then local v137=626 -(512 + 114) ;local v138;while true do if (v137==((1317 -(1114 + 203)) + (726 -(228 + 498)))) then v138=v80[1692 -(1121 + 569) ];v78[v138](v13(v78,v138 + (215 -(22 + 192)) ,v80[686 -(483 + 200) ]));break;end end elseif  not v78[v80[(318 + 1147) -(1404 + 59) ]] then v72=v72 + (2 -1) ;else v72=v80[2 + 1 ];end elseif (v81<=(43 -10)) then v78[v80[767 -(468 + 297) ]]=v78[v80[565 -(334 + 228) ]][v78[v80[13 -9 ]]];elseif (v81>(78 -44)) then v78[v80[2 -0 ]][v80[1 + 2 ]]=v80[240 -(78 + 63 + 95) ];else v78[v80[2 + 0 ]]();end elseif (v81<=(97 -59)) then if (v81<=(86 -50)) then local v141=0 + 0 ;local v142;while true do if ((57<=2723) and (v141==(0 + 0))) then v142=v80[5 -3 ];v78[v142](v78[v142 + 1 + (663 -(174 + 489)) ]);break;end end elseif (v81>(20 + 17)) then local v182=v80[(2 -1) + 1 ];v78[v182]=v78[v182](v13(v78,v182 + (1 -0) ,v73));else v78[v80[2]]={};end elseif (v81<=(129 -90)) then if (v78[v80[2 + 0 ]]==v80[167 -(92 + 71) ]) then v72=v72 + 1 + 0 ;else v72=v80[2 + 1 ];end elseif (v81==(67 -27)) then do return;end elseif v78[v80[767 -((2479 -(830 + 1075)) + 191) ]] then v72=v72 + 1 + 0 ;else v72=v80[1436 -(797 + 636) ];end v72=v72 + (4 -3) ;end end;end return v29(v28(),{},v17)(...);end return vv9(),...);
