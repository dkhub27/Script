--[[
 .____                  ________ ___.    _____                           __                
 |    |    __ _______   \_____  \\_ |___/ ____\_ __  ______ ____ _____ _/  |_  ___________ 
 |    |   |  |  \__  \   /   |   \| __ \   __\  |  \/  ___// ___\\__  \\   __\/  _ \_  __ \
 |    |___|  |  // __ \_/    |    \ \_\ \  | |  |  /\___ \\  \___ / __ \|  | (  <_> )  | \/
 |_______ \____/(____  /\_______  /___  /__| |____//____  >\___  >____  /__|  \____/|__|   
         \/          \/         \/    \/                \/     \/     \/                   
          \_Welcome to LuaObfuscator.com   (Alpha 0.10.8) ~  Much Love, Ferib 

]]--

local v0=tonumber;local v1=string.byte;local v2=string.char;local v3=string.sub;local v4=string.gsub;local v5=string.rep;local v6=table.concat;local v7=table.insert;local v8=math.ldexp;local v9=getfenv or function() return _ENV;end ;local v10=setmetatable;local v11=pcall;local v12=select;local v13=unpack or table.unpack ;local v14=tonumber;local function v15(v16,v17,...) local v18=1;local v19;v16=v4(v3(v16,5),"..",function(v30) if (v1(v30,2)==81) then v19=v0(v3(v30,1,1));return "";else local v82=v2(v0(v30,16));if v19 then local v89=v5(v82,v19);v19=nil;return v89;else return v82;end end end);local function v20(v31,v32,v33) if v33 then local v83=(v31/((1 + 1)^(v32-(2 -(958 -(892 + 65))))))%((5 -3)^(((v33-(2 -1)) -(v32-(1 -0))) + ((3 -1) -1))) ;return v83-(v83%((1 -0) -0)) ;else local v84=619 -(555 + 64) ;local v85;while true do if (v84==(931 -(857 + (424 -(87 + 263))))) then v85=(8 -6)^(v32-(569 -(367 + 201))) ;return (((v31%(v85 + v85))>=v85) and (928 -(214 + (893 -(67 + 113))))) or (0 + 0) ;end end end end local function v21() local v34=v1(v16,v18,v18);v18=v18 + 1 ;return v34;end local function v22() local v35=0 + 0 ;local v36;local v37;while true do if (v35==(2 -(1 -0))) then return (v37 * (189 + 67)) + v36 ;end if (v35==((0 + 0) -(997 -(915 + 82)))) then v36,v37=v1(v16,v18,v18 + (954 -(802 + 150)) );v18=v18 + 2 ;v35=2 -1 ;end end end local function v23() local v38,v39,v40,v41=v1(v16,v18,v18 + ((17 -9) -5) );v18=v18 + 3 + 1 ;return (v41 * 16777216) + (v40 * (86188 -(45175 -24523))) + (v39 * (1443 -(186 + 883 + 118))) + v38 ;end local function v24() local v42=v23();local v43=v23();local v44=(1 + 0) -0 ;local v45=(v20(v43,1 + 0 ,20) * ((793 -(368 + 423))^(100 -68))) + v42 ;local v46=v20(v43,39 -((36 -26) + 8) ,119 -88 );local v47=((v20(v43,474 -(416 + 26) )==(3 -2)) and  -1) or (1 + 0) ;if (v46==(0 -0)) then if (v45==(438 -((514 -369) + (1152 -(814 + 45))))) then return v47 * 0 ;else v46=431 -(44 + 386) ;v44=1486 -(998 + 488) ;end elseif (v46==2047) then return ((v45==(0 + (0 -0))) and (v47 * ((1 + 0)/(772 -(11 + 190 + 571))))) or (v47 * NaN) ;end return v8(v47,v46-1023 ) * (v44 + (v45/((1140 -(116 + 1022))^(216 -164)))) ;end local function v25(v48) local v49;if  not v48 then local v86=0 + 0 ;while true do if (v86==(885 -(261 + 624))) then v48=v23();if (v48==(0 -0)) then return "";end break;end end end v49=v3(v16,v18,(v18 + v48) -(1081 -(1020 + 60)) );v18=v18 + v48 ;local v50={};for v65=(4825 -3401) -(630 + 793) , #v49 do v50[v65]=v2(v1(v3(v49,v65,v65)));end return v6(v50);end local v26=v23;local function v27(...) return {...},v12("#",...);end local function v28() local v51=(function() return 0 + 0 ;end)();local v52=(function() return;end)();local v53=(function() return;end)();local v54=(function() return;end)();local v55=(function() return;end)();local v56=(function() return;end)();local v57=(function() return;end)();local v58=(function() return;end)();while true do local v67=(function() return 0;end)();while true do if (v67==0) then if (v51==1) then local v96=(function() return 0;end)();while true do if (v96==1) then v58=(function() return {};end)();for v107= #",",v57 do local v108=(function() return 1822 -(301 + 1521) ;end)();local v109=(function() return;end)();local v110=(function() return;end)();local v111=(function() return;end)();while true do if (v108==1) then v111=(function() return nil;end)();while true do if (v109==(1 -0)) then if (v110== #"\\") then v111=(function() return v21()~=0 ;end)();elseif (v110==2) then v111=(function() return v24();end)();elseif (v110== #"19(") then v111=(function() return v25();end)();end v58[v107]=(function() return v111;end)();break;end if ((0 + 0)==v109) then local v124=(function() return 0;end)();while true do if (v124~=(0 -0)) then else v110=(function() return v21();end)();v111=(function() return nil;end)();v124=(function() return 1;end)();end if (v124==(2 -1)) then v109=(function() return 1;end)();break;end end end end break;end if (v108==(1700 -(1419 + 281))) then v109=(function() return 0 -0 ;end)();v110=(function() return nil;end)();v108=(function() return 1;end)();end end end v96=(function() return 2;end)();end if ((76 -(71 + 3))==v96) then v51=(function() return 2 + 0 ;end)();break;end if (v96~=0) then else v56=(function() return {v53,v54,nil,v55};end)();v57=(function() return v23();end)();v96=(function() return 2 -1 ;end)();end end end if (v51==(2 -0)) then v56[ #"19("]=(function() return v21();end)();for v100= #",",v23() do local v101=(function() return v21();end)();if (v20(v101, #">", #"/")~=(241 -(187 + 54))) then else local v103=(function() return 780 -(162 + 618) ;end)();local v104=(function() return;end)();local v105=(function() return;end)();local v106=(function() return;end)();while true do if (v103==(1 + 0)) then local v112=(function() return 0 + 0 ;end)();while true do if (0~=v112) then else local v122=(function() return 0 -0 ;end)();while true do if (v122==(0 -0)) then v106=(function() return {v22(),v22(),nil,nil};end)();if (v104==0) then local v295=(function() return 0 + 0 ;end)();local v296=(function() return;end)();while true do if (v295==(1636 -(1373 + 263))) then v296=(function() return 0;end)();while true do if (v296==(1000 -(451 + 549))) then v106[ #"gha"]=(function() return v22();end)();v106[ #"?id="]=(function() return v22();end)();break;end end break;end end elseif (v104== #"|") then v106[ #"xxx"]=(function() return v23();end)();elseif (v104==(1 + 1)) then v106[ #"91("]=(function() return v23() -((2 -0)^(26 -10)) ;end)();elseif (v104~= #"-19") then else local v355=(function() return 0;end)();local v356=(function() return;end)();while true do if (v355==(1384 -(746 + 638))) then v356=(function() return 0;end)();while true do if (v356==0) then v106[ #"91("]=(function() return v23() -((1 + 1)^16) ;end)();v106[ #"xnxx"]=(function() return v22();end)();break;end end break;end end end v122=(function() return 1 -0 ;end)();end if (v122~=(342 -(218 + 123))) then else v112=(function() return 1;end)();break;end end end if (v112~=(1582 -(1535 + 46))) then else v103=(function() return 2;end)();break;end end end if (v103~=2) then else if (v20(v105, #" ", #"]")~= #"}") then else v106[2]=(function() return v58[v106[2]];end)();end if (v20(v105,2,2)~= #"/") then else v106[ #"91("]=(function() return v58[v106[ #"xnx"]];end)();end v103=(function() return 3;end)();end if (0~=v103) then else v104=(function() return v20(v101,2 + 0 , #"19(");end)();v105=(function() return v20(v101, #"?id=",6);end)();v103=(function() return 1 + 0 ;end)();end if (v103~=3) then else if (v20(v105, #"-19", #"xxx")== #"!") then v106[ #"http"]=(function() return v58[v106[ #"xnxx"]];end)();end v53[v100]=(function() return v106;end)();break;end end end end for v102= #":",v23() do v54,v102,v28=(function() return v52(v54,v102,v28);end)();end return v56;end v67=(function() return 1;end)();end if (1==v67) then if ((560 -(306 + 254))==v51) then local v98=(function() return 0 + 0 ;end)();local v99=(function() return;end)();while true do if (0==v98) then v99=(function() return 0 -0 ;end)();while true do if (0~=v99) then else v52=(function() return function(v117,v118,v119) local v120=(function() return 1467 -(899 + 568) ;end)();local v121=(function() return;end)();while true do if (v120==0) then v121=(function() return 0;end)();while true do if (v121~=(0 + 0)) then else local v297=(function() return 0;end)();while true do if (v297~=(0 -0)) then else v117[v118-#"}" ]=(function() return v119();end)();return v117,v118,v119;end end end end break;end end end;end)();v53=(function() return {};end)();v99=(function() return 1;end)();end if (v99==(604 -(268 + 335))) then v54=(function() return {};end)();v55=(function() return {};end)();v99=(function() return 2;end)();end if (v99~=(292 -(60 + 230))) then else v51=(function() return 573 -(426 + 146) ;end)();break;end end break;end end end break;end end end end local function v29(v59,v60,v61) local v62=v59[(1157 -(1074 + 82)) + (0 -0) ];local v63=v59[1458 -(282 + 1174) ];local v64=v59[3];return function(...) local v68=v62;local v69=v63;local v70=v64;local v71=v27;local v72=812 -(569 + 242) ;local v73= -1;local v74={};local v75={...};local v76=v12("#",...) -(1 + 0) ;local v77={};local v78={};for v87=0,v76 do if ((v87>=v70) or (2652<=1533)) then v74[v87-v70 ]=v75[v87 + (1025 -(706 + (2102 -(214 + 1570)))) ];else v78[v87]=v75[v87 + ((2707 -(990 + 465)) -(721 + 530)) ];end end local v79=(v76-v70) + ((525 + 747) -(945 + 326)) ;local v80;local v81;while true do local v88=0 -0 ;while true do if ((1 + 0)==v88) then if (v81<=(731 -(271 + 429))) then if (v81<=15) then if (v81<=(7 + 0)) then if (v81<=(1503 -(1408 + 92))) then if ((v81<=(1087 -(461 + 272 + 353))) or (3598<1460)) then if (v81==0) then local v125=v80[2];v78[v125](v13(v78,v125 + (1289 -(993 + 295)) ,v80[1 + 2 ]));else do return v78[v80[1173 -(418 + 753) ]];end end elseif ((v81==(1 + 1)) or (4116<1192)) then v72=v80[1 + 2 ];else local v127=0 + 0 ;local v128;local v129;while true do if (v127==1) then for v312=1 + 0 , #v77 do local v313=529 -(406 + 123) ;local v314;while true do if ((1769 -(1749 + 20 + 0))==v313) then v314=v77[v312];for v348=0 + 0 , #v314 do local v349=1322 -(1249 + (287 -214)) ;local v350;local v351;local v352;while true do if (v349==(0 + 0)) then v350=v314[v348];v351=v350[1146 -(466 + 679) ];v349=2 -1 ;end if ((v349==(2 -(1727 -(1668 + 58)))) or (3377<=903)) then v352=v350[1902 -(106 + 1794) ];if ((v351==v78) and (v352>=v128)) then v129[v352]=v351[v352];v350[627 -(512 + 114) ]=v129;end break;end end end break;end end end break;end if (v127==(0 + 0)) then v128=v80[1 + 1 ];v129={};v127=2 -1 ;end end end elseif ((3976>=439) and (v81<=(13 -8))) then if (v81==((307 -189) -(4 + 110))) then for v235=v80[2],v80[587 -(57 + 527) ] do v78[v235]=nil;end else local v130=1427 -(41 + 1386) ;local v131;local v132;local v133;local v134;while true do if ((3752==3752) and ((103 -(17 + 86))==v130)) then v131=v80[2];v132,v133=v71(v78[v131](v13(v78,v131 + (1 -0) + 0 ,v80[3])));v130=1 -0 ;end if ((6 -4)==v130) then for v315=v131,v73 do v134=v134 + (2 -(1 + 0)) ;v78[v315]=v132[v134];end break;end if (v130==(167 -(122 + 44))) then v73=(v133 + v131) -(1 -(0 + 0)) ;v134=0 -0 ;v130=2 + 0 + 0 ;end end end elseif ((4046>2695) and (v81>(1 + 5))) then local v135=v80[3 -1 ];v78[v135]=v78[v135](v13(v78,v135 + (66 -(30 + 35)) ,v80[3 + 0 ]));else local v137=v80[1259 -(1043 + 214) ];local v138={v78[v137](v78[v137 + 1 ])};local v139=1212 -(323 + 889) ;for v237=v137,v80[10 -6 ] do local v238=(1956 -1376) -(361 + 219) ;while true do if (v238==(320 -(53 + 267))) then v139=v139 + 1 + 0 ;v78[v237]=v138[v139];break;end end end end elseif (v81<=(424 -(15 + 398))) then if ((v81<=9) or (3545==3197)) then if (v81==(990 -(18 + 964))) then if (v78[v80[7 -(1999 -(109 + 1885)) ]]==v80[3 + (1470 -(1269 + 200)) ]) then v72=v72 + 1 ;else v72=v80[5 -2 ];end else v72=v80[3];end elseif ((2394>373) and (v81>(7 + 3))) then if (v78[v80[817 -(98 + 717) ]]==v78[v80[854 -(20 + 830) ]]) then v72=v72 + 1 + 0 ;else v72=v80[129 -(116 + 10) ];end else local v141=v69[v80[1 + 2 ]];local v142;local v143={};v142=v10({},{__index=function(v239,v240) local v241=v143[v240];return v241[739 -(542 + 196) ][v241[3 -1 ]];end,__newindex=function(v242,v243,v244) local v245=0 + 0 ;local v246;while true do if (v245==(0 + 0)) then v246=v143[v243];v246[1 + 0 ][v246[4 -2 ]]=v244;break;end end end});for v247=1,v80[(835 -(802 + 24)) -5 ] do v72=v72 + (1552 -(1126 + 425)) ;local v248=v68[v72];if ((4155<=4232) and (v248[1]==(443 -(118 + 287)))) then v143[v247-(3 -(2 -0)) ]={v78,v248[380 -(142 + 235) ]};else v143[v247-(4 -3) ]={v60,v248[5 -2 ]};end v77[ #v77 + 1 ]=v143;end v78[v80[2 + 0 ]]=v29(v141,v142,v61);end elseif (v81<=((15 -2) + 0)) then if (v81>12) then local v145=v80[2 + 0 ];local v146={};for v250=1 + 0 , #v77 do local v251=v77[v250];for v277=0, #v251 do local v278=v251[v277];local v279=v278[1 + 0 ];local v280=v278[4 -2 ];if ((v279==v78) and (v280>=v145)) then local v322=0;while true do if (v322==0) then v146[v280]=v279[v280];v278[2 -1 ]=v146;break;end end end end end else v78[v80[4 -(1 + 1) ]]=v80[1 + 0 + 2 ]~=0 ;end elseif (v81==((12 + 55) -53)) then v78[v80[755 -(239 + 514) ]][v80[3]]=v80[2 + 2 ];elseif (v78[v80[1331 -(172 + 625 + 532) ]]==v78[v80[3 + 1 ]]) then v72=v72 + 1 ;else v72=v80[2 + 1 ];end elseif ((v81<=(53 -(83 -53))) or (3581==3473)) then if (v81<=(1221 -(373 + 829))) then if (v81<=(748 -(476 + 255))) then if (v81>16) then v78[v80[1132 -(369 + 761) ]]={};else v78[v80[2 + 0 ]]=v80[5 -2 ];end elseif ((4995>3348) and (v81>18)) then local v153=v80[3 -(3 -2) ];v78[v153]=v78[v153](v13(v78,v153 + (239 -(64 + 174)) ,v73));else local v155=v80[1 + 0 + 1 ];do return v13(v78,v155,v155 + v80[3 -(0 + 0) ] );end end elseif (v81<=(357 -(144 + 192))) then if (v81==20) then if ((v80[(180 + 38) -(42 + 127 + 47) ]==v78[v80[4 + 0 ]]) or (754>3724)) then v72=v72 + 1 + 0 ;else v72=v80[2 + 1 ];end else do return;end end elseif (v81==(1526 -(170 + 193 + 1141))) then local v156=1580 -(1183 + 397) ;local v157;local v158;local v159;while true do if (v156==1) then v159=0 -0 ;for v323=v157,v80[4] do local v324=0 + 0 ;while true do if (v324==0) then v159=v159 + 1 + 0 ;v78[v323]=v158[v159];break;end end end break;end if ((217>=57) and (v156==(1975 -(1913 + 62)))) then v157=v80[2];v158={v78[v157](v78[v157 + 1 ])};v156=1 + (0 -0) ;end end else v78[v80[5 -3 ]]=v61[v80[1622 -(1427 + 192) ]];end elseif ((v81<=(10 + 17)) or (2070>=4037)) then if (v81<=(1958 -(565 + 1368))) then if (v81==(90 -66)) then for v252=v80[1663 -(1477 + (426 -242)) ],v80[3 -0 ] do v78[v252]=nil;end else v78[v80[2 + 0 ]]=v78[v80[859 -(564 + 292) ]][v78[v80[6 -2 ]]];end elseif (v81>((71 + 7) -52)) then v78[v80[2]]=v78[v80[307 -(244 + 60) ]][v78[v80[4 + 0 ]]];else v78[v80[2]]=v80[3]~=(0 + 0) ;end elseif (v81<=(505 -(41 + 435))) then if ((2705==2705) and (v81>28)) then v78[v80[2]]=v78[v80[1004 -((1264 -(192 + 134)) + 63) ]];elseif (v78[v80[2 + 0 ]]==v80[4]) then v72=v72 + (1277 -(316 + 960)) ;else v72=v80[1128 -(936 + 189) ];end elseif (v81==(10 + 20)) then v78[v80[(899 + 716) -(1565 + 48) ]]=v60[v80[2 + 0 + 1 ]];else v78[v80[1140 -(782 + 356) ]]=v78[v80[270 -(176 + 91) ]][v80[10 -6 ]];end elseif (v81<=(68 -21)) then if ((61==61) and (v81<=(1131 -(902 + 73 + 117)))) then if (v81<=(1910 -(157 + 1718))) then if (v81<=(27 + 6)) then if ((v81==(113 -(309 -228))) or (699>=1296)) then if  not v78[v80[2]] then v72=v72 + (3 -2) ;else v72=v80[3];end else v78[v80[1020 -(697 + 321) ]]=v60[v80[3]];end elseif ((v81>(92 -58)) or (1783>=3616)) then do return;end elseif ((v80[553 -(83 + 468) ]==v78[v80[(1814 -(1202 + 604)) -4 ]]) or (3913>4527)) then v72=v72 + (2 -1) ;else v72=v80[2 + 1 ];end elseif (v81<=(69 -32)) then if (v81==(96 -60)) then local v175=v80[1229 -(322 + 905) ];v78[v175]=v78[v175](v13(v78,v175 + (612 -(602 + 9)) ,v80[3]));elseif ((4376>817) and  not v78[v80[1191 -(449 + 740) ]]) then v72=v72 + (873 -(826 + 46)) ;else v72=v80[950 -(245 + (3277 -2575)) ];end elseif (v81==(119 -81)) then v78[v80[1 + 1 ]]=v78[v80[4 -1 ]];else local v179=v80[1900 -(260 + 1638) ];local v180={v78[v179](v13(v78,v179 + (3 -2) ,v80[3]))};local v181=0 + 0 ;for v254=v179,v80[8 -4 ] do v181=v181 + (2 -1) ;v78[v254]=v180[v181];end end elseif (v81<=(1248 -(902 + 303))) then if ((4861>824) and (v81<=(89 -48))) then if (v81>(96 -56)) then local v182=v80[1 + (2 -1) ];v78[v182]=v78[v182]();else v78[v80[1692 -(1121 + 569) ]]=v61[v80[217 -(22 + 192) ]];end elseif (v81==(725 -((808 -(45 + 280)) + 200))) then local v186=v80[1465 -(1404 + 59) ];v78[v186]=v78[v186](v13(v78,v186 + (2 -1) ,v73));else local v188=v69[v80[3 -0 ]];local v189;local v190={};v189=v10({},{__index=function(v257,v258) local v259=765 -(468 + 297) ;local v260;while true do if (v259==(562 -(334 + 228))) then v260=v190[v258];return v260[3 -2 ][v260[4 -2 ]];end end end,__newindex=function(v261,v262,v263) local v264=0 -0 ;local v265;while true do if ((v264==(0 + 0)) or (1383>=2131)) then v265=v190[v262];v265[237 -(141 + 95) ][v265[2 + 0 ]]=v263;break;end end end});for v266=2 -1 ,v80[9 -5 ] do local v267=0;local v268;while true do if ((v267==(1 + 0)) or (1876>=2541)) then if ((1782<=3772) and (v268[1]==(104 -66))) then v190[v266-(1 + 0) ]={v78,v268[2 + 1 ]};else v190[v266-((144 + 20) -(92 + 26 + 45)) ]={v60,v268[768 -(574 + 191) ]};end v77[ #v77 + (1 -0) + 0 ]=v190;break;end if ((v267==(0 -0)) or (4700<813)) then v72=v72 + 1 + 0 ;v268=v68[v72];v267=850 -(254 + 595) ;end end end v78[v80[2]]=v29(v188,v189,v61);end elseif ((3199<4050) and (v81<=(171 -(55 + 71)))) then if (v81==(57 -13)) then v78[v80[1792 -((2484 -(340 + 1571)) + 1217) ]][v80[3]]=v80[10 -(3 + 3) ];else local v194=0 + 0 ;local v195;local v196;while true do if (v194==0) then v195=v80[2 -0 ];v196=v78[v80[942 -(714 + 225) ]];v194=2 -1 ;end if (v194==(1 -0)) then v78[v195 + 1 ]=v196;v78[v195]=v196[v80[1 + 3 ]];break;end end end elseif (v81>(65 -19)) then local v197=806 -(118 + (2460 -(1733 + 39))) ;local v198;local v199;local v200;while true do if ((49 -(25 + 23))==v197) then v200=0 + 0 ;for v330=v198,v80[1890 -((2547 -1620) + 959) ] do v200=v200 + (3 -2) ;v78[v330]=v199[v200];end break;end if (v197==(732 -(16 + (1750 -(125 + 909))))) then v198=v80[3 -1 ];v199={v78[v198](v13(v78,v198 + (2 -1) ,v80[288 -(175 + 110) ]))};v197=1949 -(1096 + 852) ;end end else local v201=0 -0 ;local v202;while true do if ((v201==(0 -0)) or (4951<4430)) then v202=v80[1798 -(503 + 1293) ];v78[v202](v78[v202 + 1 ]);break;end end end elseif (v81<=55) then if ((96==96) and (v81<=(142 -(41 + 50)))) then if (v81<=(36 + 13)) then if ((v81==48) or (2739>4008)) then local v203=1061 -((1156 -346) + 251) ;local v204;local v205;local v206;local v207;while true do if ((2 + 0)==v203) then for v333=v204,v73 do local v334=0 + 0 ;while true do if ((v334==0) or (23==1134)) then v207=v207 + 1 + 0 ;v78[v333]=v205[v207];break;end end end break;end if ((533 -(42 + 1 + 490))==v203) then v204=v80[(1247 -(409 + 103)) -((947 -(46 + 190)) + 22) ];v205,v206=v71(v78[v204](v13(v78,v204 + ((98 -(51 + 44)) -2) ,v80[3])));v203=1;end if (1==v203) then v73=(v206 + v204) -(860 -(240 + 619)) ;v207=0 + 0 ;v203=(1 + 1) -0 ;end end else local v208=v80[1 + 1 ];v78[v208]=v78[v208]();end elseif (v81>((3111 -(1114 + 203)) -(1344 + (1126 -(228 + 498))))) then v78[v80[2]]={};else local v211=0;local v212;while true do if (v211==0) then v212=v80[407 -(56 + 199 + 83 + 67) ];v78[v212](v13(v78,v212 + (664 -(174 + 489)) + 0 ,v80[2 + (2 -1) ]));break;end end end elseif (v81<=(226 -173)) then if (v81==52) then local v213=v80[6 -(1909 -(830 + 1075)) ];local v214=v80[1743 -(404 + 1335) ];local v215=v213 + 2 ;local v216={v78[v213](v78[v213 + (1 -0) ],v78[v215])};for v269=1 + 0 ,v214 do v78[v215 + v269 ]=v216[v269];end local v217=v216[1 + 0 ];if v217 then v78[v215]=v217;v72=v80[340 -(10 + 327) ];else v72=v72 + 1 + 0 ;end else v78[v80[340 -(118 + 220) ]]=v78[v80[1 + 2 ]][v80[4]];end elseif ((v81==54) or (2693>=4111)) then local v220=v80[451 -(108 + 341) ];v78[v220](v78[v220 + 1 + 0 ]);else v60[v80[12 -9 ]]=v78[v80[1495 -(711 + 782) ]];end elseif (v81<=(112 -53)) then if ((v81<=(526 -(270 + 199))) or (4316<=2146)) then if (v81==56) then if v78[v80[1 + 1 ]] then v72=v72 + (1820 -(580 + 1239)) ;else v72=v80[8 -5 ];end elseif (v78[v80[2 + 0 ]] or (3546<=2809)) then v72=v72 + (525 -(303 + 221)) + 0 ;else v72=v80[2 + 1 ];end elseif ((4904>2166) and (v81==(151 -93))) then v60[v80[2 + 1 ]]=v78[v80[(2438 -(231 + 1038)) -(645 + 522) ]];else do return v78[v80[1792 -(1010 + 780) ]];end end elseif (v81<=(61 + 0 + 0)) then if ((109>=90) and (v81>(285 -225))) then local v225=v80[5 -3 ];local v226=v78[v80[1839 -(1045 + 791) ]];v78[v225 + (2 -1) ]=v226;v78[v225]=v226[v80[5 -1 ]];else local v230=v80[507 -(351 + 154) ];local v231=v80[4];local v232=v230 + (1576 -(1281 + 293)) ;local v233={v78[v230](v78[v230 + 1 ],v78[v232])};for v272=1,v231 do v78[v232 + v272 ]=v233[v272];end local v234=v233[267 -((1190 -(171 + 991)) + 238) ];if v234 then v78[v232]=v234;v72=v80[6 -3 ];else v72=v72 + (1560 -(1381 + 178)) ;end end elseif (v81<=(59 + 3)) then v78[v80[2 + 0 ]]();elseif (v81>(27 + 36)) then v78[v80[6 -4 ]]();else v78[v80[2 + (0 -0) ]]=v80[473 -(381 + 89) ];end v72=v72 + 1 + 0 ;break;end if ((4978>2905) and (v88==0)) then v80=v68[v72];v81=v80[1 + 0 ];v88=1 -0 ;end end end end;end return v29(v28(),{},v17)(...);end return v15("LOL!",v9(),...);
